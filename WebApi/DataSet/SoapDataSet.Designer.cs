//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WebApi.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SoapDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SoapDataSet : global::System.Data.DataSet {
        
        private PatientVisitsDataTable tablePatientVisits;
        
        private AncillaryProceduresDataTable tableAncillaryProcedures;
        
        private DrugHistoriesDataTable tableDrugHistories;
        
        private ROMsDataTable tableROMs;
        
        private ROM2DataTable tableROM2;
        
        private MMTsDataTable tableMMTs;
        
        private SensoryAxesDataTable tableSensoryAxes;
        
        private CranialNerveAssmtsDataTable tableCranialNerveAssmts;
        
        private CoordinationAssmtsDataTable tableCoordinationAssmts;
        
        private MBMsDataTable tableMBMs;
        
        private global::System.Data.DataRelation _relationFK_dbo_AncillaryProcedures_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.DataRelation _relationFK_dbo_DrugHistories_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.DataRelation _relationFK_dbo_ROMs_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.DataRelation _relationFK_dbo_ROM2_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.DataRelation _relationFK_dbo_MMTs_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.DataRelation _relationFK_dbo_SensoryAxes_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.DataRelation _relationFK_dbo_CranialNerveAssmts_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.DataRelation _relationFK_dbo_CoordinationAssmts_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.DataRelation _relationFK_dbo_MBMs_dbo_PatientVisits_PatientVisitId;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SoapDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SoapDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PatientVisits"] != null)) {
                    base.Tables.Add(new PatientVisitsDataTable(ds.Tables["PatientVisits"]));
                }
                if ((ds.Tables["AncillaryProcedures"] != null)) {
                    base.Tables.Add(new AncillaryProceduresDataTable(ds.Tables["AncillaryProcedures"]));
                }
                if ((ds.Tables["DrugHistories"] != null)) {
                    base.Tables.Add(new DrugHistoriesDataTable(ds.Tables["DrugHistories"]));
                }
                if ((ds.Tables["ROMs"] != null)) {
                    base.Tables.Add(new ROMsDataTable(ds.Tables["ROMs"]));
                }
                if ((ds.Tables["ROM2"] != null)) {
                    base.Tables.Add(new ROM2DataTable(ds.Tables["ROM2"]));
                }
                if ((ds.Tables["MMTs"] != null)) {
                    base.Tables.Add(new MMTsDataTable(ds.Tables["MMTs"]));
                }
                if ((ds.Tables["SensoryAxes"] != null)) {
                    base.Tables.Add(new SensoryAxesDataTable(ds.Tables["SensoryAxes"]));
                }
                if ((ds.Tables["CranialNerveAssmts"] != null)) {
                    base.Tables.Add(new CranialNerveAssmtsDataTable(ds.Tables["CranialNerveAssmts"]));
                }
                if ((ds.Tables["CoordinationAssmts"] != null)) {
                    base.Tables.Add(new CoordinationAssmtsDataTable(ds.Tables["CoordinationAssmts"]));
                }
                if ((ds.Tables["MBMs"] != null)) {
                    base.Tables.Add(new MBMsDataTable(ds.Tables["MBMs"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PatientVisitsDataTable PatientVisits {
            get {
                return this.tablePatientVisits;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AncillaryProceduresDataTable AncillaryProcedures {
            get {
                return this.tableAncillaryProcedures;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DrugHistoriesDataTable DrugHistories {
            get {
                return this.tableDrugHistories;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ROMsDataTable ROMs {
            get {
                return this.tableROMs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ROM2DataTable ROM2 {
            get {
                return this.tableROM2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MMTsDataTable MMTs {
            get {
                return this.tableMMTs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SensoryAxesDataTable SensoryAxes {
            get {
                return this.tableSensoryAxes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CranialNerveAssmtsDataTable CranialNerveAssmts {
            get {
                return this.tableCranialNerveAssmts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CoordinationAssmtsDataTable CoordinationAssmts {
            get {
                return this.tableCoordinationAssmts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MBMsDataTable MBMs {
            get {
                return this.tableMBMs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SoapDataSet cln = ((SoapDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PatientVisits"] != null)) {
                    base.Tables.Add(new PatientVisitsDataTable(ds.Tables["PatientVisits"]));
                }
                if ((ds.Tables["AncillaryProcedures"] != null)) {
                    base.Tables.Add(new AncillaryProceduresDataTable(ds.Tables["AncillaryProcedures"]));
                }
                if ((ds.Tables["DrugHistories"] != null)) {
                    base.Tables.Add(new DrugHistoriesDataTable(ds.Tables["DrugHistories"]));
                }
                if ((ds.Tables["ROMs"] != null)) {
                    base.Tables.Add(new ROMsDataTable(ds.Tables["ROMs"]));
                }
                if ((ds.Tables["ROM2"] != null)) {
                    base.Tables.Add(new ROM2DataTable(ds.Tables["ROM2"]));
                }
                if ((ds.Tables["MMTs"] != null)) {
                    base.Tables.Add(new MMTsDataTable(ds.Tables["MMTs"]));
                }
                if ((ds.Tables["SensoryAxes"] != null)) {
                    base.Tables.Add(new SensoryAxesDataTable(ds.Tables["SensoryAxes"]));
                }
                if ((ds.Tables["CranialNerveAssmts"] != null)) {
                    base.Tables.Add(new CranialNerveAssmtsDataTable(ds.Tables["CranialNerveAssmts"]));
                }
                if ((ds.Tables["CoordinationAssmts"] != null)) {
                    base.Tables.Add(new CoordinationAssmtsDataTable(ds.Tables["CoordinationAssmts"]));
                }
                if ((ds.Tables["MBMs"] != null)) {
                    base.Tables.Add(new MBMsDataTable(ds.Tables["MBMs"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePatientVisits = ((PatientVisitsDataTable)(base.Tables["PatientVisits"]));
            if ((initTable == true)) {
                if ((this.tablePatientVisits != null)) {
                    this.tablePatientVisits.InitVars();
                }
            }
            this.tableAncillaryProcedures = ((AncillaryProceduresDataTable)(base.Tables["AncillaryProcedures"]));
            if ((initTable == true)) {
                if ((this.tableAncillaryProcedures != null)) {
                    this.tableAncillaryProcedures.InitVars();
                }
            }
            this.tableDrugHistories = ((DrugHistoriesDataTable)(base.Tables["DrugHistories"]));
            if ((initTable == true)) {
                if ((this.tableDrugHistories != null)) {
                    this.tableDrugHistories.InitVars();
                }
            }
            this.tableROMs = ((ROMsDataTable)(base.Tables["ROMs"]));
            if ((initTable == true)) {
                if ((this.tableROMs != null)) {
                    this.tableROMs.InitVars();
                }
            }
            this.tableROM2 = ((ROM2DataTable)(base.Tables["ROM2"]));
            if ((initTable == true)) {
                if ((this.tableROM2 != null)) {
                    this.tableROM2.InitVars();
                }
            }
            this.tableMMTs = ((MMTsDataTable)(base.Tables["MMTs"]));
            if ((initTable == true)) {
                if ((this.tableMMTs != null)) {
                    this.tableMMTs.InitVars();
                }
            }
            this.tableSensoryAxes = ((SensoryAxesDataTable)(base.Tables["SensoryAxes"]));
            if ((initTable == true)) {
                if ((this.tableSensoryAxes != null)) {
                    this.tableSensoryAxes.InitVars();
                }
            }
            this.tableCranialNerveAssmts = ((CranialNerveAssmtsDataTable)(base.Tables["CranialNerveAssmts"]));
            if ((initTable == true)) {
                if ((this.tableCranialNerveAssmts != null)) {
                    this.tableCranialNerveAssmts.InitVars();
                }
            }
            this.tableCoordinationAssmts = ((CoordinationAssmtsDataTable)(base.Tables["CoordinationAssmts"]));
            if ((initTable == true)) {
                if ((this.tableCoordinationAssmts != null)) {
                    this.tableCoordinationAssmts.InitVars();
                }
            }
            this.tableMBMs = ((MBMsDataTable)(base.Tables["MBMs"]));
            if ((initTable == true)) {
                if ((this.tableMBMs != null)) {
                    this.tableMBMs.InitVars();
                }
            }
            this._relationFK_dbo_AncillaryProcedures_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.AncillaryProcedures_dbo.PatientVisits_PatientVisitId"];
            this._relationFK_dbo_DrugHistories_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.DrugHistories_dbo.PatientVisits_PatientVisitId"];
            this._relationFK_dbo_ROMs_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.ROMs_dbo.PatientVisits_PatientVisitId"];
            this._relationFK_dbo_ROM2_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.ROM2_dbo.PatientVisits_PatientVisitId"];
            this._relationFK_dbo_MMTs_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.MMTs_dbo.PatientVisits_PatientVisitId"];
            this._relationFK_dbo_SensoryAxes_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.SensoryAxes_dbo.PatientVisits_PatientVisitId"];
            this._relationFK_dbo_CranialNerveAssmts_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.CranialNerveAssmts_dbo.PatientVisits_PatientVisitId"];
            this._relationFK_dbo_CoordinationAssmts_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.CoordinationAssmts_dbo.PatientVisits_PatientVisitId"];
            this._relationFK_dbo_MBMs_dbo_PatientVisits_PatientVisitId = this.Relations["FK_dbo.MBMs_dbo.PatientVisits_PatientVisitId"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SoapDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SoapDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePatientVisits = new PatientVisitsDataTable();
            base.Tables.Add(this.tablePatientVisits);
            this.tableAncillaryProcedures = new AncillaryProceduresDataTable();
            base.Tables.Add(this.tableAncillaryProcedures);
            this.tableDrugHistories = new DrugHistoriesDataTable();
            base.Tables.Add(this.tableDrugHistories);
            this.tableROMs = new ROMsDataTable();
            base.Tables.Add(this.tableROMs);
            this.tableROM2 = new ROM2DataTable();
            base.Tables.Add(this.tableROM2);
            this.tableMMTs = new MMTsDataTable();
            base.Tables.Add(this.tableMMTs);
            this.tableSensoryAxes = new SensoryAxesDataTable();
            base.Tables.Add(this.tableSensoryAxes);
            this.tableCranialNerveAssmts = new CranialNerveAssmtsDataTable();
            base.Tables.Add(this.tableCranialNerveAssmts);
            this.tableCoordinationAssmts = new CoordinationAssmtsDataTable();
            base.Tables.Add(this.tableCoordinationAssmts);
            this.tableMBMs = new MBMsDataTable();
            base.Tables.Add(this.tableMBMs);
            this._relationFK_dbo_AncillaryProcedures_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.AncillaryProcedures_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableAncillaryProcedures.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_AncillaryProcedures_dbo_PatientVisits_PatientVisitId);
            this._relationFK_dbo_DrugHistories_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.DrugHistories_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDrugHistories.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_DrugHistories_dbo_PatientVisits_PatientVisitId);
            this._relationFK_dbo_ROMs_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.ROMs_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableROMs.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_ROMs_dbo_PatientVisits_PatientVisitId);
            this._relationFK_dbo_ROM2_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.ROM2_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableROM2.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_ROM2_dbo_PatientVisits_PatientVisitId);
            this._relationFK_dbo_MMTs_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.MMTs_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableMMTs.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_MMTs_dbo_PatientVisits_PatientVisitId);
            this._relationFK_dbo_SensoryAxes_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.SensoryAxes_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSensoryAxes.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_SensoryAxes_dbo_PatientVisits_PatientVisitId);
            this._relationFK_dbo_CranialNerveAssmts_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.CranialNerveAssmts_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCranialNerveAssmts.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_CranialNerveAssmts_dbo_PatientVisits_PatientVisitId);
            this._relationFK_dbo_CoordinationAssmts_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.CoordinationAssmts_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCoordinationAssmts.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_CoordinationAssmts_dbo_PatientVisits_PatientVisitId);
            this._relationFK_dbo_MBMs_dbo_PatientVisits_PatientVisitId = new global::System.Data.DataRelation("FK_dbo.MBMs_dbo.PatientVisits_PatientVisitId", new global::System.Data.DataColumn[] {
                        this.tablePatientVisits.PatientVisitIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableMBMs.PatientVisitIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_MBMs_dbo_PatientVisits_PatientVisitId);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePatientVisits() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAncillaryProcedures() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDrugHistories() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeROMs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeROM2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMMTs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSensoryAxes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCranialNerveAssmts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCoordinationAssmts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMBMs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SoapDataSet ds = new SoapDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PatientVisitsRowChangeEventHandler(object sender, PatientVisitsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AncillaryProceduresRowChangeEventHandler(object sender, AncillaryProceduresRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DrugHistoriesRowChangeEventHandler(object sender, DrugHistoriesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ROMsRowChangeEventHandler(object sender, ROMsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ROM2RowChangeEventHandler(object sender, ROM2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MMTsRowChangeEventHandler(object sender, MMTsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SensoryAxesRowChangeEventHandler(object sender, SensoryAxesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CranialNerveAssmtsRowChangeEventHandler(object sender, CranialNerveAssmtsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CoordinationAssmtsRowChangeEventHandler(object sender, CoordinationAssmtsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MBMsRowChangeEventHandler(object sender, MBMsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PatientVisitsDataTable : global::System.Data.TypedTableBase<PatientVisitsRow> {
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnCivilStatus;
            
            private global::System.Data.DataColumn columnHandedNess;
            
            private global::System.Data.DataColumn columnOccupation;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnReligion;
            
            private global::System.Data.DataColumn columnDateOfConsultation;
            
            private global::System.Data.DataColumn columnPatientType;
            
            private global::System.Data.DataColumn columnGeneralPhysician;
            
            private global::System.Data.DataColumn columnDateOfReferral;
            
            private global::System.Data.DataColumn columnNeurologist;
            
            private global::System.Data.DataColumn columnHPI;
            
            private global::System.Data.DataColumn columnPatientId;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnCityTown;
            
            private global::System.Data.DataColumn columnProvince;
            
            private global::System.Data.DataColumn columnDateOfAdmission;
            
            private global::System.Data.DataColumn columnSurgeon;
            
            private global::System.Data.DataColumn columnDateOfSurgery;
            
            private global::System.Data.DataColumn columnOrthopedic;
            
            private global::System.Data.DataColumn columnCardiologist;
            
            private global::System.Data.DataColumn columnOpthalmologoist;
            
            private global::System.Data.DataColumn columnPulmonologist;
            
            private global::System.Data.DataColumn columnOtherDoctor;
            
            private global::System.Data.DataColumn columnReferringDoctor;
            
            private global::System.Data.DataColumn columnDateOfInitialEvaluation;
            
            private global::System.Data.DataColumn columnDiagnosis;
            
            private global::System.Data.DataColumn columnPMHx_Trauma;
            
            private global::System.Data.DataColumn columnPMHx_Arthritis;
            
            private global::System.Data.DataColumn columnPMHx_HPN;
            
            private global::System.Data.DataColumn columnPMHx_DM;
            
            private global::System.Data.DataColumn columnPMHx_Allergies;
            
            private global::System.Data.DataColumn columnPMHx_Surgery;
            
            private global::System.Data.DataColumn columnPMHx_SurgeryDate;
            
            private global::System.Data.DataColumn columnPMHx_CardiovascularDisease;
            
            private global::System.Data.DataColumn columnPMHx_PulmonaryCondition;
            
            private global::System.Data.DataColumn columnPMHx_NeurologyCondition;
            
            private global::System.Data.DataColumn columnPMHx_Cancer;
            
            private global::System.Data.DataColumn columnPMHx_Others;
            
            private global::System.Data.DataColumn columnFMHx_HypertensionF;
            
            private global::System.Data.DataColumn columnFMHx_HypertensionM;
            
            private global::System.Data.DataColumn columnFMHx_ArthritisF;
            
            private global::System.Data.DataColumn columnFMHx_ArthritisM;
            
            private global::System.Data.DataColumn columnFMHx_DiabetesMellitusF;
            
            private global::System.Data.DataColumn columnFMHx_DiabetesMellitusM;
            
            private global::System.Data.DataColumn columnFMHx_CancerF;
            
            private global::System.Data.DataColumn columnFMHx_CancerM;
            
            private global::System.Data.DataColumn columnFMHx_AsthmaF;
            
            private global::System.Data.DataColumn columnFMHx_AsthmaM;
            
            private global::System.Data.DataColumn columnFMHx_AllergiesF;
            
            private global::System.Data.DataColumn columnFMHx_AllergiesM;
            
            private global::System.Data.DataColumn columnFMHx_NeurologicConditionF;
            
            private global::System.Data.DataColumn columnFMHx_NeurologicConditionM;
            
            private global::System.Data.DataColumn columnFMHx_Others;
            
            private global::System.Data.DataColumn columnFMHx_OthersF;
            
            private global::System.Data.DataColumn columnFMHx_OthersM;
            
            private global::System.Data.DataColumn columnPSEHx_FinancialStatus;
            
            private global::System.Data.DataColumn columnPSEHx_PersonalityType;
            
            private global::System.Data.DataColumn columnPSEHx_LifeStyle;
            
            private global::System.Data.DataColumn columnPSEHx_EducationalAttainment;
            
            private global::System.Data.DataColumn columnPSEHx_LivesWith;
            
            private global::System.Data.DataColumn columnPSEHx_NumberOfOffspring;
            
            private global::System.Data.DataColumn columnPSEHx_Relatives;
            
            private global::System.Data.DataColumn columnPSEHx_OtherLivesWith;
            
            private global::System.Data.DataColumn columnPSEHx_Hobbies;
            
            private global::System.Data.DataColumn columnPSEHx_Sports;
            
            private global::System.Data.DataColumn columnPSEHx_OtherHobbies;
            
            private global::System.Data.DataColumn columnPSEHx_CigaretteSmoker;
            
            private global::System.Data.DataColumn columnPSEHx_AlcoholDrinker;
            
            private global::System.Data.DataColumn columnPSEHx_TypeOfHouse;
            
            private global::System.Data.DataColumn columnPSEHx_OtherTypeOfHouse;
            
            private global::System.Data.DataColumn columnPMHx_TraumaText;
            
            private global::System.Data.DataColumn columnPMHx_DMText;
            
            private global::System.Data.DataColumn columnPMHx_SurgeryText;
            
            private global::System.Data.DataColumn columnPMHx_Hospitalization;
            
            private global::System.Data.DataColumn columnPMHx_HospitalizationText;
            
            private global::System.Data.DataColumn columnPMHx_HospitalizationDate;
            
            private global::System.Data.DataColumn columnPMHx_CardiovascularDiseaseText;
            
            private global::System.Data.DataColumn columnPMHx_PulmonaryConditionText;
            
            private global::System.Data.DataColumn columnPMHx_NeurologyConditionText;
            
            private global::System.Data.DataColumn columnPMHx_ArthritisText;
            
            private global::System.Data.DataColumn columnPMHx_AsthmaDate;
            
            private global::System.Data.DataColumn columnPMHx_Asthma;
            
            private global::System.Data.DataColumn columnRomFindings;
            
            private global::System.Data.DataColumn columnRomSignificance;
            
            private global::System.Data.DataColumn columnMmtFindings;
            
            private global::System.Data.DataColumn columnMmtSignificance;
            
            private global::System.Data.DataColumn columnSensoryFindings;
            
            private global::System.Data.DataColumn columnSensorySignificance;
            
            private global::System.Data.DataColumn columnCranialNerveAssmtFindings;
            
            private global::System.Data.DataColumn columnCranialNerveAssmtSignificance;
            
            private global::System.Data.DataColumn columnCoordinationAssmtFindings;
            
            private global::System.Data.DataColumn columnCoordinationAssmtSignificance;
            
            private global::System.Data.DataColumn columnMbmFindings;
            
            private global::System.Data.DataColumn columnMbmSignificance;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_ChiefComplaint;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_PtTranslation;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_BPBefore;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_BPAfter;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_RRBefore;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_RRAfter;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_PRBefore;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_PRAfter;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_TBefore;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_TAfter;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_Findings;
            
            private global::System.Data.DataColumn columnSubjectiveObjective_Significance;
            
            private global::System.Data.DataColumn columnOcularInspection_Ambulation;
            
            private global::System.Data.DataColumn columnOcularInspection_TADWheelChair;
            
            private global::System.Data.DataColumn columnOcularInspection_TADCruches;
            
            private global::System.Data.DataColumn columnOcularInspection_TADCane;
            
            private global::System.Data.DataColumn columnOcularInspection_TADWalker;
            
            private global::System.Data.DataColumn columnOcularInspection_Alert;
            
            private global::System.Data.DataColumn columnOcularInspection_Coherent;
            
            private global::System.Data.DataColumn columnOcularInspection_Cooperative;
            
            private global::System.Data.DataColumn columnOcularInspection_BodyType;
            
            private global::System.Data.DataColumn columnOcularInspection_Atrophy;
            
            private global::System.Data.DataColumn columnOcularInspection_Swelling;
            
            private global::System.Data.DataColumn columnOcularInspection_Redness;
            
            private global::System.Data.DataColumn columnOcularInspection_Ecchymosis;
            
            private global::System.Data.DataColumn columnOcularInspection_Deformity;
            
            private global::System.Data.DataColumn columnOcularInspection_Wounds;
            
            private global::System.Data.DataColumn columnOcularInspection_Scar;
            
            private global::System.Data.DataColumn columnOcularInspection_PressureSore;
            
            private global::System.Data.DataColumn columnOcularInspection_GaitDeviation;
            
            private global::System.Data.DataColumn columnOcularInspection_Incision;
            
            private global::System.Data.DataColumn columnOcularInspection_ShortnessOfBreathing;
            
            private global::System.Data.DataColumn columnOcularInspection_Others;
            
            private global::System.Data.DataColumn columnPalpation_BodyTemperature;
            
            private global::System.Data.DataColumn columnPalpation_MuscleTone;
            
            private global::System.Data.DataColumn columnPalpation_Edema;
            
            private global::System.Data.DataColumn columnPalpation_Tenderness;
            
            private global::System.Data.DataColumn columnPalpation_Location;
            
            private global::System.Data.DataColumn columnPalpation_Deformity;
            
            private global::System.Data.DataColumn columnPalpation_MuscleGuarding;
            
            private global::System.Data.DataColumn columnPalpation_MuscleSpasm;
            
            private global::System.Data.DataColumn columnPalpation_Subluxation;
            
            private global::System.Data.DataColumn columnPalpation_Dislocation;
            
            private global::System.Data.DataColumn columnCognitiveAssmt_STQuestion;
            
            private global::System.Data.DataColumn columnCognitiveAssmt_STResponse;
            
            private global::System.Data.DataColumn columnCognitiveAssmt_LTQuestion;
            
            private global::System.Data.DataColumn columnCognitiveAssmt_LTResponse;
            
            private global::System.Data.DataColumn columnCognitiveAssmt_Findings;
            
            private global::System.Data.DataColumn columnCognitiveAssmt_Significance;
            
            private global::System.Data.DataColumn columnBalanceTolerance_SittingBalance;
            
            private global::System.Data.DataColumn columnBalanceTolerance_SittingTolerance;
            
            private global::System.Data.DataColumn columnBalanceTolerance_StandingBalance;
            
            private global::System.Data.DataColumn columnBalanceTolerance_StandingTolerance;
            
            private global::System.Data.DataColumn columnBalanceTolerance_Findings;
            
            private global::System.Data.DataColumn columnBalanceTolerance_Significance;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_LeftHand;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_RightHand;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_LeftElbow;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_RightElbow;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_LeftKnee;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_RightKnee;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_LeftFoot;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_RightFoot;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_Findings;
            
            private global::System.Data.DataColumn columnDeepTendonReflex_Significance;
            
            private global::System.Data.DataColumn columnPosturalAssmtFindings;
            
            private global::System.Data.DataColumn columnPosturalAssmtSignificance;
            
            private global::System.Data.DataColumn columnHandGripStrength_T1RightHand;
            
            private global::System.Data.DataColumn columnHandGripStrength_T1LeftHand;
            
            private global::System.Data.DataColumn columnHandGripStrength_T2RightHand;
            
            private global::System.Data.DataColumn columnHandGripStrength_T2LeftHand;
            
            private global::System.Data.DataColumn columnHandGripStrength_T3RightHand;
            
            private global::System.Data.DataColumn columnHandGripStrength_T3LeftHand;
            
            private global::System.Data.DataColumn columnHandGripStrength_AveRightHand;
            
            private global::System.Data.DataColumn columnHandGripStrength_AveLeftHand;
            
            private global::System.Data.DataColumn columnHandGripStrength_Findings;
            
            private global::System.Data.DataColumn columnHandGripStrength_Significance;
            
            private global::System.Data.DataColumn columnVolumetricMeasurement_Right;
            
            private global::System.Data.DataColumn columnVolumetricMeasurement_Left;
            
            private global::System.Data.DataColumn columnVolumetricMeasurement_Difference;
            
            private global::System.Data.DataColumn columnVolumetricMeasurement_Findings;
            
            private global::System.Data.DataColumn columnVolumetricMeasurement_Significance;
            
            private global::System.Data.DataColumn columnAnteriorView_HeadInMidline;
            
            private global::System.Data.DataColumn columnAnteriorView_HeadInMidlineFindings;
            
            private global::System.Data.DataColumn columnAnteriorView_ShouldersInLevel;
            
            private global::System.Data.DataColumn columnAnteriorView_ShouldersInLevelFindings;
            
            private global::System.Data.DataColumn columnAnteriorView_Protrusion;
            
            private global::System.Data.DataColumn columnAnteriorView_ProtrusionFindings;
            
            private global::System.Data.DataColumn columnAnteriorView_Lateralization;
            
            private global::System.Data.DataColumn columnAnteriorView_LateralizationFindings;
            
            private global::System.Data.DataColumn columnAnteriorView_Depression;
            
            private global::System.Data.DataColumn columnAnteriorView_DepressionFindings;
            
            private global::System.Data.DataColumn columnAnteriorView_WaistAngle;
            
            private global::System.Data.DataColumn columnAnteriorView_ArmPosition;
            
            private global::System.Data.DataColumn columnAnteriorView_CarryingAngle;
            
            private global::System.Data.DataColumn columnAnteriorView_ASISLevel;
            
            private global::System.Data.DataColumn columnAnteriorView_PatellaeAlignment;
            
            private global::System.Data.DataColumn columnAnteriorView_KneeAlignment;
            
            private global::System.Data.DataColumn columnAnteriorView_MalleoliLevel;
            
            private global::System.Data.DataColumn columnAnteriorView_ArchesOfFeet;
            
            private global::System.Data.DataColumn columnAnteriorView_FeetAngle;
            
            private global::System.Data.DataColumn columnAnteriorView_FeetAngleFindings;
            
            private global::System.Data.DataColumn columnPosteriorView_HeadInMidline;
            
            private global::System.Data.DataColumn columnPosteriorView_HeadInMidlineFindings;
            
            private global::System.Data.DataColumn columnPosteriorView_ShouldersInLevel;
            
            private global::System.Data.DataColumn columnPosteriorView_ShouldersInLevelFindings;
            
            private global::System.Data.DataColumn columnPosteriorView_SpineScapularLevel;
            
            private global::System.Data.DataColumn columnPosteriorView_SpineScapularLevelFindings;
            
            private global::System.Data.DataColumn columnPosteriorView_SpineInMidline;
            
            private global::System.Data.DataColumn columnPosteriorView_SpineInMidlineFindings;
            
            private global::System.Data.DataColumn columnPosteriorView_WaistLevelAngle;
            
            private global::System.Data.DataColumn columnPosteriorView_ArmPosition;
            
            private global::System.Data.DataColumn columnPosteriorView_IliacCrestlevel;
            
            private global::System.Data.DataColumn columnPosteriorView_PSISLevel;
            
            private global::System.Data.DataColumn columnPosteriorView_GlutealFoldsLevel;
            
            private global::System.Data.DataColumn columnPosteriorView_PoplitealFoassalevel;
            
            private global::System.Data.DataColumn columnPosteriorView_HeelsPosition;
            
            private global::System.Data.DataColumn columnLateralView_EarlobeShoulderAlignment;
            
            private global::System.Data.DataColumn columnLateralView_EarlobeShoulderAlignmentFindings;
            
            private global::System.Data.DataColumn columnLateralView_AcromioIliacAlignment;
            
            private global::System.Data.DataColumn columnLateralView_AcromioIliacAlignmentFindings;
            
            private global::System.Data.DataColumn columnLateralView_SpinalSegments;
            
            private global::System.Data.DataColumn columnLateralView_ShoulderAlignment;
            
            private global::System.Data.DataColumn columnLateralView_PelvicAngle;
            
            private global::System.Data.DataColumn columnLateralView_KneeAlignment;
            
            private global::System.Data.DataColumn columnLateralView_PlumblineAlignment;
            
            private global::System.Data.DataColumn columnLateralView_PlumblineAlignmentFindings;
            
            private global::System.Data.DataColumn columnLateralView_ArchesOfFeet;
            
            private global::System.Data.DataColumn columnGaitAssessment_Asssessment;
            
            private global::System.Data.DataColumn columnGaitAssessment_RInitialLoading;
            
            private global::System.Data.DataColumn columnGaitAssessment_LInitialLoading;
            
            private global::System.Data.DataColumn columnGaitAssessment_RLoadingResponse;
            
            private global::System.Data.DataColumn columnGaitAssessment_LLoadingResponse;
            
            private global::System.Data.DataColumn columnGaitAssessment_RMidStance;
            
            private global::System.Data.DataColumn columnGaitAssessment_LMidStance;
            
            private global::System.Data.DataColumn columnGaitAssessment_RTerminalStance;
            
            private global::System.Data.DataColumn columnGaitAssessment_LTerminalStance;
            
            private global::System.Data.DataColumn columnGaitAssessment_RPreSwing;
            
            private global::System.Data.DataColumn columnGaitAssessment_LPreSwing;
            
            private global::System.Data.DataColumn columnGaitAssessment_RInitialSwing;
            
            private global::System.Data.DataColumn columnGaitAssessment_LInitialPreSwing;
            
            private global::System.Data.DataColumn columnGaitAssessment_RMidSwing;
            
            private global::System.Data.DataColumn columnGaitAssessment_LMidPreSwing;
            
            private global::System.Data.DataColumn columnGaitAssessment_RTerminalSwing;
            
            private global::System.Data.DataColumn columnGaitAssessment_LTerminalSwing;
            
            private global::System.Data.DataColumn columnGaitAssessment_Findings;
            
            private global::System.Data.DataColumn columnGaitAssessment_Significance;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxWriting;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxCleaningHouse;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxCooking;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxEating;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxTurningDoorKnob;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxUsingKeys;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxOpeningBottle;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxBrushingTeeth;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxTyingShoeLace;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxWashingDishes;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxSweepingFloor;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxOthers;
            
            private global::System.Data.DataColumn columnAssessment_Diagnosis;
            
            private global::System.Data.DataColumn columnAssessment_PTImpression;
            
            private global::System.Data.DataColumn columnAssessment_ProblemList;
            
            private global::System.Data.DataColumn columnAssessment_LongTermGoals;
            
            private global::System.Data.DataColumn columnAssessment_ShortTermGoals;
            
            private global::System.Data.DataColumn columnPlan_PTManagement;
            
            private global::System.Data.DataColumn columnPlan_HomeInstruction;
            
            private global::System.Data.DataColumn columnFunctionalAnalysis_AdlsAxOthersText;
            
            private global::System.Data.DataColumn columnCardioPulmonaryAssmt_BodyType;
            
            private global::System.Data.DataColumn columnCardioPulmonaryAssmt_ChestShape;
            
            private global::System.Data.DataColumn columnCardioPulmonaryAssmt_ChestShapeOthers;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SpmMucoid;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SpmFrothy;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SpmMucopurulent;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SpmHemoptysis;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SpmPurulent;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SpmOthers;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SpmOthersText;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_MdShift;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_MdShiftFindings;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_MdShiftSignificance;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_Fremitus;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_FremitusFindings;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_FremitusSignificance;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_ChstExpULE;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_ChstExpMLE;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_ChstExpLLE;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_ChstExpSig;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_Percussion;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_PercussionOthers;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SixMinWalk;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_SixMinWalkFindings;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_StairClimbing;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_StairClimbingFindings;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_ShuttleTest;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_ShuttleTestFindings;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_OtherTest;
            
            private global::System.Data.DataColumn columnPulmonaryAssmt_OtherTestFindings;
            
            private global::System.Data.DataColumn columnCMAxilla_MaxInsT1;
            
            private global::System.Data.DataColumn columnCMAxilla_MaxInsT2;
            
            private global::System.Data.DataColumn columnCMAxilla_MaxInsT3;
            
            private global::System.Data.DataColumn columnCMAxilla_MaxInsAve;
            
            private global::System.Data.DataColumn columnCMAxilla_MaxExpT1;
            
            private global::System.Data.DataColumn columnCMAxilla_MaxExpT2;
            
            private global::System.Data.DataColumn columnCMAxilla_MaxExpT3;
            
            private global::System.Data.DataColumn columnCMAxilla_MaxExpAve;
            
            private global::System.Data.DataColumn columnCMAxilla_DiffT1;
            
            private global::System.Data.DataColumn columnCMAxilla_DiffT2;
            
            private global::System.Data.DataColumn columnCMAxilla_DiffT3;
            
            private global::System.Data.DataColumn columnCMAxilla_DiffAve;
            
            private global::System.Data.DataColumn columnCMXiphoid_MaxInsT1;
            
            private global::System.Data.DataColumn columnCMXiphoid_MaxInsT2;
            
            private global::System.Data.DataColumn columnCMXiphoid_MaxInsT3;
            
            private global::System.Data.DataColumn columnCMXiphoid_MaxInsAve;
            
            private global::System.Data.DataColumn columnCMXiphoid_MaxExpT1;
            
            private global::System.Data.DataColumn columnCMXiphoid_MaxExpT2;
            
            private global::System.Data.DataColumn columnCMXiphoid_MaxExpT3;
            
            private global::System.Data.DataColumn columnCMXiphoid_MaxExpAve;
            
            private global::System.Data.DataColumn columnCMXiphoid_DiffT1;
            
            private global::System.Data.DataColumn columnCMXiphoid_DiffT2;
            
            private global::System.Data.DataColumn columnCMXiphoid_DiffT3;
            
            private global::System.Data.DataColumn columnCMXiphoid_DiffAve;
            
            private global::System.Data.DataColumn columnCMLowerCostal_MaxInsT1;
            
            private global::System.Data.DataColumn columnCMLowerCostal_MaxInsT2;
            
            private global::System.Data.DataColumn columnCMLowerCostal_MaxInsT3;
            
            private global::System.Data.DataColumn columnCMLowerCostal_MaxInsAve;
            
            private global::System.Data.DataColumn columnCMLowerCostal_MaxExpT1;
            
            private global::System.Data.DataColumn columnCMLowerCostal_MaxExpT2;
            
            private global::System.Data.DataColumn columnCMLowerCostal_MaxExpT3;
            
            private global::System.Data.DataColumn columnCMLowerCostal_MaxExpAve;
            
            private global::System.Data.DataColumn columnCMLowerCostal_DiffT1;
            
            private global::System.Data.DataColumn columnCMLowerCostal_DiffT2;
            
            private global::System.Data.DataColumn columnCMLowerCostal_DiffT3;
            
            private global::System.Data.DataColumn columnCMLowerCostal_DiffAve;
            
            private global::System.Data.DataColumn columnAuscultation_Trachael;
            
            private global::System.Data.DataColumn columnAuscultation_Bronchial;
            
            private global::System.Data.DataColumn columnAuscultation_Bronchiovesicular;
            
            private global::System.Data.DataColumn columnAuscultation_Vesicular;
            
            private global::System.Data.DataColumn columnAuscultation_Crackles;
            
            private global::System.Data.DataColumn columnAuscultation_DiminishedBreathSounds;
            
            private global::System.Data.DataColumn columnAuscultation_HighPitchedBronchialBreathing;
            
            private global::System.Data.DataColumn columnAuscultation_LowPitchedBronchialBreathing;
            
            private global::System.Data.DataColumn columnAuscultation_PleuralRub;
            
            private global::System.Data.DataColumn columnAuscultation_Rhonchi;
            
            private global::System.Data.DataColumn columnAuscultation_Stridor;
            
            private global::System.Data.DataColumn columnAuscultation_Wheeze;
            
            private global::System.Data.DataColumn columnAuscultation_Others;
            
            private global::System.Data.DataColumn columnAuscultation_OthersText;
            
            private global::System.Data.DataColumn columnFigureOfEight_Right;
            
            private global::System.Data.DataColumn columnFigureOfEight_Left;
            
            private global::System.Data.DataColumn columnFigureOfEight_Difference;
            
            private global::System.Data.DataColumn columnFigureOfEight_Findings;
            
            private global::System.Data.DataColumn columnFigureOfEight_Significance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsDataTable() {
                this.TableName = "PatientVisits";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PatientVisitsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PatientVisitsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CivilStatusColumn {
                get {
                    return this.columnCivilStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandedNessColumn {
                get {
                    return this.columnHandedNess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OccupationColumn {
                get {
                    return this.columnOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReligionColumn {
                get {
                    return this.columnReligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateOfConsultationColumn {
                get {
                    return this.columnDateOfConsultation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientTypeColumn {
                get {
                    return this.columnPatientType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GeneralPhysicianColumn {
                get {
                    return this.columnGeneralPhysician;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateOfReferralColumn {
                get {
                    return this.columnDateOfReferral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeurologistColumn {
                get {
                    return this.columnNeurologist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HPIColumn {
                get {
                    return this.columnHPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIdColumn {
                get {
                    return this.columnPatientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityTownColumn {
                get {
                    return this.columnCityTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProvinceColumn {
                get {
                    return this.columnProvince;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateOfAdmissionColumn {
                get {
                    return this.columnDateOfAdmission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurgeonColumn {
                get {
                    return this.columnSurgeon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateOfSurgeryColumn {
                get {
                    return this.columnDateOfSurgery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrthopedicColumn {
                get {
                    return this.columnOrthopedic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CardiologistColumn {
                get {
                    return this.columnCardiologist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpthalmologoistColumn {
                get {
                    return this.columnOpthalmologoist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonologistColumn {
                get {
                    return this.columnPulmonologist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDoctorColumn {
                get {
                    return this.columnOtherDoctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReferringDoctorColumn {
                get {
                    return this.columnReferringDoctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateOfInitialEvaluationColumn {
                get {
                    return this.columnDateOfInitialEvaluation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosisColumn {
                get {
                    return this.columnDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_TraumaColumn {
                get {
                    return this.columnPMHx_Trauma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_ArthritisColumn {
                get {
                    return this.columnPMHx_Arthritis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_HPNColumn {
                get {
                    return this.columnPMHx_HPN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_DMColumn {
                get {
                    return this.columnPMHx_DM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_AllergiesColumn {
                get {
                    return this.columnPMHx_Allergies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_SurgeryColumn {
                get {
                    return this.columnPMHx_Surgery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_SurgeryDateColumn {
                get {
                    return this.columnPMHx_SurgeryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_CardiovascularDiseaseColumn {
                get {
                    return this.columnPMHx_CardiovascularDisease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_PulmonaryConditionColumn {
                get {
                    return this.columnPMHx_PulmonaryCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_NeurologyConditionColumn {
                get {
                    return this.columnPMHx_NeurologyCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_CancerColumn {
                get {
                    return this.columnPMHx_Cancer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_OthersColumn {
                get {
                    return this.columnPMHx_Others;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_HypertensionFColumn {
                get {
                    return this.columnFMHx_HypertensionF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_HypertensionMColumn {
                get {
                    return this.columnFMHx_HypertensionM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_ArthritisFColumn {
                get {
                    return this.columnFMHx_ArthritisF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_ArthritisMColumn {
                get {
                    return this.columnFMHx_ArthritisM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_DiabetesMellitusFColumn {
                get {
                    return this.columnFMHx_DiabetesMellitusF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_DiabetesMellitusMColumn {
                get {
                    return this.columnFMHx_DiabetesMellitusM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_CancerFColumn {
                get {
                    return this.columnFMHx_CancerF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_CancerMColumn {
                get {
                    return this.columnFMHx_CancerM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_AsthmaFColumn {
                get {
                    return this.columnFMHx_AsthmaF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_AsthmaMColumn {
                get {
                    return this.columnFMHx_AsthmaM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_AllergiesFColumn {
                get {
                    return this.columnFMHx_AllergiesF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_AllergiesMColumn {
                get {
                    return this.columnFMHx_AllergiesM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_NeurologicConditionFColumn {
                get {
                    return this.columnFMHx_NeurologicConditionF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_NeurologicConditionMColumn {
                get {
                    return this.columnFMHx_NeurologicConditionM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_OthersColumn {
                get {
                    return this.columnFMHx_Others;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_OthersFColumn {
                get {
                    return this.columnFMHx_OthersF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FMHx_OthersMColumn {
                get {
                    return this.columnFMHx_OthersM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_FinancialStatusColumn {
                get {
                    return this.columnPSEHx_FinancialStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_PersonalityTypeColumn {
                get {
                    return this.columnPSEHx_PersonalityType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_LifeStyleColumn {
                get {
                    return this.columnPSEHx_LifeStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_EducationalAttainmentColumn {
                get {
                    return this.columnPSEHx_EducationalAttainment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_LivesWithColumn {
                get {
                    return this.columnPSEHx_LivesWith;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_NumberOfOffspringColumn {
                get {
                    return this.columnPSEHx_NumberOfOffspring;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_RelativesColumn {
                get {
                    return this.columnPSEHx_Relatives;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_OtherLivesWithColumn {
                get {
                    return this.columnPSEHx_OtherLivesWith;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_HobbiesColumn {
                get {
                    return this.columnPSEHx_Hobbies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_SportsColumn {
                get {
                    return this.columnPSEHx_Sports;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_OtherHobbiesColumn {
                get {
                    return this.columnPSEHx_OtherHobbies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_CigaretteSmokerColumn {
                get {
                    return this.columnPSEHx_CigaretteSmoker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_AlcoholDrinkerColumn {
                get {
                    return this.columnPSEHx_AlcoholDrinker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_TypeOfHouseColumn {
                get {
                    return this.columnPSEHx_TypeOfHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PSEHx_OtherTypeOfHouseColumn {
                get {
                    return this.columnPSEHx_OtherTypeOfHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_TraumaTextColumn {
                get {
                    return this.columnPMHx_TraumaText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_DMTextColumn {
                get {
                    return this.columnPMHx_DMText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_SurgeryTextColumn {
                get {
                    return this.columnPMHx_SurgeryText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_HospitalizationColumn {
                get {
                    return this.columnPMHx_Hospitalization;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_HospitalizationTextColumn {
                get {
                    return this.columnPMHx_HospitalizationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_HospitalizationDateColumn {
                get {
                    return this.columnPMHx_HospitalizationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_CardiovascularDiseaseTextColumn {
                get {
                    return this.columnPMHx_CardiovascularDiseaseText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_PulmonaryConditionTextColumn {
                get {
                    return this.columnPMHx_PulmonaryConditionText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_NeurologyConditionTextColumn {
                get {
                    return this.columnPMHx_NeurologyConditionText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_ArthritisTextColumn {
                get {
                    return this.columnPMHx_ArthritisText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_AsthmaDateColumn {
                get {
                    return this.columnPMHx_AsthmaDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PMHx_AsthmaColumn {
                get {
                    return this.columnPMHx_Asthma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RomFindingsColumn {
                get {
                    return this.columnRomFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RomSignificanceColumn {
                get {
                    return this.columnRomSignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MmtFindingsColumn {
                get {
                    return this.columnMmtFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MmtSignificanceColumn {
                get {
                    return this.columnMmtSignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SensoryFindingsColumn {
                get {
                    return this.columnSensoryFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SensorySignificanceColumn {
                get {
                    return this.columnSensorySignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CranialNerveAssmtFindingsColumn {
                get {
                    return this.columnCranialNerveAssmtFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CranialNerveAssmtSignificanceColumn {
                get {
                    return this.columnCranialNerveAssmtSignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoordinationAssmtFindingsColumn {
                get {
                    return this.columnCoordinationAssmtFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoordinationAssmtSignificanceColumn {
                get {
                    return this.columnCoordinationAssmtSignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MbmFindingsColumn {
                get {
                    return this.columnMbmFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MbmSignificanceColumn {
                get {
                    return this.columnMbmSignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_ChiefComplaintColumn {
                get {
                    return this.columnSubjectiveObjective_ChiefComplaint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_PtTranslationColumn {
                get {
                    return this.columnSubjectiveObjective_PtTranslation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_BPBeforeColumn {
                get {
                    return this.columnSubjectiveObjective_BPBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_BPAfterColumn {
                get {
                    return this.columnSubjectiveObjective_BPAfter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_RRBeforeColumn {
                get {
                    return this.columnSubjectiveObjective_RRBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_RRAfterColumn {
                get {
                    return this.columnSubjectiveObjective_RRAfter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_PRBeforeColumn {
                get {
                    return this.columnSubjectiveObjective_PRBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_PRAfterColumn {
                get {
                    return this.columnSubjectiveObjective_PRAfter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_TBeforeColumn {
                get {
                    return this.columnSubjectiveObjective_TBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_TAfterColumn {
                get {
                    return this.columnSubjectiveObjective_TAfter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_FindingsColumn {
                get {
                    return this.columnSubjectiveObjective_Findings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectiveObjective_SignificanceColumn {
                get {
                    return this.columnSubjectiveObjective_Significance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_AmbulationColumn {
                get {
                    return this.columnOcularInspection_Ambulation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_TADWheelChairColumn {
                get {
                    return this.columnOcularInspection_TADWheelChair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_TADCruchesColumn {
                get {
                    return this.columnOcularInspection_TADCruches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_TADCaneColumn {
                get {
                    return this.columnOcularInspection_TADCane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_TADWalkerColumn {
                get {
                    return this.columnOcularInspection_TADWalker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_AlertColumn {
                get {
                    return this.columnOcularInspection_Alert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_CoherentColumn {
                get {
                    return this.columnOcularInspection_Coherent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_CooperativeColumn {
                get {
                    return this.columnOcularInspection_Cooperative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_BodyTypeColumn {
                get {
                    return this.columnOcularInspection_BodyType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_AtrophyColumn {
                get {
                    return this.columnOcularInspection_Atrophy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_SwellingColumn {
                get {
                    return this.columnOcularInspection_Swelling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_RednessColumn {
                get {
                    return this.columnOcularInspection_Redness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_EcchymosisColumn {
                get {
                    return this.columnOcularInspection_Ecchymosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_DeformityColumn {
                get {
                    return this.columnOcularInspection_Deformity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_WoundsColumn {
                get {
                    return this.columnOcularInspection_Wounds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_ScarColumn {
                get {
                    return this.columnOcularInspection_Scar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_PressureSoreColumn {
                get {
                    return this.columnOcularInspection_PressureSore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_GaitDeviationColumn {
                get {
                    return this.columnOcularInspection_GaitDeviation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_IncisionColumn {
                get {
                    return this.columnOcularInspection_Incision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_ShortnessOfBreathingColumn {
                get {
                    return this.columnOcularInspection_ShortnessOfBreathing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OcularInspection_OthersColumn {
                get {
                    return this.columnOcularInspection_Others;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_BodyTemperatureColumn {
                get {
                    return this.columnPalpation_BodyTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_MuscleToneColumn {
                get {
                    return this.columnPalpation_MuscleTone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_EdemaColumn {
                get {
                    return this.columnPalpation_Edema;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_TendernessColumn {
                get {
                    return this.columnPalpation_Tenderness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_LocationColumn {
                get {
                    return this.columnPalpation_Location;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_DeformityColumn {
                get {
                    return this.columnPalpation_Deformity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_MuscleGuardingColumn {
                get {
                    return this.columnPalpation_MuscleGuarding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_MuscleSpasmColumn {
                get {
                    return this.columnPalpation_MuscleSpasm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_SubluxationColumn {
                get {
                    return this.columnPalpation_Subluxation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Palpation_DislocationColumn {
                get {
                    return this.columnPalpation_Dislocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CognitiveAssmt_STQuestionColumn {
                get {
                    return this.columnCognitiveAssmt_STQuestion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CognitiveAssmt_STResponseColumn {
                get {
                    return this.columnCognitiveAssmt_STResponse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CognitiveAssmt_LTQuestionColumn {
                get {
                    return this.columnCognitiveAssmt_LTQuestion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CognitiveAssmt_LTResponseColumn {
                get {
                    return this.columnCognitiveAssmt_LTResponse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CognitiveAssmt_FindingsColumn {
                get {
                    return this.columnCognitiveAssmt_Findings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CognitiveAssmt_SignificanceColumn {
                get {
                    return this.columnCognitiveAssmt_Significance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceTolerance_SittingBalanceColumn {
                get {
                    return this.columnBalanceTolerance_SittingBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceTolerance_SittingToleranceColumn {
                get {
                    return this.columnBalanceTolerance_SittingTolerance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceTolerance_StandingBalanceColumn {
                get {
                    return this.columnBalanceTolerance_StandingBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceTolerance_StandingToleranceColumn {
                get {
                    return this.columnBalanceTolerance_StandingTolerance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceTolerance_FindingsColumn {
                get {
                    return this.columnBalanceTolerance_Findings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceTolerance_SignificanceColumn {
                get {
                    return this.columnBalanceTolerance_Significance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_LeftHandColumn {
                get {
                    return this.columnDeepTendonReflex_LeftHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_RightHandColumn {
                get {
                    return this.columnDeepTendonReflex_RightHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_LeftElbowColumn {
                get {
                    return this.columnDeepTendonReflex_LeftElbow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_RightElbowColumn {
                get {
                    return this.columnDeepTendonReflex_RightElbow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_LeftKneeColumn {
                get {
                    return this.columnDeepTendonReflex_LeftKnee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_RightKneeColumn {
                get {
                    return this.columnDeepTendonReflex_RightKnee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_LeftFootColumn {
                get {
                    return this.columnDeepTendonReflex_LeftFoot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_RightFootColumn {
                get {
                    return this.columnDeepTendonReflex_RightFoot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_FindingsColumn {
                get {
                    return this.columnDeepTendonReflex_Findings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeepTendonReflex_SignificanceColumn {
                get {
                    return this.columnDeepTendonReflex_Significance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosturalAssmtFindingsColumn {
                get {
                    return this.columnPosturalAssmtFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosturalAssmtSignificanceColumn {
                get {
                    return this.columnPosturalAssmtSignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_T1RightHandColumn {
                get {
                    return this.columnHandGripStrength_T1RightHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_T1LeftHandColumn {
                get {
                    return this.columnHandGripStrength_T1LeftHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_T2RightHandColumn {
                get {
                    return this.columnHandGripStrength_T2RightHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_T2LeftHandColumn {
                get {
                    return this.columnHandGripStrength_T2LeftHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_T3RightHandColumn {
                get {
                    return this.columnHandGripStrength_T3RightHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_T3LeftHandColumn {
                get {
                    return this.columnHandGripStrength_T3LeftHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_AveRightHandColumn {
                get {
                    return this.columnHandGripStrength_AveRightHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_AveLeftHandColumn {
                get {
                    return this.columnHandGripStrength_AveLeftHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_FindingsColumn {
                get {
                    return this.columnHandGripStrength_Findings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandGripStrength_SignificanceColumn {
                get {
                    return this.columnHandGripStrength_Significance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumetricMeasurement_RightColumn {
                get {
                    return this.columnVolumetricMeasurement_Right;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumetricMeasurement_LeftColumn {
                get {
                    return this.columnVolumetricMeasurement_Left;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumetricMeasurement_DifferenceColumn {
                get {
                    return this.columnVolumetricMeasurement_Difference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumetricMeasurement_FindingsColumn {
                get {
                    return this.columnVolumetricMeasurement_Findings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumetricMeasurement_SignificanceColumn {
                get {
                    return this.columnVolumetricMeasurement_Significance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_HeadInMidlineColumn {
                get {
                    return this.columnAnteriorView_HeadInMidline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_HeadInMidlineFindingsColumn {
                get {
                    return this.columnAnteriorView_HeadInMidlineFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_ShouldersInLevelColumn {
                get {
                    return this.columnAnteriorView_ShouldersInLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_ShouldersInLevelFindingsColumn {
                get {
                    return this.columnAnteriorView_ShouldersInLevelFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_ProtrusionColumn {
                get {
                    return this.columnAnteriorView_Protrusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_ProtrusionFindingsColumn {
                get {
                    return this.columnAnteriorView_ProtrusionFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_LateralizationColumn {
                get {
                    return this.columnAnteriorView_Lateralization;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_LateralizationFindingsColumn {
                get {
                    return this.columnAnteriorView_LateralizationFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_DepressionColumn {
                get {
                    return this.columnAnteriorView_Depression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_DepressionFindingsColumn {
                get {
                    return this.columnAnteriorView_DepressionFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_WaistAngleColumn {
                get {
                    return this.columnAnteriorView_WaistAngle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_ArmPositionColumn {
                get {
                    return this.columnAnteriorView_ArmPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_CarryingAngleColumn {
                get {
                    return this.columnAnteriorView_CarryingAngle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_ASISLevelColumn {
                get {
                    return this.columnAnteriorView_ASISLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_PatellaeAlignmentColumn {
                get {
                    return this.columnAnteriorView_PatellaeAlignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_KneeAlignmentColumn {
                get {
                    return this.columnAnteriorView_KneeAlignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_MalleoliLevelColumn {
                get {
                    return this.columnAnteriorView_MalleoliLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_ArchesOfFeetColumn {
                get {
                    return this.columnAnteriorView_ArchesOfFeet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_FeetAngleColumn {
                get {
                    return this.columnAnteriorView_FeetAngle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnteriorView_FeetAngleFindingsColumn {
                get {
                    return this.columnAnteriorView_FeetAngleFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_HeadInMidlineColumn {
                get {
                    return this.columnPosteriorView_HeadInMidline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_HeadInMidlineFindingsColumn {
                get {
                    return this.columnPosteriorView_HeadInMidlineFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_ShouldersInLevelColumn {
                get {
                    return this.columnPosteriorView_ShouldersInLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_ShouldersInLevelFindingsColumn {
                get {
                    return this.columnPosteriorView_ShouldersInLevelFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_SpineScapularLevelColumn {
                get {
                    return this.columnPosteriorView_SpineScapularLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_SpineScapularLevelFindingsColumn {
                get {
                    return this.columnPosteriorView_SpineScapularLevelFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_SpineInMidlineColumn {
                get {
                    return this.columnPosteriorView_SpineInMidline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_SpineInMidlineFindingsColumn {
                get {
                    return this.columnPosteriorView_SpineInMidlineFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_WaistLevelAngleColumn {
                get {
                    return this.columnPosteriorView_WaistLevelAngle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_ArmPositionColumn {
                get {
                    return this.columnPosteriorView_ArmPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_IliacCrestlevelColumn {
                get {
                    return this.columnPosteriorView_IliacCrestlevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_PSISLevelColumn {
                get {
                    return this.columnPosteriorView_PSISLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_GlutealFoldsLevelColumn {
                get {
                    return this.columnPosteriorView_GlutealFoldsLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_PoplitealFoassalevelColumn {
                get {
                    return this.columnPosteriorView_PoplitealFoassalevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PosteriorView_HeelsPositionColumn {
                get {
                    return this.columnPosteriorView_HeelsPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_EarlobeShoulderAlignmentColumn {
                get {
                    return this.columnLateralView_EarlobeShoulderAlignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_EarlobeShoulderAlignmentFindingsColumn {
                get {
                    return this.columnLateralView_EarlobeShoulderAlignmentFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_AcromioIliacAlignmentColumn {
                get {
                    return this.columnLateralView_AcromioIliacAlignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_AcromioIliacAlignmentFindingsColumn {
                get {
                    return this.columnLateralView_AcromioIliacAlignmentFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_SpinalSegmentsColumn {
                get {
                    return this.columnLateralView_SpinalSegments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_ShoulderAlignmentColumn {
                get {
                    return this.columnLateralView_ShoulderAlignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_PelvicAngleColumn {
                get {
                    return this.columnLateralView_PelvicAngle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_KneeAlignmentColumn {
                get {
                    return this.columnLateralView_KneeAlignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_PlumblineAlignmentColumn {
                get {
                    return this.columnLateralView_PlumblineAlignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_PlumblineAlignmentFindingsColumn {
                get {
                    return this.columnLateralView_PlumblineAlignmentFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateralView_ArchesOfFeetColumn {
                get {
                    return this.columnLateralView_ArchesOfFeet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_AsssessmentColumn {
                get {
                    return this.columnGaitAssessment_Asssessment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_RInitialLoadingColumn {
                get {
                    return this.columnGaitAssessment_RInitialLoading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_LInitialLoadingColumn {
                get {
                    return this.columnGaitAssessment_LInitialLoading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_RLoadingResponseColumn {
                get {
                    return this.columnGaitAssessment_RLoadingResponse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_LLoadingResponseColumn {
                get {
                    return this.columnGaitAssessment_LLoadingResponse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_RMidStanceColumn {
                get {
                    return this.columnGaitAssessment_RMidStance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_LMidStanceColumn {
                get {
                    return this.columnGaitAssessment_LMidStance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_RTerminalStanceColumn {
                get {
                    return this.columnGaitAssessment_RTerminalStance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_LTerminalStanceColumn {
                get {
                    return this.columnGaitAssessment_LTerminalStance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_RPreSwingColumn {
                get {
                    return this.columnGaitAssessment_RPreSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_LPreSwingColumn {
                get {
                    return this.columnGaitAssessment_LPreSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_RInitialSwingColumn {
                get {
                    return this.columnGaitAssessment_RInitialSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_LInitialPreSwingColumn {
                get {
                    return this.columnGaitAssessment_LInitialPreSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_RMidSwingColumn {
                get {
                    return this.columnGaitAssessment_RMidSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_LMidPreSwingColumn {
                get {
                    return this.columnGaitAssessment_LMidPreSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_RTerminalSwingColumn {
                get {
                    return this.columnGaitAssessment_RTerminalSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_LTerminalSwingColumn {
                get {
                    return this.columnGaitAssessment_LTerminalSwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_FindingsColumn {
                get {
                    return this.columnGaitAssessment_Findings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaitAssessment_SignificanceColumn {
                get {
                    return this.columnGaitAssessment_Significance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxWritingColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxWriting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxCleaningHouseColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxCleaningHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxCookingColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxCooking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxEatingColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxEating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxTurningDoorKnobColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxTurningDoorKnob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxUsingKeysColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxUsingKeys;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxOpeningBottleColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxOpeningBottle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxBrushingTeethColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxBrushingTeeth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxTyingShoeLaceColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxTyingShoeLace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxWashingDishesColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxWashingDishes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxSweepingFloorColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxSweepingFloor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxOthersColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Assessment_DiagnosisColumn {
                get {
                    return this.columnAssessment_Diagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Assessment_PTImpressionColumn {
                get {
                    return this.columnAssessment_PTImpression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Assessment_ProblemListColumn {
                get {
                    return this.columnAssessment_ProblemList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Assessment_LongTermGoalsColumn {
                get {
                    return this.columnAssessment_LongTermGoals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Assessment_ShortTermGoalsColumn {
                get {
                    return this.columnAssessment_ShortTermGoals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Plan_PTManagementColumn {
                get {
                    return this.columnPlan_PTManagement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Plan_HomeInstructionColumn {
                get {
                    return this.columnPlan_HomeInstruction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalAnalysis_AdlsAxOthersTextColumn {
                get {
                    return this.columnFunctionalAnalysis_AdlsAxOthersText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CardioPulmonaryAssmt_BodyTypeColumn {
                get {
                    return this.columnCardioPulmonaryAssmt_BodyType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CardioPulmonaryAssmt_ChestShapeColumn {
                get {
                    return this.columnCardioPulmonaryAssmt_ChestShape;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CardioPulmonaryAssmt_ChestShapeOthersColumn {
                get {
                    return this.columnCardioPulmonaryAssmt_ChestShapeOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SpmMucoidColumn {
                get {
                    return this.columnPulmonaryAssmt_SpmMucoid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SpmFrothyColumn {
                get {
                    return this.columnPulmonaryAssmt_SpmFrothy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SpmMucopurulentColumn {
                get {
                    return this.columnPulmonaryAssmt_SpmMucopurulent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SpmHemoptysisColumn {
                get {
                    return this.columnPulmonaryAssmt_SpmHemoptysis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SpmPurulentColumn {
                get {
                    return this.columnPulmonaryAssmt_SpmPurulent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SpmOthersColumn {
                get {
                    return this.columnPulmonaryAssmt_SpmOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SpmOthersTextColumn {
                get {
                    return this.columnPulmonaryAssmt_SpmOthersText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_MdShiftColumn {
                get {
                    return this.columnPulmonaryAssmt_MdShift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_MdShiftFindingsColumn {
                get {
                    return this.columnPulmonaryAssmt_MdShiftFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_MdShiftSignificanceColumn {
                get {
                    return this.columnPulmonaryAssmt_MdShiftSignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_FremitusColumn {
                get {
                    return this.columnPulmonaryAssmt_Fremitus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_FremitusFindingsColumn {
                get {
                    return this.columnPulmonaryAssmt_FremitusFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_FremitusSignificanceColumn {
                get {
                    return this.columnPulmonaryAssmt_FremitusSignificance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_ChstExpULEColumn {
                get {
                    return this.columnPulmonaryAssmt_ChstExpULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_ChstExpMLEColumn {
                get {
                    return this.columnPulmonaryAssmt_ChstExpMLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_ChstExpLLEColumn {
                get {
                    return this.columnPulmonaryAssmt_ChstExpLLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_ChstExpSigColumn {
                get {
                    return this.columnPulmonaryAssmt_ChstExpSig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_PercussionColumn {
                get {
                    return this.columnPulmonaryAssmt_Percussion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_PercussionOthersColumn {
                get {
                    return this.columnPulmonaryAssmt_PercussionOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SixMinWalkColumn {
                get {
                    return this.columnPulmonaryAssmt_SixMinWalk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_SixMinWalkFindingsColumn {
                get {
                    return this.columnPulmonaryAssmt_SixMinWalkFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_StairClimbingColumn {
                get {
                    return this.columnPulmonaryAssmt_StairClimbing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_StairClimbingFindingsColumn {
                get {
                    return this.columnPulmonaryAssmt_StairClimbingFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_ShuttleTestColumn {
                get {
                    return this.columnPulmonaryAssmt_ShuttleTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_ShuttleTestFindingsColumn {
                get {
                    return this.columnPulmonaryAssmt_ShuttleTestFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_OtherTestColumn {
                get {
                    return this.columnPulmonaryAssmt_OtherTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PulmonaryAssmt_OtherTestFindingsColumn {
                get {
                    return this.columnPulmonaryAssmt_OtherTestFindings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_MaxInsT1Column {
                get {
                    return this.columnCMAxilla_MaxInsT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_MaxInsT2Column {
                get {
                    return this.columnCMAxilla_MaxInsT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_MaxInsT3Column {
                get {
                    return this.columnCMAxilla_MaxInsT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_MaxInsAveColumn {
                get {
                    return this.columnCMAxilla_MaxInsAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_MaxExpT1Column {
                get {
                    return this.columnCMAxilla_MaxExpT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_MaxExpT2Column {
                get {
                    return this.columnCMAxilla_MaxExpT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_MaxExpT3Column {
                get {
                    return this.columnCMAxilla_MaxExpT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_MaxExpAveColumn {
                get {
                    return this.columnCMAxilla_MaxExpAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_DiffT1Column {
                get {
                    return this.columnCMAxilla_DiffT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_DiffT2Column {
                get {
                    return this.columnCMAxilla_DiffT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_DiffT3Column {
                get {
                    return this.columnCMAxilla_DiffT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMAxilla_DiffAveColumn {
                get {
                    return this.columnCMAxilla_DiffAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_MaxInsT1Column {
                get {
                    return this.columnCMXiphoid_MaxInsT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_MaxInsT2Column {
                get {
                    return this.columnCMXiphoid_MaxInsT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_MaxInsT3Column {
                get {
                    return this.columnCMXiphoid_MaxInsT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_MaxInsAveColumn {
                get {
                    return this.columnCMXiphoid_MaxInsAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_MaxExpT1Column {
                get {
                    return this.columnCMXiphoid_MaxExpT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_MaxExpT2Column {
                get {
                    return this.columnCMXiphoid_MaxExpT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_MaxExpT3Column {
                get {
                    return this.columnCMXiphoid_MaxExpT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_MaxExpAveColumn {
                get {
                    return this.columnCMXiphoid_MaxExpAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_DiffT1Column {
                get {
                    return this.columnCMXiphoid_DiffT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_DiffT2Column {
                get {
                    return this.columnCMXiphoid_DiffT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_DiffT3Column {
                get {
                    return this.columnCMXiphoid_DiffT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMXiphoid_DiffAveColumn {
                get {
                    return this.columnCMXiphoid_DiffAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_MaxInsT1Column {
                get {
                    return this.columnCMLowerCostal_MaxInsT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_MaxInsT2Column {
                get {
                    return this.columnCMLowerCostal_MaxInsT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_MaxInsT3Column {
                get {
                    return this.columnCMLowerCostal_MaxInsT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_MaxInsAveColumn {
                get {
                    return this.columnCMLowerCostal_MaxInsAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_MaxExpT1Column {
                get {
                    return this.columnCMLowerCostal_MaxExpT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_MaxExpT2Column {
                get {
                    return this.columnCMLowerCostal_MaxExpT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_MaxExpT3Column {
                get {
                    return this.columnCMLowerCostal_MaxExpT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_MaxExpAveColumn {
                get {
                    return this.columnCMLowerCostal_MaxExpAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_DiffT1Column {
                get {
                    return this.columnCMLowerCostal_DiffT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_DiffT2Column {
                get {
                    return this.columnCMLowerCostal_DiffT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_DiffT3Column {
                get {
                    return this.columnCMLowerCostal_DiffT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMLowerCostal_DiffAveColumn {
                get {
                    return this.columnCMLowerCostal_DiffAve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_TrachaelColumn {
                get {
                    return this.columnAuscultation_Trachael;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_BronchialColumn {
                get {
                    return this.columnAuscultation_Bronchial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_BronchiovesicularColumn {
                get {
                    return this.columnAuscultation_Bronchiovesicular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_VesicularColumn {
                get {
                    return this.columnAuscultation_Vesicular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_CracklesColumn {
                get {
                    return this.columnAuscultation_Crackles;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_DiminishedBreathSoundsColumn {
                get {
                    return this.columnAuscultation_DiminishedBreathSounds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_HighPitchedBronchialBreathingColumn {
                get {
                    return this.columnAuscultation_HighPitchedBronchialBreathing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_LowPitchedBronchialBreathingColumn {
                get {
                    return this.columnAuscultation_LowPitchedBronchialBreathing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_PleuralRubColumn {
                get {
                    return this.columnAuscultation_PleuralRub;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_RhonchiColumn {
                get {
                    return this.columnAuscultation_Rhonchi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_StridorColumn {
                get {
                    return this.columnAuscultation_Stridor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_WheezeColumn {
                get {
                    return this.columnAuscultation_Wheeze;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_OthersColumn {
                get {
                    return this.columnAuscultation_Others;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auscultation_OthersTextColumn {
                get {
                    return this.columnAuscultation_OthersText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FigureOfEight_RightColumn {
                get {
                    return this.columnFigureOfEight_Right;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FigureOfEight_LeftColumn {
                get {
                    return this.columnFigureOfEight_Left;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FigureOfEight_DifferenceColumn {
                get {
                    return this.columnFigureOfEight_Difference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FigureOfEight_FindingsColumn {
                get {
                    return this.columnFigureOfEight_Findings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FigureOfEight_SignificanceColumn {
                get {
                    return this.columnFigureOfEight_Significance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow this[int index] {
                get {
                    return ((PatientVisitsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PatientVisitsRowChangeEventHandler PatientVisitsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PatientVisitsRowChangeEventHandler PatientVisitsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PatientVisitsRowChangeEventHandler PatientVisitsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PatientVisitsRowChangeEventHandler PatientVisitsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPatientVisitsRow(PatientVisitsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow AddPatientVisitsRow(
                        string FirstName, 
                        string LastName, 
                        int Age, 
                        string CivilStatus, 
                        string HandedNess, 
                        string Occupation, 
                        string Address, 
                        string Religion, 
                        System.DateTime DateOfConsultation, 
                        string PatientType, 
                        string GeneralPhysician, 
                        System.DateTime DateOfReferral, 
                        string Neurologist, 
                        string HPI, 
                        int PatientId, 
                        string Sex, 
                        string CityTown, 
                        string Province, 
                        System.DateTime DateOfAdmission, 
                        string Surgeon, 
                        System.DateTime DateOfSurgery, 
                        string Orthopedic, 
                        string Cardiologist, 
                        string Opthalmologoist, 
                        string Pulmonologist, 
                        string OtherDoctor, 
                        string ReferringDoctor, 
                        System.DateTime DateOfInitialEvaluation, 
                        string Diagnosis, 
                        bool PMHx_Trauma, 
                        bool PMHx_Arthritis, 
                        bool PMHx_HPN, 
                        bool PMHx_DM, 
                        bool PMHx_Allergies, 
                        bool PMHx_Surgery, 
                        System.DateTime PMHx_SurgeryDate, 
                        bool PMHx_CardiovascularDisease, 
                        bool PMHx_PulmonaryCondition, 
                        bool PMHx_NeurologyCondition, 
                        bool PMHx_Cancer, 
                        string PMHx_Others, 
                        bool FMHx_HypertensionF, 
                        bool FMHx_HypertensionM, 
                        bool FMHx_ArthritisF, 
                        bool FMHx_ArthritisM, 
                        bool FMHx_DiabetesMellitusF, 
                        bool FMHx_DiabetesMellitusM, 
                        bool FMHx_CancerF, 
                        bool FMHx_CancerM, 
                        bool FMHx_AsthmaF, 
                        bool FMHx_AsthmaM, 
                        bool FMHx_AllergiesF, 
                        bool FMHx_AllergiesM, 
                        bool FMHx_NeurologicConditionF, 
                        bool FMHx_NeurologicConditionM, 
                        string FMHx_Others, 
                        bool FMHx_OthersF, 
                        bool FMHx_OthersM, 
                        string PSEHx_FinancialStatus, 
                        string PSEHx_PersonalityType, 
                        string PSEHx_LifeStyle, 
                        string PSEHx_EducationalAttainment, 
                        string PSEHx_LivesWith, 
                        int PSEHx_NumberOfOffspring, 
                        string PSEHx_Relatives, 
                        string PSEHx_OtherLivesWith, 
                        string PSEHx_Hobbies, 
                        string PSEHx_Sports, 
                        string PSEHx_OtherHobbies, 
                        bool PSEHx_CigaretteSmoker, 
                        bool PSEHx_AlcoholDrinker, 
                        string PSEHx_TypeOfHouse, 
                        string PSEHx_OtherTypeOfHouse, 
                        string PMHx_TraumaText, 
                        string PMHx_DMText, 
                        string PMHx_SurgeryText, 
                        bool PMHx_Hospitalization, 
                        string PMHx_HospitalizationText, 
                        System.DateTime PMHx_HospitalizationDate, 
                        string PMHx_CardiovascularDiseaseText, 
                        string PMHx_PulmonaryConditionText, 
                        string PMHx_NeurologyConditionText, 
                        string PMHx_ArthritisText, 
                        System.DateTime PMHx_AsthmaDate, 
                        bool PMHx_Asthma, 
                        string RomFindings, 
                        string RomSignificance, 
                        string MmtFindings, 
                        string MmtSignificance, 
                        string SensoryFindings, 
                        string SensorySignificance, 
                        string CranialNerveAssmtFindings, 
                        string CranialNerveAssmtSignificance, 
                        string CoordinationAssmtFindings, 
                        string CoordinationAssmtSignificance, 
                        string MbmFindings, 
                        string MbmSignificance, 
                        string SubjectiveObjective_ChiefComplaint, 
                        string SubjectiveObjective_PtTranslation, 
                        string SubjectiveObjective_BPBefore, 
                        string SubjectiveObjective_BPAfter, 
                        string SubjectiveObjective_RRBefore, 
                        string SubjectiveObjective_RRAfter, 
                        string SubjectiveObjective_PRBefore, 
                        string SubjectiveObjective_PRAfter, 
                        string SubjectiveObjective_TBefore, 
                        string SubjectiveObjective_TAfter, 
                        string SubjectiveObjective_Findings, 
                        string SubjectiveObjective_Significance, 
                        bool OcularInspection_Ambulation, 
                        bool OcularInspection_TADWheelChair, 
                        string OcularInspection_TADCruches, 
                        string OcularInspection_TADCane, 
                        string OcularInspection_TADWalker, 
                        bool OcularInspection_Alert, 
                        bool OcularInspection_Coherent, 
                        bool OcularInspection_Cooperative, 
                        string OcularInspection_BodyType, 
                        string OcularInspection_Atrophy, 
                        string OcularInspection_Swelling, 
                        string OcularInspection_Redness, 
                        string OcularInspection_Ecchymosis, 
                        string OcularInspection_Deformity, 
                        string OcularInspection_Wounds, 
                        string OcularInspection_Scar, 
                        string OcularInspection_PressureSore, 
                        bool OcularInspection_GaitDeviation, 
                        string OcularInspection_Incision, 
                        bool OcularInspection_ShortnessOfBreathing, 
                        string OcularInspection_Others, 
                        string Palpation_BodyTemperature, 
                        string Palpation_MuscleTone, 
                        string Palpation_Edema, 
                        string Palpation_Tenderness, 
                        string Palpation_Location, 
                        string Palpation_Deformity, 
                        bool Palpation_MuscleGuarding, 
                        bool Palpation_MuscleSpasm, 
                        bool Palpation_Subluxation, 
                        bool Palpation_Dislocation, 
                        string CognitiveAssmt_STQuestion, 
                        string CognitiveAssmt_STResponse, 
                        string CognitiveAssmt_LTQuestion, 
                        string CognitiveAssmt_LTResponse, 
                        string CognitiveAssmt_Findings, 
                        string CognitiveAssmt_Significance, 
                        string BalanceTolerance_SittingBalance, 
                        string BalanceTolerance_SittingTolerance, 
                        string BalanceTolerance_StandingBalance, 
                        string BalanceTolerance_StandingTolerance, 
                        string BalanceTolerance_Findings, 
                        string BalanceTolerance_Significance, 
                        string DeepTendonReflex_LeftHand, 
                        string DeepTendonReflex_RightHand, 
                        string DeepTendonReflex_LeftElbow, 
                        string DeepTendonReflex_RightElbow, 
                        string DeepTendonReflex_LeftKnee, 
                        string DeepTendonReflex_RightKnee, 
                        string DeepTendonReflex_LeftFoot, 
                        string DeepTendonReflex_RightFoot, 
                        string DeepTendonReflex_Findings, 
                        string DeepTendonReflex_Significance, 
                        string PosturalAssmtFindings, 
                        string PosturalAssmtSignificance, 
                        decimal HandGripStrength_T1RightHand, 
                        decimal HandGripStrength_T1LeftHand, 
                        decimal HandGripStrength_T2RightHand, 
                        decimal HandGripStrength_T2LeftHand, 
                        decimal HandGripStrength_T3RightHand, 
                        decimal HandGripStrength_T3LeftHand, 
                        decimal HandGripStrength_AveRightHand, 
                        decimal HandGripStrength_AveLeftHand, 
                        string HandGripStrength_Findings, 
                        string HandGripStrength_Significance, 
                        decimal VolumetricMeasurement_Right, 
                        decimal VolumetricMeasurement_Left, 
                        decimal VolumetricMeasurement_Difference, 
                        string VolumetricMeasurement_Findings, 
                        string VolumetricMeasurement_Significance, 
                        bool AnteriorView_HeadInMidline, 
                        string AnteriorView_HeadInMidlineFindings, 
                        bool AnteriorView_ShouldersInLevel, 
                        string AnteriorView_ShouldersInLevelFindings, 
                        bool AnteriorView_Protrusion, 
                        string AnteriorView_ProtrusionFindings, 
                        bool AnteriorView_Lateralization, 
                        string AnteriorView_LateralizationFindings, 
                        bool AnteriorView_Depression, 
                        string AnteriorView_DepressionFindings, 
                        decimal AnteriorView_WaistAngle, 
                        string AnteriorView_ArmPosition, 
                        decimal AnteriorView_CarryingAngle, 
                        string AnteriorView_ASISLevel, 
                        string AnteriorView_PatellaeAlignment, 
                        string AnteriorView_KneeAlignment, 
                        string AnteriorView_MalleoliLevel, 
                        string AnteriorView_ArchesOfFeet, 
                        bool AnteriorView_FeetAngle, 
                        string AnteriorView_FeetAngleFindings, 
                        bool PosteriorView_HeadInMidline, 
                        string PosteriorView_HeadInMidlineFindings, 
                        bool PosteriorView_ShouldersInLevel, 
                        string PosteriorView_ShouldersInLevelFindings, 
                        bool PosteriorView_SpineScapularLevel, 
                        string PosteriorView_SpineScapularLevelFindings, 
                        bool PosteriorView_SpineInMidline, 
                        string PosteriorView_SpineInMidlineFindings, 
                        decimal PosteriorView_WaistLevelAngle, 
                        string PosteriorView_ArmPosition, 
                        string PosteriorView_IliacCrestlevel, 
                        string PosteriorView_PSISLevel, 
                        string PosteriorView_GlutealFoldsLevel, 
                        string PosteriorView_PoplitealFoassalevel, 
                        string PosteriorView_HeelsPosition, 
                        bool LateralView_EarlobeShoulderAlignment, 
                        string LateralView_EarlobeShoulderAlignmentFindings, 
                        bool LateralView_AcromioIliacAlignment, 
                        string LateralView_AcromioIliacAlignmentFindings, 
                        string LateralView_SpinalSegments, 
                        string LateralView_ShoulderAlignment, 
                        decimal LateralView_PelvicAngle, 
                        string LateralView_KneeAlignment, 
                        bool LateralView_PlumblineAlignment, 
                        string LateralView_PlumblineAlignmentFindings, 
                        string LateralView_ArchesOfFeet, 
                        string GaitAssessment_Asssessment, 
                        bool GaitAssessment_RInitialLoading, 
                        bool GaitAssessment_LInitialLoading, 
                        bool GaitAssessment_RLoadingResponse, 
                        bool GaitAssessment_LLoadingResponse, 
                        bool GaitAssessment_RMidStance, 
                        bool GaitAssessment_LMidStance, 
                        bool GaitAssessment_RTerminalStance, 
                        bool GaitAssessment_LTerminalStance, 
                        bool GaitAssessment_RPreSwing, 
                        bool GaitAssessment_LPreSwing, 
                        bool GaitAssessment_RInitialSwing, 
                        bool GaitAssessment_LInitialPreSwing, 
                        bool GaitAssessment_RMidSwing, 
                        bool GaitAssessment_LMidPreSwing, 
                        bool GaitAssessment_RTerminalSwing, 
                        bool GaitAssessment_LTerminalSwing, 
                        string GaitAssessment_Findings, 
                        string GaitAssessment_Significance, 
                        bool FunctionalAnalysis_AdlsAxWriting, 
                        bool FunctionalAnalysis_AdlsAxCleaningHouse, 
                        bool FunctionalAnalysis_AdlsAxCooking, 
                        bool FunctionalAnalysis_AdlsAxEating, 
                        bool FunctionalAnalysis_AdlsAxTurningDoorKnob, 
                        bool FunctionalAnalysis_AdlsAxUsingKeys, 
                        bool FunctionalAnalysis_AdlsAxOpeningBottle, 
                        bool FunctionalAnalysis_AdlsAxBrushingTeeth, 
                        bool FunctionalAnalysis_AdlsAxTyingShoeLace, 
                        bool FunctionalAnalysis_AdlsAxWashingDishes, 
                        bool FunctionalAnalysis_AdlsAxSweepingFloor, 
                        bool FunctionalAnalysis_AdlsAxOthers, 
                        string Assessment_Diagnosis, 
                        string Assessment_PTImpression, 
                        string Assessment_ProblemList, 
                        string Assessment_LongTermGoals, 
                        string Assessment_ShortTermGoals, 
                        string Plan_PTManagement, 
                        string Plan_HomeInstruction, 
                        string FunctionalAnalysis_AdlsAxOthersText, 
                        string CardioPulmonaryAssmt_BodyType, 
                        string CardioPulmonaryAssmt_ChestShape, 
                        string CardioPulmonaryAssmt_ChestShapeOthers, 
                        bool PulmonaryAssmt_SpmMucoid, 
                        bool PulmonaryAssmt_SpmFrothy, 
                        bool PulmonaryAssmt_SpmMucopurulent, 
                        bool PulmonaryAssmt_SpmHemoptysis, 
                        bool PulmonaryAssmt_SpmPurulent, 
                        bool PulmonaryAssmt_SpmOthers, 
                        string PulmonaryAssmt_SpmOthersText, 
                        string PulmonaryAssmt_MdShift, 
                        string PulmonaryAssmt_MdShiftFindings, 
                        string PulmonaryAssmt_MdShiftSignificance, 
                        string PulmonaryAssmt_Fremitus, 
                        string PulmonaryAssmt_FremitusFindings, 
                        string PulmonaryAssmt_FremitusSignificance, 
                        string PulmonaryAssmt_ChstExpULE, 
                        string PulmonaryAssmt_ChstExpMLE, 
                        string PulmonaryAssmt_ChstExpLLE, 
                        string PulmonaryAssmt_ChstExpSig, 
                        string PulmonaryAssmt_Percussion, 
                        string PulmonaryAssmt_PercussionOthers, 
                        bool PulmonaryAssmt_SixMinWalk, 
                        string PulmonaryAssmt_SixMinWalkFindings, 
                        bool PulmonaryAssmt_StairClimbing, 
                        string PulmonaryAssmt_StairClimbingFindings, 
                        bool PulmonaryAssmt_ShuttleTest, 
                        string PulmonaryAssmt_ShuttleTestFindings, 
                        bool PulmonaryAssmt_OtherTest, 
                        string PulmonaryAssmt_OtherTestFindings, 
                        decimal CMAxilla_MaxInsT1, 
                        decimal CMAxilla_MaxInsT2, 
                        decimal CMAxilla_MaxInsT3, 
                        decimal CMAxilla_MaxInsAve, 
                        decimal CMAxilla_MaxExpT1, 
                        decimal CMAxilla_MaxExpT2, 
                        decimal CMAxilla_MaxExpT3, 
                        decimal CMAxilla_MaxExpAve, 
                        decimal CMAxilla_DiffT1, 
                        decimal CMAxilla_DiffT2, 
                        decimal CMAxilla_DiffT3, 
                        decimal CMAxilla_DiffAve, 
                        decimal CMXiphoid_MaxInsT1, 
                        decimal CMXiphoid_MaxInsT2, 
                        decimal CMXiphoid_MaxInsT3, 
                        decimal CMXiphoid_MaxInsAve, 
                        decimal CMXiphoid_MaxExpT1, 
                        decimal CMXiphoid_MaxExpT2, 
                        decimal CMXiphoid_MaxExpT3, 
                        decimal CMXiphoid_MaxExpAve, 
                        decimal CMXiphoid_DiffT1, 
                        decimal CMXiphoid_DiffT2, 
                        decimal CMXiphoid_DiffT3, 
                        decimal CMXiphoid_DiffAve, 
                        decimal CMLowerCostal_MaxInsT1, 
                        decimal CMLowerCostal_MaxInsT2, 
                        decimal CMLowerCostal_MaxInsT3, 
                        decimal CMLowerCostal_MaxInsAve, 
                        decimal CMLowerCostal_MaxExpT1, 
                        decimal CMLowerCostal_MaxExpT2, 
                        decimal CMLowerCostal_MaxExpT3, 
                        decimal CMLowerCostal_MaxExpAve, 
                        decimal CMLowerCostal_DiffT1, 
                        decimal CMLowerCostal_DiffT2, 
                        decimal CMLowerCostal_DiffT3, 
                        decimal CMLowerCostal_DiffAve, 
                        bool Auscultation_Trachael, 
                        bool Auscultation_Bronchial, 
                        bool Auscultation_Bronchiovesicular, 
                        bool Auscultation_Vesicular, 
                        bool Auscultation_Crackles, 
                        bool Auscultation_DiminishedBreathSounds, 
                        bool Auscultation_HighPitchedBronchialBreathing, 
                        bool Auscultation_LowPitchedBronchialBreathing, 
                        bool Auscultation_PleuralRub, 
                        bool Auscultation_Rhonchi, 
                        bool Auscultation_Stridor, 
                        bool Auscultation_Wheeze, 
                        bool Auscultation_Others, 
                        string Auscultation_OthersText, 
                        decimal FigureOfEight_Right, 
                        decimal FigureOfEight_Left, 
                        decimal FigureOfEight_Difference, 
                        string FigureOfEight_Findings, 
                        string FigureOfEight_Significance) {
                PatientVisitsRow rowPatientVisitsRow = ((PatientVisitsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FirstName,
                        LastName,
                        Age,
                        CivilStatus,
                        HandedNess,
                        Occupation,
                        Address,
                        Religion,
                        DateOfConsultation,
                        PatientType,
                        GeneralPhysician,
                        DateOfReferral,
                        Neurologist,
                        HPI,
                        PatientId,
                        Sex,
                        CityTown,
                        Province,
                        DateOfAdmission,
                        Surgeon,
                        DateOfSurgery,
                        Orthopedic,
                        Cardiologist,
                        Opthalmologoist,
                        Pulmonologist,
                        OtherDoctor,
                        ReferringDoctor,
                        DateOfInitialEvaluation,
                        Diagnosis,
                        PMHx_Trauma,
                        PMHx_Arthritis,
                        PMHx_HPN,
                        PMHx_DM,
                        PMHx_Allergies,
                        PMHx_Surgery,
                        PMHx_SurgeryDate,
                        PMHx_CardiovascularDisease,
                        PMHx_PulmonaryCondition,
                        PMHx_NeurologyCondition,
                        PMHx_Cancer,
                        PMHx_Others,
                        FMHx_HypertensionF,
                        FMHx_HypertensionM,
                        FMHx_ArthritisF,
                        FMHx_ArthritisM,
                        FMHx_DiabetesMellitusF,
                        FMHx_DiabetesMellitusM,
                        FMHx_CancerF,
                        FMHx_CancerM,
                        FMHx_AsthmaF,
                        FMHx_AsthmaM,
                        FMHx_AllergiesF,
                        FMHx_AllergiesM,
                        FMHx_NeurologicConditionF,
                        FMHx_NeurologicConditionM,
                        FMHx_Others,
                        FMHx_OthersF,
                        FMHx_OthersM,
                        PSEHx_FinancialStatus,
                        PSEHx_PersonalityType,
                        PSEHx_LifeStyle,
                        PSEHx_EducationalAttainment,
                        PSEHx_LivesWith,
                        PSEHx_NumberOfOffspring,
                        PSEHx_Relatives,
                        PSEHx_OtherLivesWith,
                        PSEHx_Hobbies,
                        PSEHx_Sports,
                        PSEHx_OtherHobbies,
                        PSEHx_CigaretteSmoker,
                        PSEHx_AlcoholDrinker,
                        PSEHx_TypeOfHouse,
                        PSEHx_OtherTypeOfHouse,
                        PMHx_TraumaText,
                        PMHx_DMText,
                        PMHx_SurgeryText,
                        PMHx_Hospitalization,
                        PMHx_HospitalizationText,
                        PMHx_HospitalizationDate,
                        PMHx_CardiovascularDiseaseText,
                        PMHx_PulmonaryConditionText,
                        PMHx_NeurologyConditionText,
                        PMHx_ArthritisText,
                        PMHx_AsthmaDate,
                        PMHx_Asthma,
                        RomFindings,
                        RomSignificance,
                        MmtFindings,
                        MmtSignificance,
                        SensoryFindings,
                        SensorySignificance,
                        CranialNerveAssmtFindings,
                        CranialNerveAssmtSignificance,
                        CoordinationAssmtFindings,
                        CoordinationAssmtSignificance,
                        MbmFindings,
                        MbmSignificance,
                        SubjectiveObjective_ChiefComplaint,
                        SubjectiveObjective_PtTranslation,
                        SubjectiveObjective_BPBefore,
                        SubjectiveObjective_BPAfter,
                        SubjectiveObjective_RRBefore,
                        SubjectiveObjective_RRAfter,
                        SubjectiveObjective_PRBefore,
                        SubjectiveObjective_PRAfter,
                        SubjectiveObjective_TBefore,
                        SubjectiveObjective_TAfter,
                        SubjectiveObjective_Findings,
                        SubjectiveObjective_Significance,
                        OcularInspection_Ambulation,
                        OcularInspection_TADWheelChair,
                        OcularInspection_TADCruches,
                        OcularInspection_TADCane,
                        OcularInspection_TADWalker,
                        OcularInspection_Alert,
                        OcularInspection_Coherent,
                        OcularInspection_Cooperative,
                        OcularInspection_BodyType,
                        OcularInspection_Atrophy,
                        OcularInspection_Swelling,
                        OcularInspection_Redness,
                        OcularInspection_Ecchymosis,
                        OcularInspection_Deformity,
                        OcularInspection_Wounds,
                        OcularInspection_Scar,
                        OcularInspection_PressureSore,
                        OcularInspection_GaitDeviation,
                        OcularInspection_Incision,
                        OcularInspection_ShortnessOfBreathing,
                        OcularInspection_Others,
                        Palpation_BodyTemperature,
                        Palpation_MuscleTone,
                        Palpation_Edema,
                        Palpation_Tenderness,
                        Palpation_Location,
                        Palpation_Deformity,
                        Palpation_MuscleGuarding,
                        Palpation_MuscleSpasm,
                        Palpation_Subluxation,
                        Palpation_Dislocation,
                        CognitiveAssmt_STQuestion,
                        CognitiveAssmt_STResponse,
                        CognitiveAssmt_LTQuestion,
                        CognitiveAssmt_LTResponse,
                        CognitiveAssmt_Findings,
                        CognitiveAssmt_Significance,
                        BalanceTolerance_SittingBalance,
                        BalanceTolerance_SittingTolerance,
                        BalanceTolerance_StandingBalance,
                        BalanceTolerance_StandingTolerance,
                        BalanceTolerance_Findings,
                        BalanceTolerance_Significance,
                        DeepTendonReflex_LeftHand,
                        DeepTendonReflex_RightHand,
                        DeepTendonReflex_LeftElbow,
                        DeepTendonReflex_RightElbow,
                        DeepTendonReflex_LeftKnee,
                        DeepTendonReflex_RightKnee,
                        DeepTendonReflex_LeftFoot,
                        DeepTendonReflex_RightFoot,
                        DeepTendonReflex_Findings,
                        DeepTendonReflex_Significance,
                        PosturalAssmtFindings,
                        PosturalAssmtSignificance,
                        HandGripStrength_T1RightHand,
                        HandGripStrength_T1LeftHand,
                        HandGripStrength_T2RightHand,
                        HandGripStrength_T2LeftHand,
                        HandGripStrength_T3RightHand,
                        HandGripStrength_T3LeftHand,
                        HandGripStrength_AveRightHand,
                        HandGripStrength_AveLeftHand,
                        HandGripStrength_Findings,
                        HandGripStrength_Significance,
                        VolumetricMeasurement_Right,
                        VolumetricMeasurement_Left,
                        VolumetricMeasurement_Difference,
                        VolumetricMeasurement_Findings,
                        VolumetricMeasurement_Significance,
                        AnteriorView_HeadInMidline,
                        AnteriorView_HeadInMidlineFindings,
                        AnteriorView_ShouldersInLevel,
                        AnteriorView_ShouldersInLevelFindings,
                        AnteriorView_Protrusion,
                        AnteriorView_ProtrusionFindings,
                        AnteriorView_Lateralization,
                        AnteriorView_LateralizationFindings,
                        AnteriorView_Depression,
                        AnteriorView_DepressionFindings,
                        AnteriorView_WaistAngle,
                        AnteriorView_ArmPosition,
                        AnteriorView_CarryingAngle,
                        AnteriorView_ASISLevel,
                        AnteriorView_PatellaeAlignment,
                        AnteriorView_KneeAlignment,
                        AnteriorView_MalleoliLevel,
                        AnteriorView_ArchesOfFeet,
                        AnteriorView_FeetAngle,
                        AnteriorView_FeetAngleFindings,
                        PosteriorView_HeadInMidline,
                        PosteriorView_HeadInMidlineFindings,
                        PosteriorView_ShouldersInLevel,
                        PosteriorView_ShouldersInLevelFindings,
                        PosteriorView_SpineScapularLevel,
                        PosteriorView_SpineScapularLevelFindings,
                        PosteriorView_SpineInMidline,
                        PosteriorView_SpineInMidlineFindings,
                        PosteriorView_WaistLevelAngle,
                        PosteriorView_ArmPosition,
                        PosteriorView_IliacCrestlevel,
                        PosteriorView_PSISLevel,
                        PosteriorView_GlutealFoldsLevel,
                        PosteriorView_PoplitealFoassalevel,
                        PosteriorView_HeelsPosition,
                        LateralView_EarlobeShoulderAlignment,
                        LateralView_EarlobeShoulderAlignmentFindings,
                        LateralView_AcromioIliacAlignment,
                        LateralView_AcromioIliacAlignmentFindings,
                        LateralView_SpinalSegments,
                        LateralView_ShoulderAlignment,
                        LateralView_PelvicAngle,
                        LateralView_KneeAlignment,
                        LateralView_PlumblineAlignment,
                        LateralView_PlumblineAlignmentFindings,
                        LateralView_ArchesOfFeet,
                        GaitAssessment_Asssessment,
                        GaitAssessment_RInitialLoading,
                        GaitAssessment_LInitialLoading,
                        GaitAssessment_RLoadingResponse,
                        GaitAssessment_LLoadingResponse,
                        GaitAssessment_RMidStance,
                        GaitAssessment_LMidStance,
                        GaitAssessment_RTerminalStance,
                        GaitAssessment_LTerminalStance,
                        GaitAssessment_RPreSwing,
                        GaitAssessment_LPreSwing,
                        GaitAssessment_RInitialSwing,
                        GaitAssessment_LInitialPreSwing,
                        GaitAssessment_RMidSwing,
                        GaitAssessment_LMidPreSwing,
                        GaitAssessment_RTerminalSwing,
                        GaitAssessment_LTerminalSwing,
                        GaitAssessment_Findings,
                        GaitAssessment_Significance,
                        FunctionalAnalysis_AdlsAxWriting,
                        FunctionalAnalysis_AdlsAxCleaningHouse,
                        FunctionalAnalysis_AdlsAxCooking,
                        FunctionalAnalysis_AdlsAxEating,
                        FunctionalAnalysis_AdlsAxTurningDoorKnob,
                        FunctionalAnalysis_AdlsAxUsingKeys,
                        FunctionalAnalysis_AdlsAxOpeningBottle,
                        FunctionalAnalysis_AdlsAxBrushingTeeth,
                        FunctionalAnalysis_AdlsAxTyingShoeLace,
                        FunctionalAnalysis_AdlsAxWashingDishes,
                        FunctionalAnalysis_AdlsAxSweepingFloor,
                        FunctionalAnalysis_AdlsAxOthers,
                        Assessment_Diagnosis,
                        Assessment_PTImpression,
                        Assessment_ProblemList,
                        Assessment_LongTermGoals,
                        Assessment_ShortTermGoals,
                        Plan_PTManagement,
                        Plan_HomeInstruction,
                        FunctionalAnalysis_AdlsAxOthersText,
                        CardioPulmonaryAssmt_BodyType,
                        CardioPulmonaryAssmt_ChestShape,
                        CardioPulmonaryAssmt_ChestShapeOthers,
                        PulmonaryAssmt_SpmMucoid,
                        PulmonaryAssmt_SpmFrothy,
                        PulmonaryAssmt_SpmMucopurulent,
                        PulmonaryAssmt_SpmHemoptysis,
                        PulmonaryAssmt_SpmPurulent,
                        PulmonaryAssmt_SpmOthers,
                        PulmonaryAssmt_SpmOthersText,
                        PulmonaryAssmt_MdShift,
                        PulmonaryAssmt_MdShiftFindings,
                        PulmonaryAssmt_MdShiftSignificance,
                        PulmonaryAssmt_Fremitus,
                        PulmonaryAssmt_FremitusFindings,
                        PulmonaryAssmt_FremitusSignificance,
                        PulmonaryAssmt_ChstExpULE,
                        PulmonaryAssmt_ChstExpMLE,
                        PulmonaryAssmt_ChstExpLLE,
                        PulmonaryAssmt_ChstExpSig,
                        PulmonaryAssmt_Percussion,
                        PulmonaryAssmt_PercussionOthers,
                        PulmonaryAssmt_SixMinWalk,
                        PulmonaryAssmt_SixMinWalkFindings,
                        PulmonaryAssmt_StairClimbing,
                        PulmonaryAssmt_StairClimbingFindings,
                        PulmonaryAssmt_ShuttleTest,
                        PulmonaryAssmt_ShuttleTestFindings,
                        PulmonaryAssmt_OtherTest,
                        PulmonaryAssmt_OtherTestFindings,
                        CMAxilla_MaxInsT1,
                        CMAxilla_MaxInsT2,
                        CMAxilla_MaxInsT3,
                        CMAxilla_MaxInsAve,
                        CMAxilla_MaxExpT1,
                        CMAxilla_MaxExpT2,
                        CMAxilla_MaxExpT3,
                        CMAxilla_MaxExpAve,
                        CMAxilla_DiffT1,
                        CMAxilla_DiffT2,
                        CMAxilla_DiffT3,
                        CMAxilla_DiffAve,
                        CMXiphoid_MaxInsT1,
                        CMXiphoid_MaxInsT2,
                        CMXiphoid_MaxInsT3,
                        CMXiphoid_MaxInsAve,
                        CMXiphoid_MaxExpT1,
                        CMXiphoid_MaxExpT2,
                        CMXiphoid_MaxExpT3,
                        CMXiphoid_MaxExpAve,
                        CMXiphoid_DiffT1,
                        CMXiphoid_DiffT2,
                        CMXiphoid_DiffT3,
                        CMXiphoid_DiffAve,
                        CMLowerCostal_MaxInsT1,
                        CMLowerCostal_MaxInsT2,
                        CMLowerCostal_MaxInsT3,
                        CMLowerCostal_MaxInsAve,
                        CMLowerCostal_MaxExpT1,
                        CMLowerCostal_MaxExpT2,
                        CMLowerCostal_MaxExpT3,
                        CMLowerCostal_MaxExpAve,
                        CMLowerCostal_DiffT1,
                        CMLowerCostal_DiffT2,
                        CMLowerCostal_DiffT3,
                        CMLowerCostal_DiffAve,
                        Auscultation_Trachael,
                        Auscultation_Bronchial,
                        Auscultation_Bronchiovesicular,
                        Auscultation_Vesicular,
                        Auscultation_Crackles,
                        Auscultation_DiminishedBreathSounds,
                        Auscultation_HighPitchedBronchialBreathing,
                        Auscultation_LowPitchedBronchialBreathing,
                        Auscultation_PleuralRub,
                        Auscultation_Rhonchi,
                        Auscultation_Stridor,
                        Auscultation_Wheeze,
                        Auscultation_Others,
                        Auscultation_OthersText,
                        FigureOfEight_Right,
                        FigureOfEight_Left,
                        FigureOfEight_Difference,
                        FigureOfEight_Findings,
                        FigureOfEight_Significance};
                rowPatientVisitsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPatientVisitsRow);
                return rowPatientVisitsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow FindByPatientVisitId(int PatientVisitId) {
                return ((PatientVisitsRow)(this.Rows.Find(new object[] {
                            PatientVisitId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PatientVisitsDataTable cln = ((PatientVisitsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PatientVisitsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnAge = base.Columns["Age"];
                this.columnCivilStatus = base.Columns["CivilStatus"];
                this.columnHandedNess = base.Columns["HandedNess"];
                this.columnOccupation = base.Columns["Occupation"];
                this.columnAddress = base.Columns["Address"];
                this.columnReligion = base.Columns["Religion"];
                this.columnDateOfConsultation = base.Columns["DateOfConsultation"];
                this.columnPatientType = base.Columns["PatientType"];
                this.columnGeneralPhysician = base.Columns["GeneralPhysician"];
                this.columnDateOfReferral = base.Columns["DateOfReferral"];
                this.columnNeurologist = base.Columns["Neurologist"];
                this.columnHPI = base.Columns["HPI"];
                this.columnPatientId = base.Columns["PatientId"];
                this.columnSex = base.Columns["Sex"];
                this.columnCityTown = base.Columns["CityTown"];
                this.columnProvince = base.Columns["Province"];
                this.columnDateOfAdmission = base.Columns["DateOfAdmission"];
                this.columnSurgeon = base.Columns["Surgeon"];
                this.columnDateOfSurgery = base.Columns["DateOfSurgery"];
                this.columnOrthopedic = base.Columns["Orthopedic"];
                this.columnCardiologist = base.Columns["Cardiologist"];
                this.columnOpthalmologoist = base.Columns["Opthalmologoist"];
                this.columnPulmonologist = base.Columns["Pulmonologist"];
                this.columnOtherDoctor = base.Columns["OtherDoctor"];
                this.columnReferringDoctor = base.Columns["ReferringDoctor"];
                this.columnDateOfInitialEvaluation = base.Columns["DateOfInitialEvaluation"];
                this.columnDiagnosis = base.Columns["Diagnosis"];
                this.columnPMHx_Trauma = base.Columns["PMHx_Trauma"];
                this.columnPMHx_Arthritis = base.Columns["PMHx_Arthritis"];
                this.columnPMHx_HPN = base.Columns["PMHx_HPN"];
                this.columnPMHx_DM = base.Columns["PMHx_DM"];
                this.columnPMHx_Allergies = base.Columns["PMHx_Allergies"];
                this.columnPMHx_Surgery = base.Columns["PMHx_Surgery"];
                this.columnPMHx_SurgeryDate = base.Columns["PMHx_SurgeryDate"];
                this.columnPMHx_CardiovascularDisease = base.Columns["PMHx_CardiovascularDisease"];
                this.columnPMHx_PulmonaryCondition = base.Columns["PMHx_PulmonaryCondition"];
                this.columnPMHx_NeurologyCondition = base.Columns["PMHx_NeurologyCondition"];
                this.columnPMHx_Cancer = base.Columns["PMHx_Cancer"];
                this.columnPMHx_Others = base.Columns["PMHx_Others"];
                this.columnFMHx_HypertensionF = base.Columns["FMHx_HypertensionF"];
                this.columnFMHx_HypertensionM = base.Columns["FMHx_HypertensionM"];
                this.columnFMHx_ArthritisF = base.Columns["FMHx_ArthritisF"];
                this.columnFMHx_ArthritisM = base.Columns["FMHx_ArthritisM"];
                this.columnFMHx_DiabetesMellitusF = base.Columns["FMHx_DiabetesMellitusF"];
                this.columnFMHx_DiabetesMellitusM = base.Columns["FMHx_DiabetesMellitusM"];
                this.columnFMHx_CancerF = base.Columns["FMHx_CancerF"];
                this.columnFMHx_CancerM = base.Columns["FMHx_CancerM"];
                this.columnFMHx_AsthmaF = base.Columns["FMHx_AsthmaF"];
                this.columnFMHx_AsthmaM = base.Columns["FMHx_AsthmaM"];
                this.columnFMHx_AllergiesF = base.Columns["FMHx_AllergiesF"];
                this.columnFMHx_AllergiesM = base.Columns["FMHx_AllergiesM"];
                this.columnFMHx_NeurologicConditionF = base.Columns["FMHx_NeurologicConditionF"];
                this.columnFMHx_NeurologicConditionM = base.Columns["FMHx_NeurologicConditionM"];
                this.columnFMHx_Others = base.Columns["FMHx_Others"];
                this.columnFMHx_OthersF = base.Columns["FMHx_OthersF"];
                this.columnFMHx_OthersM = base.Columns["FMHx_OthersM"];
                this.columnPSEHx_FinancialStatus = base.Columns["PSEHx_FinancialStatus"];
                this.columnPSEHx_PersonalityType = base.Columns["PSEHx_PersonalityType"];
                this.columnPSEHx_LifeStyle = base.Columns["PSEHx_LifeStyle"];
                this.columnPSEHx_EducationalAttainment = base.Columns["PSEHx_EducationalAttainment"];
                this.columnPSEHx_LivesWith = base.Columns["PSEHx_LivesWith"];
                this.columnPSEHx_NumberOfOffspring = base.Columns["PSEHx_NumberOfOffspring"];
                this.columnPSEHx_Relatives = base.Columns["PSEHx_Relatives"];
                this.columnPSEHx_OtherLivesWith = base.Columns["PSEHx_OtherLivesWith"];
                this.columnPSEHx_Hobbies = base.Columns["PSEHx_Hobbies"];
                this.columnPSEHx_Sports = base.Columns["PSEHx_Sports"];
                this.columnPSEHx_OtherHobbies = base.Columns["PSEHx_OtherHobbies"];
                this.columnPSEHx_CigaretteSmoker = base.Columns["PSEHx_CigaretteSmoker"];
                this.columnPSEHx_AlcoholDrinker = base.Columns["PSEHx_AlcoholDrinker"];
                this.columnPSEHx_TypeOfHouse = base.Columns["PSEHx_TypeOfHouse"];
                this.columnPSEHx_OtherTypeOfHouse = base.Columns["PSEHx_OtherTypeOfHouse"];
                this.columnPMHx_TraumaText = base.Columns["PMHx_TraumaText"];
                this.columnPMHx_DMText = base.Columns["PMHx_DMText"];
                this.columnPMHx_SurgeryText = base.Columns["PMHx_SurgeryText"];
                this.columnPMHx_Hospitalization = base.Columns["PMHx_Hospitalization"];
                this.columnPMHx_HospitalizationText = base.Columns["PMHx_HospitalizationText"];
                this.columnPMHx_HospitalizationDate = base.Columns["PMHx_HospitalizationDate"];
                this.columnPMHx_CardiovascularDiseaseText = base.Columns["PMHx_CardiovascularDiseaseText"];
                this.columnPMHx_PulmonaryConditionText = base.Columns["PMHx_PulmonaryConditionText"];
                this.columnPMHx_NeurologyConditionText = base.Columns["PMHx_NeurologyConditionText"];
                this.columnPMHx_ArthritisText = base.Columns["PMHx_ArthritisText"];
                this.columnPMHx_AsthmaDate = base.Columns["PMHx_AsthmaDate"];
                this.columnPMHx_Asthma = base.Columns["PMHx_Asthma"];
                this.columnRomFindings = base.Columns["RomFindings"];
                this.columnRomSignificance = base.Columns["RomSignificance"];
                this.columnMmtFindings = base.Columns["MmtFindings"];
                this.columnMmtSignificance = base.Columns["MmtSignificance"];
                this.columnSensoryFindings = base.Columns["SensoryFindings"];
                this.columnSensorySignificance = base.Columns["SensorySignificance"];
                this.columnCranialNerveAssmtFindings = base.Columns["CranialNerveAssmtFindings"];
                this.columnCranialNerveAssmtSignificance = base.Columns["CranialNerveAssmtSignificance"];
                this.columnCoordinationAssmtFindings = base.Columns["CoordinationAssmtFindings"];
                this.columnCoordinationAssmtSignificance = base.Columns["CoordinationAssmtSignificance"];
                this.columnMbmFindings = base.Columns["MbmFindings"];
                this.columnMbmSignificance = base.Columns["MbmSignificance"];
                this.columnSubjectiveObjective_ChiefComplaint = base.Columns["SubjectiveObjective_ChiefComplaint"];
                this.columnSubjectiveObjective_PtTranslation = base.Columns["SubjectiveObjective_PtTranslation"];
                this.columnSubjectiveObjective_BPBefore = base.Columns["SubjectiveObjective_BPBefore"];
                this.columnSubjectiveObjective_BPAfter = base.Columns["SubjectiveObjective_BPAfter"];
                this.columnSubjectiveObjective_RRBefore = base.Columns["SubjectiveObjective_RRBefore"];
                this.columnSubjectiveObjective_RRAfter = base.Columns["SubjectiveObjective_RRAfter"];
                this.columnSubjectiveObjective_PRBefore = base.Columns["SubjectiveObjective_PRBefore"];
                this.columnSubjectiveObjective_PRAfter = base.Columns["SubjectiveObjective_PRAfter"];
                this.columnSubjectiveObjective_TBefore = base.Columns["SubjectiveObjective_TBefore"];
                this.columnSubjectiveObjective_TAfter = base.Columns["SubjectiveObjective_TAfter"];
                this.columnSubjectiveObjective_Findings = base.Columns["SubjectiveObjective_Findings"];
                this.columnSubjectiveObjective_Significance = base.Columns["SubjectiveObjective_Significance"];
                this.columnOcularInspection_Ambulation = base.Columns["OcularInspection_Ambulation"];
                this.columnOcularInspection_TADWheelChair = base.Columns["OcularInspection_TADWheelChair"];
                this.columnOcularInspection_TADCruches = base.Columns["OcularInspection_TADCruches"];
                this.columnOcularInspection_TADCane = base.Columns["OcularInspection_TADCane"];
                this.columnOcularInspection_TADWalker = base.Columns["OcularInspection_TADWalker"];
                this.columnOcularInspection_Alert = base.Columns["OcularInspection_Alert"];
                this.columnOcularInspection_Coherent = base.Columns["OcularInspection_Coherent"];
                this.columnOcularInspection_Cooperative = base.Columns["OcularInspection_Cooperative"];
                this.columnOcularInspection_BodyType = base.Columns["OcularInspection_BodyType"];
                this.columnOcularInspection_Atrophy = base.Columns["OcularInspection_Atrophy"];
                this.columnOcularInspection_Swelling = base.Columns["OcularInspection_Swelling"];
                this.columnOcularInspection_Redness = base.Columns["OcularInspection_Redness"];
                this.columnOcularInspection_Ecchymosis = base.Columns["OcularInspection_Ecchymosis"];
                this.columnOcularInspection_Deformity = base.Columns["OcularInspection_Deformity"];
                this.columnOcularInspection_Wounds = base.Columns["OcularInspection_Wounds"];
                this.columnOcularInspection_Scar = base.Columns["OcularInspection_Scar"];
                this.columnOcularInspection_PressureSore = base.Columns["OcularInspection_PressureSore"];
                this.columnOcularInspection_GaitDeviation = base.Columns["OcularInspection_GaitDeviation"];
                this.columnOcularInspection_Incision = base.Columns["OcularInspection_Incision"];
                this.columnOcularInspection_ShortnessOfBreathing = base.Columns["OcularInspection_ShortnessOfBreathing"];
                this.columnOcularInspection_Others = base.Columns["OcularInspection_Others"];
                this.columnPalpation_BodyTemperature = base.Columns["Palpation_BodyTemperature"];
                this.columnPalpation_MuscleTone = base.Columns["Palpation_MuscleTone"];
                this.columnPalpation_Edema = base.Columns["Palpation_Edema"];
                this.columnPalpation_Tenderness = base.Columns["Palpation_Tenderness"];
                this.columnPalpation_Location = base.Columns["Palpation_Location"];
                this.columnPalpation_Deformity = base.Columns["Palpation_Deformity"];
                this.columnPalpation_MuscleGuarding = base.Columns["Palpation_MuscleGuarding"];
                this.columnPalpation_MuscleSpasm = base.Columns["Palpation_MuscleSpasm"];
                this.columnPalpation_Subluxation = base.Columns["Palpation_Subluxation"];
                this.columnPalpation_Dislocation = base.Columns["Palpation_Dislocation"];
                this.columnCognitiveAssmt_STQuestion = base.Columns["CognitiveAssmt_STQuestion"];
                this.columnCognitiveAssmt_STResponse = base.Columns["CognitiveAssmt_STResponse"];
                this.columnCognitiveAssmt_LTQuestion = base.Columns["CognitiveAssmt_LTQuestion"];
                this.columnCognitiveAssmt_LTResponse = base.Columns["CognitiveAssmt_LTResponse"];
                this.columnCognitiveAssmt_Findings = base.Columns["CognitiveAssmt_Findings"];
                this.columnCognitiveAssmt_Significance = base.Columns["CognitiveAssmt_Significance"];
                this.columnBalanceTolerance_SittingBalance = base.Columns["BalanceTolerance_SittingBalance"];
                this.columnBalanceTolerance_SittingTolerance = base.Columns["BalanceTolerance_SittingTolerance"];
                this.columnBalanceTolerance_StandingBalance = base.Columns["BalanceTolerance_StandingBalance"];
                this.columnBalanceTolerance_StandingTolerance = base.Columns["BalanceTolerance_StandingTolerance"];
                this.columnBalanceTolerance_Findings = base.Columns["BalanceTolerance_Findings"];
                this.columnBalanceTolerance_Significance = base.Columns["BalanceTolerance_Significance"];
                this.columnDeepTendonReflex_LeftHand = base.Columns["DeepTendonReflex_LeftHand"];
                this.columnDeepTendonReflex_RightHand = base.Columns["DeepTendonReflex_RightHand"];
                this.columnDeepTendonReflex_LeftElbow = base.Columns["DeepTendonReflex_LeftElbow"];
                this.columnDeepTendonReflex_RightElbow = base.Columns["DeepTendonReflex_RightElbow"];
                this.columnDeepTendonReflex_LeftKnee = base.Columns["DeepTendonReflex_LeftKnee"];
                this.columnDeepTendonReflex_RightKnee = base.Columns["DeepTendonReflex_RightKnee"];
                this.columnDeepTendonReflex_LeftFoot = base.Columns["DeepTendonReflex_LeftFoot"];
                this.columnDeepTendonReflex_RightFoot = base.Columns["DeepTendonReflex_RightFoot"];
                this.columnDeepTendonReflex_Findings = base.Columns["DeepTendonReflex_Findings"];
                this.columnDeepTendonReflex_Significance = base.Columns["DeepTendonReflex_Significance"];
                this.columnPosturalAssmtFindings = base.Columns["PosturalAssmtFindings"];
                this.columnPosturalAssmtSignificance = base.Columns["PosturalAssmtSignificance"];
                this.columnHandGripStrength_T1RightHand = base.Columns["HandGripStrength_T1RightHand"];
                this.columnHandGripStrength_T1LeftHand = base.Columns["HandGripStrength_T1LeftHand"];
                this.columnHandGripStrength_T2RightHand = base.Columns["HandGripStrength_T2RightHand"];
                this.columnHandGripStrength_T2LeftHand = base.Columns["HandGripStrength_T2LeftHand"];
                this.columnHandGripStrength_T3RightHand = base.Columns["HandGripStrength_T3RightHand"];
                this.columnHandGripStrength_T3LeftHand = base.Columns["HandGripStrength_T3LeftHand"];
                this.columnHandGripStrength_AveRightHand = base.Columns["HandGripStrength_AveRightHand"];
                this.columnHandGripStrength_AveLeftHand = base.Columns["HandGripStrength_AveLeftHand"];
                this.columnHandGripStrength_Findings = base.Columns["HandGripStrength_Findings"];
                this.columnHandGripStrength_Significance = base.Columns["HandGripStrength_Significance"];
                this.columnVolumetricMeasurement_Right = base.Columns["VolumetricMeasurement_Right"];
                this.columnVolumetricMeasurement_Left = base.Columns["VolumetricMeasurement_Left"];
                this.columnVolumetricMeasurement_Difference = base.Columns["VolumetricMeasurement_Difference"];
                this.columnVolumetricMeasurement_Findings = base.Columns["VolumetricMeasurement_Findings"];
                this.columnVolumetricMeasurement_Significance = base.Columns["VolumetricMeasurement_Significance"];
                this.columnAnteriorView_HeadInMidline = base.Columns["AnteriorView_HeadInMidline"];
                this.columnAnteriorView_HeadInMidlineFindings = base.Columns["AnteriorView_HeadInMidlineFindings"];
                this.columnAnteriorView_ShouldersInLevel = base.Columns["AnteriorView_ShouldersInLevel"];
                this.columnAnteriorView_ShouldersInLevelFindings = base.Columns["AnteriorView_ShouldersInLevelFindings"];
                this.columnAnteriorView_Protrusion = base.Columns["AnteriorView_Protrusion"];
                this.columnAnteriorView_ProtrusionFindings = base.Columns["AnteriorView_ProtrusionFindings"];
                this.columnAnteriorView_Lateralization = base.Columns["AnteriorView_Lateralization"];
                this.columnAnteriorView_LateralizationFindings = base.Columns["AnteriorView_LateralizationFindings"];
                this.columnAnteriorView_Depression = base.Columns["AnteriorView_Depression"];
                this.columnAnteriorView_DepressionFindings = base.Columns["AnteriorView_DepressionFindings"];
                this.columnAnteriorView_WaistAngle = base.Columns["AnteriorView_WaistAngle"];
                this.columnAnteriorView_ArmPosition = base.Columns["AnteriorView_ArmPosition"];
                this.columnAnteriorView_CarryingAngle = base.Columns["AnteriorView_CarryingAngle"];
                this.columnAnteriorView_ASISLevel = base.Columns["AnteriorView_ASISLevel"];
                this.columnAnteriorView_PatellaeAlignment = base.Columns["AnteriorView_PatellaeAlignment"];
                this.columnAnteriorView_KneeAlignment = base.Columns["AnteriorView_KneeAlignment"];
                this.columnAnteriorView_MalleoliLevel = base.Columns["AnteriorView_MalleoliLevel"];
                this.columnAnteriorView_ArchesOfFeet = base.Columns["AnteriorView_ArchesOfFeet"];
                this.columnAnteriorView_FeetAngle = base.Columns["AnteriorView_FeetAngle"];
                this.columnAnteriorView_FeetAngleFindings = base.Columns["AnteriorView_FeetAngleFindings"];
                this.columnPosteriorView_HeadInMidline = base.Columns["PosteriorView_HeadInMidline"];
                this.columnPosteriorView_HeadInMidlineFindings = base.Columns["PosteriorView_HeadInMidlineFindings"];
                this.columnPosteriorView_ShouldersInLevel = base.Columns["PosteriorView_ShouldersInLevel"];
                this.columnPosteriorView_ShouldersInLevelFindings = base.Columns["PosteriorView_ShouldersInLevelFindings"];
                this.columnPosteriorView_SpineScapularLevel = base.Columns["PosteriorView_SpineScapularLevel"];
                this.columnPosteriorView_SpineScapularLevelFindings = base.Columns["PosteriorView_SpineScapularLevelFindings"];
                this.columnPosteriorView_SpineInMidline = base.Columns["PosteriorView_SpineInMidline"];
                this.columnPosteriorView_SpineInMidlineFindings = base.Columns["PosteriorView_SpineInMidlineFindings"];
                this.columnPosteriorView_WaistLevelAngle = base.Columns["PosteriorView_WaistLevelAngle"];
                this.columnPosteriorView_ArmPosition = base.Columns["PosteriorView_ArmPosition"];
                this.columnPosteriorView_IliacCrestlevel = base.Columns["PosteriorView_IliacCrestlevel"];
                this.columnPosteriorView_PSISLevel = base.Columns["PosteriorView_PSISLevel"];
                this.columnPosteriorView_GlutealFoldsLevel = base.Columns["PosteriorView_GlutealFoldsLevel"];
                this.columnPosteriorView_PoplitealFoassalevel = base.Columns["PosteriorView_PoplitealFoassalevel"];
                this.columnPosteriorView_HeelsPosition = base.Columns["PosteriorView_HeelsPosition"];
                this.columnLateralView_EarlobeShoulderAlignment = base.Columns["LateralView_EarlobeShoulderAlignment"];
                this.columnLateralView_EarlobeShoulderAlignmentFindings = base.Columns["LateralView_EarlobeShoulderAlignmentFindings"];
                this.columnLateralView_AcromioIliacAlignment = base.Columns["LateralView_AcromioIliacAlignment"];
                this.columnLateralView_AcromioIliacAlignmentFindings = base.Columns["LateralView_AcromioIliacAlignmentFindings"];
                this.columnLateralView_SpinalSegments = base.Columns["LateralView_SpinalSegments"];
                this.columnLateralView_ShoulderAlignment = base.Columns["LateralView_ShoulderAlignment"];
                this.columnLateralView_PelvicAngle = base.Columns["LateralView_PelvicAngle"];
                this.columnLateralView_KneeAlignment = base.Columns["LateralView_KneeAlignment"];
                this.columnLateralView_PlumblineAlignment = base.Columns["LateralView_PlumblineAlignment"];
                this.columnLateralView_PlumblineAlignmentFindings = base.Columns["LateralView_PlumblineAlignmentFindings"];
                this.columnLateralView_ArchesOfFeet = base.Columns["LateralView_ArchesOfFeet"];
                this.columnGaitAssessment_Asssessment = base.Columns["GaitAssessment_Asssessment"];
                this.columnGaitAssessment_RInitialLoading = base.Columns["GaitAssessment_RInitialLoading"];
                this.columnGaitAssessment_LInitialLoading = base.Columns["GaitAssessment_LInitialLoading"];
                this.columnGaitAssessment_RLoadingResponse = base.Columns["GaitAssessment_RLoadingResponse"];
                this.columnGaitAssessment_LLoadingResponse = base.Columns["GaitAssessment_LLoadingResponse"];
                this.columnGaitAssessment_RMidStance = base.Columns["GaitAssessment_RMidStance"];
                this.columnGaitAssessment_LMidStance = base.Columns["GaitAssessment_LMidStance"];
                this.columnGaitAssessment_RTerminalStance = base.Columns["GaitAssessment_RTerminalStance"];
                this.columnGaitAssessment_LTerminalStance = base.Columns["GaitAssessment_LTerminalStance"];
                this.columnGaitAssessment_RPreSwing = base.Columns["GaitAssessment_RPreSwing"];
                this.columnGaitAssessment_LPreSwing = base.Columns["GaitAssessment_LPreSwing"];
                this.columnGaitAssessment_RInitialSwing = base.Columns["GaitAssessment_RInitialSwing"];
                this.columnGaitAssessment_LInitialPreSwing = base.Columns["GaitAssessment_LInitialPreSwing"];
                this.columnGaitAssessment_RMidSwing = base.Columns["GaitAssessment_RMidSwing"];
                this.columnGaitAssessment_LMidPreSwing = base.Columns["GaitAssessment_LMidPreSwing"];
                this.columnGaitAssessment_RTerminalSwing = base.Columns["GaitAssessment_RTerminalSwing"];
                this.columnGaitAssessment_LTerminalSwing = base.Columns["GaitAssessment_LTerminalSwing"];
                this.columnGaitAssessment_Findings = base.Columns["GaitAssessment_Findings"];
                this.columnGaitAssessment_Significance = base.Columns["GaitAssessment_Significance"];
                this.columnFunctionalAnalysis_AdlsAxWriting = base.Columns["FunctionalAnalysis_AdlsAxWriting"];
                this.columnFunctionalAnalysis_AdlsAxCleaningHouse = base.Columns["FunctionalAnalysis_AdlsAxCleaningHouse"];
                this.columnFunctionalAnalysis_AdlsAxCooking = base.Columns["FunctionalAnalysis_AdlsAxCooking"];
                this.columnFunctionalAnalysis_AdlsAxEating = base.Columns["FunctionalAnalysis_AdlsAxEating"];
                this.columnFunctionalAnalysis_AdlsAxTurningDoorKnob = base.Columns["FunctionalAnalysis_AdlsAxTurningDoorKnob"];
                this.columnFunctionalAnalysis_AdlsAxUsingKeys = base.Columns["FunctionalAnalysis_AdlsAxUsingKeys"];
                this.columnFunctionalAnalysis_AdlsAxOpeningBottle = base.Columns["FunctionalAnalysis_AdlsAxOpeningBottle"];
                this.columnFunctionalAnalysis_AdlsAxBrushingTeeth = base.Columns["FunctionalAnalysis_AdlsAxBrushingTeeth"];
                this.columnFunctionalAnalysis_AdlsAxTyingShoeLace = base.Columns["FunctionalAnalysis_AdlsAxTyingShoeLace"];
                this.columnFunctionalAnalysis_AdlsAxWashingDishes = base.Columns["FunctionalAnalysis_AdlsAxWashingDishes"];
                this.columnFunctionalAnalysis_AdlsAxSweepingFloor = base.Columns["FunctionalAnalysis_AdlsAxSweepingFloor"];
                this.columnFunctionalAnalysis_AdlsAxOthers = base.Columns["FunctionalAnalysis_AdlsAxOthers"];
                this.columnAssessment_Diagnosis = base.Columns["Assessment_Diagnosis"];
                this.columnAssessment_PTImpression = base.Columns["Assessment_PTImpression"];
                this.columnAssessment_ProblemList = base.Columns["Assessment_ProblemList"];
                this.columnAssessment_LongTermGoals = base.Columns["Assessment_LongTermGoals"];
                this.columnAssessment_ShortTermGoals = base.Columns["Assessment_ShortTermGoals"];
                this.columnPlan_PTManagement = base.Columns["Plan_PTManagement"];
                this.columnPlan_HomeInstruction = base.Columns["Plan_HomeInstruction"];
                this.columnFunctionalAnalysis_AdlsAxOthersText = base.Columns["FunctionalAnalysis_AdlsAxOthersText"];
                this.columnCardioPulmonaryAssmt_BodyType = base.Columns["CardioPulmonaryAssmt_BodyType"];
                this.columnCardioPulmonaryAssmt_ChestShape = base.Columns["CardioPulmonaryAssmt_ChestShape"];
                this.columnCardioPulmonaryAssmt_ChestShapeOthers = base.Columns["CardioPulmonaryAssmt_ChestShapeOthers"];
                this.columnPulmonaryAssmt_SpmMucoid = base.Columns["PulmonaryAssmt_SpmMucoid"];
                this.columnPulmonaryAssmt_SpmFrothy = base.Columns["PulmonaryAssmt_SpmFrothy"];
                this.columnPulmonaryAssmt_SpmMucopurulent = base.Columns["PulmonaryAssmt_SpmMucopurulent"];
                this.columnPulmonaryAssmt_SpmHemoptysis = base.Columns["PulmonaryAssmt_SpmHemoptysis"];
                this.columnPulmonaryAssmt_SpmPurulent = base.Columns["PulmonaryAssmt_SpmPurulent"];
                this.columnPulmonaryAssmt_SpmOthers = base.Columns["PulmonaryAssmt_SpmOthers"];
                this.columnPulmonaryAssmt_SpmOthersText = base.Columns["PulmonaryAssmt_SpmOthersText"];
                this.columnPulmonaryAssmt_MdShift = base.Columns["PulmonaryAssmt_MdShift"];
                this.columnPulmonaryAssmt_MdShiftFindings = base.Columns["PulmonaryAssmt_MdShiftFindings"];
                this.columnPulmonaryAssmt_MdShiftSignificance = base.Columns["PulmonaryAssmt_MdShiftSignificance"];
                this.columnPulmonaryAssmt_Fremitus = base.Columns["PulmonaryAssmt_Fremitus"];
                this.columnPulmonaryAssmt_FremitusFindings = base.Columns["PulmonaryAssmt_FremitusFindings"];
                this.columnPulmonaryAssmt_FremitusSignificance = base.Columns["PulmonaryAssmt_FremitusSignificance"];
                this.columnPulmonaryAssmt_ChstExpULE = base.Columns["PulmonaryAssmt_ChstExpULE"];
                this.columnPulmonaryAssmt_ChstExpMLE = base.Columns["PulmonaryAssmt_ChstExpMLE"];
                this.columnPulmonaryAssmt_ChstExpLLE = base.Columns["PulmonaryAssmt_ChstExpLLE"];
                this.columnPulmonaryAssmt_ChstExpSig = base.Columns["PulmonaryAssmt_ChstExpSig"];
                this.columnPulmonaryAssmt_Percussion = base.Columns["PulmonaryAssmt_Percussion"];
                this.columnPulmonaryAssmt_PercussionOthers = base.Columns["PulmonaryAssmt_PercussionOthers"];
                this.columnPulmonaryAssmt_SixMinWalk = base.Columns["PulmonaryAssmt_SixMinWalk"];
                this.columnPulmonaryAssmt_SixMinWalkFindings = base.Columns["PulmonaryAssmt_SixMinWalkFindings"];
                this.columnPulmonaryAssmt_StairClimbing = base.Columns["PulmonaryAssmt_StairClimbing"];
                this.columnPulmonaryAssmt_StairClimbingFindings = base.Columns["PulmonaryAssmt_StairClimbingFindings"];
                this.columnPulmonaryAssmt_ShuttleTest = base.Columns["PulmonaryAssmt_ShuttleTest"];
                this.columnPulmonaryAssmt_ShuttleTestFindings = base.Columns["PulmonaryAssmt_ShuttleTestFindings"];
                this.columnPulmonaryAssmt_OtherTest = base.Columns["PulmonaryAssmt_OtherTest"];
                this.columnPulmonaryAssmt_OtherTestFindings = base.Columns["PulmonaryAssmt_OtherTestFindings"];
                this.columnCMAxilla_MaxInsT1 = base.Columns["CMAxilla_MaxInsT1"];
                this.columnCMAxilla_MaxInsT2 = base.Columns["CMAxilla_MaxInsT2"];
                this.columnCMAxilla_MaxInsT3 = base.Columns["CMAxilla_MaxInsT3"];
                this.columnCMAxilla_MaxInsAve = base.Columns["CMAxilla_MaxInsAve"];
                this.columnCMAxilla_MaxExpT1 = base.Columns["CMAxilla_MaxExpT1"];
                this.columnCMAxilla_MaxExpT2 = base.Columns["CMAxilla_MaxExpT2"];
                this.columnCMAxilla_MaxExpT3 = base.Columns["CMAxilla_MaxExpT3"];
                this.columnCMAxilla_MaxExpAve = base.Columns["CMAxilla_MaxExpAve"];
                this.columnCMAxilla_DiffT1 = base.Columns["CMAxilla_DiffT1"];
                this.columnCMAxilla_DiffT2 = base.Columns["CMAxilla_DiffT2"];
                this.columnCMAxilla_DiffT3 = base.Columns["CMAxilla_DiffT3"];
                this.columnCMAxilla_DiffAve = base.Columns["CMAxilla_DiffAve"];
                this.columnCMXiphoid_MaxInsT1 = base.Columns["CMXiphoid_MaxInsT1"];
                this.columnCMXiphoid_MaxInsT2 = base.Columns["CMXiphoid_MaxInsT2"];
                this.columnCMXiphoid_MaxInsT3 = base.Columns["CMXiphoid_MaxInsT3"];
                this.columnCMXiphoid_MaxInsAve = base.Columns["CMXiphoid_MaxInsAve"];
                this.columnCMXiphoid_MaxExpT1 = base.Columns["CMXiphoid_MaxExpT1"];
                this.columnCMXiphoid_MaxExpT2 = base.Columns["CMXiphoid_MaxExpT2"];
                this.columnCMXiphoid_MaxExpT3 = base.Columns["CMXiphoid_MaxExpT3"];
                this.columnCMXiphoid_MaxExpAve = base.Columns["CMXiphoid_MaxExpAve"];
                this.columnCMXiphoid_DiffT1 = base.Columns["CMXiphoid_DiffT1"];
                this.columnCMXiphoid_DiffT2 = base.Columns["CMXiphoid_DiffT2"];
                this.columnCMXiphoid_DiffT3 = base.Columns["CMXiphoid_DiffT3"];
                this.columnCMXiphoid_DiffAve = base.Columns["CMXiphoid_DiffAve"];
                this.columnCMLowerCostal_MaxInsT1 = base.Columns["CMLowerCostal_MaxInsT1"];
                this.columnCMLowerCostal_MaxInsT2 = base.Columns["CMLowerCostal_MaxInsT2"];
                this.columnCMLowerCostal_MaxInsT3 = base.Columns["CMLowerCostal_MaxInsT3"];
                this.columnCMLowerCostal_MaxInsAve = base.Columns["CMLowerCostal_MaxInsAve"];
                this.columnCMLowerCostal_MaxExpT1 = base.Columns["CMLowerCostal_MaxExpT1"];
                this.columnCMLowerCostal_MaxExpT2 = base.Columns["CMLowerCostal_MaxExpT2"];
                this.columnCMLowerCostal_MaxExpT3 = base.Columns["CMLowerCostal_MaxExpT3"];
                this.columnCMLowerCostal_MaxExpAve = base.Columns["CMLowerCostal_MaxExpAve"];
                this.columnCMLowerCostal_DiffT1 = base.Columns["CMLowerCostal_DiffT1"];
                this.columnCMLowerCostal_DiffT2 = base.Columns["CMLowerCostal_DiffT2"];
                this.columnCMLowerCostal_DiffT3 = base.Columns["CMLowerCostal_DiffT3"];
                this.columnCMLowerCostal_DiffAve = base.Columns["CMLowerCostal_DiffAve"];
                this.columnAuscultation_Trachael = base.Columns["Auscultation_Trachael"];
                this.columnAuscultation_Bronchial = base.Columns["Auscultation_Bronchial"];
                this.columnAuscultation_Bronchiovesicular = base.Columns["Auscultation_Bronchiovesicular"];
                this.columnAuscultation_Vesicular = base.Columns["Auscultation_Vesicular"];
                this.columnAuscultation_Crackles = base.Columns["Auscultation_Crackles"];
                this.columnAuscultation_DiminishedBreathSounds = base.Columns["Auscultation_DiminishedBreathSounds"];
                this.columnAuscultation_HighPitchedBronchialBreathing = base.Columns["Auscultation_HighPitchedBronchialBreathing"];
                this.columnAuscultation_LowPitchedBronchialBreathing = base.Columns["Auscultation_LowPitchedBronchialBreathing"];
                this.columnAuscultation_PleuralRub = base.Columns["Auscultation_PleuralRub"];
                this.columnAuscultation_Rhonchi = base.Columns["Auscultation_Rhonchi"];
                this.columnAuscultation_Stridor = base.Columns["Auscultation_Stridor"];
                this.columnAuscultation_Wheeze = base.Columns["Auscultation_Wheeze"];
                this.columnAuscultation_Others = base.Columns["Auscultation_Others"];
                this.columnAuscultation_OthersText = base.Columns["Auscultation_OthersText"];
                this.columnFigureOfEight_Right = base.Columns["FigureOfEight_Right"];
                this.columnFigureOfEight_Left = base.Columns["FigureOfEight_Left"];
                this.columnFigureOfEight_Difference = base.Columns["FigureOfEight_Difference"];
                this.columnFigureOfEight_Findings = base.Columns["FigureOfEight_Findings"];
                this.columnFigureOfEight_Significance = base.Columns["FigureOfEight_Significance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnCivilStatus = new global::System.Data.DataColumn("CivilStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCivilStatus);
                this.columnHandedNess = new global::System.Data.DataColumn("HandedNess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandedNess);
                this.columnOccupation = new global::System.Data.DataColumn("Occupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOccupation);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnReligion = new global::System.Data.DataColumn("Religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReligion);
                this.columnDateOfConsultation = new global::System.Data.DataColumn("DateOfConsultation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfConsultation);
                this.columnPatientType = new global::System.Data.DataColumn("PatientType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientType);
                this.columnGeneralPhysician = new global::System.Data.DataColumn("GeneralPhysician", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralPhysician);
                this.columnDateOfReferral = new global::System.Data.DataColumn("DateOfReferral", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfReferral);
                this.columnNeurologist = new global::System.Data.DataColumn("Neurologist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeurologist);
                this.columnHPI = new global::System.Data.DataColumn("HPI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHPI);
                this.columnPatientId = new global::System.Data.DataColumn("PatientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientId);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnCityTown = new global::System.Data.DataColumn("CityTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityTown);
                this.columnProvince = new global::System.Data.DataColumn("Province", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvince);
                this.columnDateOfAdmission = new global::System.Data.DataColumn("DateOfAdmission", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfAdmission);
                this.columnSurgeon = new global::System.Data.DataColumn("Surgeon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurgeon);
                this.columnDateOfSurgery = new global::System.Data.DataColumn("DateOfSurgery", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfSurgery);
                this.columnOrthopedic = new global::System.Data.DataColumn("Orthopedic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrthopedic);
                this.columnCardiologist = new global::System.Data.DataColumn("Cardiologist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardiologist);
                this.columnOpthalmologoist = new global::System.Data.DataColumn("Opthalmologoist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpthalmologoist);
                this.columnPulmonologist = new global::System.Data.DataColumn("Pulmonologist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonologist);
                this.columnOtherDoctor = new global::System.Data.DataColumn("OtherDoctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDoctor);
                this.columnReferringDoctor = new global::System.Data.DataColumn("ReferringDoctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferringDoctor);
                this.columnDateOfInitialEvaluation = new global::System.Data.DataColumn("DateOfInitialEvaluation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfInitialEvaluation);
                this.columnDiagnosis = new global::System.Data.DataColumn("Diagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosis);
                this.columnPMHx_Trauma = new global::System.Data.DataColumn("PMHx_Trauma", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_Trauma);
                this.columnPMHx_Arthritis = new global::System.Data.DataColumn("PMHx_Arthritis", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_Arthritis);
                this.columnPMHx_HPN = new global::System.Data.DataColumn("PMHx_HPN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_HPN);
                this.columnPMHx_DM = new global::System.Data.DataColumn("PMHx_DM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_DM);
                this.columnPMHx_Allergies = new global::System.Data.DataColumn("PMHx_Allergies", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_Allergies);
                this.columnPMHx_Surgery = new global::System.Data.DataColumn("PMHx_Surgery", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_Surgery);
                this.columnPMHx_SurgeryDate = new global::System.Data.DataColumn("PMHx_SurgeryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_SurgeryDate);
                this.columnPMHx_CardiovascularDisease = new global::System.Data.DataColumn("PMHx_CardiovascularDisease", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_CardiovascularDisease);
                this.columnPMHx_PulmonaryCondition = new global::System.Data.DataColumn("PMHx_PulmonaryCondition", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_PulmonaryCondition);
                this.columnPMHx_NeurologyCondition = new global::System.Data.DataColumn("PMHx_NeurologyCondition", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_NeurologyCondition);
                this.columnPMHx_Cancer = new global::System.Data.DataColumn("PMHx_Cancer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_Cancer);
                this.columnPMHx_Others = new global::System.Data.DataColumn("PMHx_Others", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_Others);
                this.columnFMHx_HypertensionF = new global::System.Data.DataColumn("FMHx_HypertensionF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_HypertensionF);
                this.columnFMHx_HypertensionM = new global::System.Data.DataColumn("FMHx_HypertensionM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_HypertensionM);
                this.columnFMHx_ArthritisF = new global::System.Data.DataColumn("FMHx_ArthritisF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_ArthritisF);
                this.columnFMHx_ArthritisM = new global::System.Data.DataColumn("FMHx_ArthritisM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_ArthritisM);
                this.columnFMHx_DiabetesMellitusF = new global::System.Data.DataColumn("FMHx_DiabetesMellitusF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_DiabetesMellitusF);
                this.columnFMHx_DiabetesMellitusM = new global::System.Data.DataColumn("FMHx_DiabetesMellitusM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_DiabetesMellitusM);
                this.columnFMHx_CancerF = new global::System.Data.DataColumn("FMHx_CancerF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_CancerF);
                this.columnFMHx_CancerM = new global::System.Data.DataColumn("FMHx_CancerM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_CancerM);
                this.columnFMHx_AsthmaF = new global::System.Data.DataColumn("FMHx_AsthmaF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_AsthmaF);
                this.columnFMHx_AsthmaM = new global::System.Data.DataColumn("FMHx_AsthmaM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_AsthmaM);
                this.columnFMHx_AllergiesF = new global::System.Data.DataColumn("FMHx_AllergiesF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_AllergiesF);
                this.columnFMHx_AllergiesM = new global::System.Data.DataColumn("FMHx_AllergiesM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_AllergiesM);
                this.columnFMHx_NeurologicConditionF = new global::System.Data.DataColumn("FMHx_NeurologicConditionF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_NeurologicConditionF);
                this.columnFMHx_NeurologicConditionM = new global::System.Data.DataColumn("FMHx_NeurologicConditionM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_NeurologicConditionM);
                this.columnFMHx_Others = new global::System.Data.DataColumn("FMHx_Others", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_Others);
                this.columnFMHx_OthersF = new global::System.Data.DataColumn("FMHx_OthersF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_OthersF);
                this.columnFMHx_OthersM = new global::System.Data.DataColumn("FMHx_OthersM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMHx_OthersM);
                this.columnPSEHx_FinancialStatus = new global::System.Data.DataColumn("PSEHx_FinancialStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_FinancialStatus);
                this.columnPSEHx_PersonalityType = new global::System.Data.DataColumn("PSEHx_PersonalityType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_PersonalityType);
                this.columnPSEHx_LifeStyle = new global::System.Data.DataColumn("PSEHx_LifeStyle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_LifeStyle);
                this.columnPSEHx_EducationalAttainment = new global::System.Data.DataColumn("PSEHx_EducationalAttainment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_EducationalAttainment);
                this.columnPSEHx_LivesWith = new global::System.Data.DataColumn("PSEHx_LivesWith", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_LivesWith);
                this.columnPSEHx_NumberOfOffspring = new global::System.Data.DataColumn("PSEHx_NumberOfOffspring", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_NumberOfOffspring);
                this.columnPSEHx_Relatives = new global::System.Data.DataColumn("PSEHx_Relatives", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_Relatives);
                this.columnPSEHx_OtherLivesWith = new global::System.Data.DataColumn("PSEHx_OtherLivesWith", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_OtherLivesWith);
                this.columnPSEHx_Hobbies = new global::System.Data.DataColumn("PSEHx_Hobbies", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_Hobbies);
                this.columnPSEHx_Sports = new global::System.Data.DataColumn("PSEHx_Sports", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_Sports);
                this.columnPSEHx_OtherHobbies = new global::System.Data.DataColumn("PSEHx_OtherHobbies", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_OtherHobbies);
                this.columnPSEHx_CigaretteSmoker = new global::System.Data.DataColumn("PSEHx_CigaretteSmoker", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_CigaretteSmoker);
                this.columnPSEHx_AlcoholDrinker = new global::System.Data.DataColumn("PSEHx_AlcoholDrinker", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_AlcoholDrinker);
                this.columnPSEHx_TypeOfHouse = new global::System.Data.DataColumn("PSEHx_TypeOfHouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_TypeOfHouse);
                this.columnPSEHx_OtherTypeOfHouse = new global::System.Data.DataColumn("PSEHx_OtherTypeOfHouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSEHx_OtherTypeOfHouse);
                this.columnPMHx_TraumaText = new global::System.Data.DataColumn("PMHx_TraumaText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_TraumaText);
                this.columnPMHx_DMText = new global::System.Data.DataColumn("PMHx_DMText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_DMText);
                this.columnPMHx_SurgeryText = new global::System.Data.DataColumn("PMHx_SurgeryText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_SurgeryText);
                this.columnPMHx_Hospitalization = new global::System.Data.DataColumn("PMHx_Hospitalization", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_Hospitalization);
                this.columnPMHx_HospitalizationText = new global::System.Data.DataColumn("PMHx_HospitalizationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_HospitalizationText);
                this.columnPMHx_HospitalizationDate = new global::System.Data.DataColumn("PMHx_HospitalizationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_HospitalizationDate);
                this.columnPMHx_CardiovascularDiseaseText = new global::System.Data.DataColumn("PMHx_CardiovascularDiseaseText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_CardiovascularDiseaseText);
                this.columnPMHx_PulmonaryConditionText = new global::System.Data.DataColumn("PMHx_PulmonaryConditionText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_PulmonaryConditionText);
                this.columnPMHx_NeurologyConditionText = new global::System.Data.DataColumn("PMHx_NeurologyConditionText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_NeurologyConditionText);
                this.columnPMHx_ArthritisText = new global::System.Data.DataColumn("PMHx_ArthritisText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_ArthritisText);
                this.columnPMHx_AsthmaDate = new global::System.Data.DataColumn("PMHx_AsthmaDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_AsthmaDate);
                this.columnPMHx_Asthma = new global::System.Data.DataColumn("PMHx_Asthma", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMHx_Asthma);
                this.columnRomFindings = new global::System.Data.DataColumn("RomFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRomFindings);
                this.columnRomSignificance = new global::System.Data.DataColumn("RomSignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRomSignificance);
                this.columnMmtFindings = new global::System.Data.DataColumn("MmtFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMmtFindings);
                this.columnMmtSignificance = new global::System.Data.DataColumn("MmtSignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMmtSignificance);
                this.columnSensoryFindings = new global::System.Data.DataColumn("SensoryFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSensoryFindings);
                this.columnSensorySignificance = new global::System.Data.DataColumn("SensorySignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSensorySignificance);
                this.columnCranialNerveAssmtFindings = new global::System.Data.DataColumn("CranialNerveAssmtFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCranialNerveAssmtFindings);
                this.columnCranialNerveAssmtSignificance = new global::System.Data.DataColumn("CranialNerveAssmtSignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCranialNerveAssmtSignificance);
                this.columnCoordinationAssmtFindings = new global::System.Data.DataColumn("CoordinationAssmtFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoordinationAssmtFindings);
                this.columnCoordinationAssmtSignificance = new global::System.Data.DataColumn("CoordinationAssmtSignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoordinationAssmtSignificance);
                this.columnMbmFindings = new global::System.Data.DataColumn("MbmFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbmFindings);
                this.columnMbmSignificance = new global::System.Data.DataColumn("MbmSignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbmSignificance);
                this.columnSubjectiveObjective_ChiefComplaint = new global::System.Data.DataColumn("SubjectiveObjective_ChiefComplaint", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_ChiefComplaint);
                this.columnSubjectiveObjective_PtTranslation = new global::System.Data.DataColumn("SubjectiveObjective_PtTranslation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_PtTranslation);
                this.columnSubjectiveObjective_BPBefore = new global::System.Data.DataColumn("SubjectiveObjective_BPBefore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_BPBefore);
                this.columnSubjectiveObjective_BPAfter = new global::System.Data.DataColumn("SubjectiveObjective_BPAfter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_BPAfter);
                this.columnSubjectiveObjective_RRBefore = new global::System.Data.DataColumn("SubjectiveObjective_RRBefore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_RRBefore);
                this.columnSubjectiveObjective_RRAfter = new global::System.Data.DataColumn("SubjectiveObjective_RRAfter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_RRAfter);
                this.columnSubjectiveObjective_PRBefore = new global::System.Data.DataColumn("SubjectiveObjective_PRBefore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_PRBefore);
                this.columnSubjectiveObjective_PRAfter = new global::System.Data.DataColumn("SubjectiveObjective_PRAfter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_PRAfter);
                this.columnSubjectiveObjective_TBefore = new global::System.Data.DataColumn("SubjectiveObjective_TBefore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_TBefore);
                this.columnSubjectiveObjective_TAfter = new global::System.Data.DataColumn("SubjectiveObjective_TAfter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_TAfter);
                this.columnSubjectiveObjective_Findings = new global::System.Data.DataColumn("SubjectiveObjective_Findings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_Findings);
                this.columnSubjectiveObjective_Significance = new global::System.Data.DataColumn("SubjectiveObjective_Significance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectiveObjective_Significance);
                this.columnOcularInspection_Ambulation = new global::System.Data.DataColumn("OcularInspection_Ambulation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Ambulation);
                this.columnOcularInspection_TADWheelChair = new global::System.Data.DataColumn("OcularInspection_TADWheelChair", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_TADWheelChair);
                this.columnOcularInspection_TADCruches = new global::System.Data.DataColumn("OcularInspection_TADCruches", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_TADCruches);
                this.columnOcularInspection_TADCane = new global::System.Data.DataColumn("OcularInspection_TADCane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_TADCane);
                this.columnOcularInspection_TADWalker = new global::System.Data.DataColumn("OcularInspection_TADWalker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_TADWalker);
                this.columnOcularInspection_Alert = new global::System.Data.DataColumn("OcularInspection_Alert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Alert);
                this.columnOcularInspection_Coherent = new global::System.Data.DataColumn("OcularInspection_Coherent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Coherent);
                this.columnOcularInspection_Cooperative = new global::System.Data.DataColumn("OcularInspection_Cooperative", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Cooperative);
                this.columnOcularInspection_BodyType = new global::System.Data.DataColumn("OcularInspection_BodyType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_BodyType);
                this.columnOcularInspection_Atrophy = new global::System.Data.DataColumn("OcularInspection_Atrophy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Atrophy);
                this.columnOcularInspection_Swelling = new global::System.Data.DataColumn("OcularInspection_Swelling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Swelling);
                this.columnOcularInspection_Redness = new global::System.Data.DataColumn("OcularInspection_Redness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Redness);
                this.columnOcularInspection_Ecchymosis = new global::System.Data.DataColumn("OcularInspection_Ecchymosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Ecchymosis);
                this.columnOcularInspection_Deformity = new global::System.Data.DataColumn("OcularInspection_Deformity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Deformity);
                this.columnOcularInspection_Wounds = new global::System.Data.DataColumn("OcularInspection_Wounds", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Wounds);
                this.columnOcularInspection_Scar = new global::System.Data.DataColumn("OcularInspection_Scar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Scar);
                this.columnOcularInspection_PressureSore = new global::System.Data.DataColumn("OcularInspection_PressureSore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_PressureSore);
                this.columnOcularInspection_GaitDeviation = new global::System.Data.DataColumn("OcularInspection_GaitDeviation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_GaitDeviation);
                this.columnOcularInspection_Incision = new global::System.Data.DataColumn("OcularInspection_Incision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Incision);
                this.columnOcularInspection_ShortnessOfBreathing = new global::System.Data.DataColumn("OcularInspection_ShortnessOfBreathing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_ShortnessOfBreathing);
                this.columnOcularInspection_Others = new global::System.Data.DataColumn("OcularInspection_Others", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOcularInspection_Others);
                this.columnPalpation_BodyTemperature = new global::System.Data.DataColumn("Palpation_BodyTemperature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_BodyTemperature);
                this.columnPalpation_MuscleTone = new global::System.Data.DataColumn("Palpation_MuscleTone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_MuscleTone);
                this.columnPalpation_Edema = new global::System.Data.DataColumn("Palpation_Edema", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_Edema);
                this.columnPalpation_Tenderness = new global::System.Data.DataColumn("Palpation_Tenderness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_Tenderness);
                this.columnPalpation_Location = new global::System.Data.DataColumn("Palpation_Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_Location);
                this.columnPalpation_Deformity = new global::System.Data.DataColumn("Palpation_Deformity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_Deformity);
                this.columnPalpation_MuscleGuarding = new global::System.Data.DataColumn("Palpation_MuscleGuarding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_MuscleGuarding);
                this.columnPalpation_MuscleSpasm = new global::System.Data.DataColumn("Palpation_MuscleSpasm", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_MuscleSpasm);
                this.columnPalpation_Subluxation = new global::System.Data.DataColumn("Palpation_Subluxation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_Subluxation);
                this.columnPalpation_Dislocation = new global::System.Data.DataColumn("Palpation_Dislocation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalpation_Dislocation);
                this.columnCognitiveAssmt_STQuestion = new global::System.Data.DataColumn("CognitiveAssmt_STQuestion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCognitiveAssmt_STQuestion);
                this.columnCognitiveAssmt_STResponse = new global::System.Data.DataColumn("CognitiveAssmt_STResponse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCognitiveAssmt_STResponse);
                this.columnCognitiveAssmt_LTQuestion = new global::System.Data.DataColumn("CognitiveAssmt_LTQuestion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCognitiveAssmt_LTQuestion);
                this.columnCognitiveAssmt_LTResponse = new global::System.Data.DataColumn("CognitiveAssmt_LTResponse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCognitiveAssmt_LTResponse);
                this.columnCognitiveAssmt_Findings = new global::System.Data.DataColumn("CognitiveAssmt_Findings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCognitiveAssmt_Findings);
                this.columnCognitiveAssmt_Significance = new global::System.Data.DataColumn("CognitiveAssmt_Significance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCognitiveAssmt_Significance);
                this.columnBalanceTolerance_SittingBalance = new global::System.Data.DataColumn("BalanceTolerance_SittingBalance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceTolerance_SittingBalance);
                this.columnBalanceTolerance_SittingTolerance = new global::System.Data.DataColumn("BalanceTolerance_SittingTolerance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceTolerance_SittingTolerance);
                this.columnBalanceTolerance_StandingBalance = new global::System.Data.DataColumn("BalanceTolerance_StandingBalance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceTolerance_StandingBalance);
                this.columnBalanceTolerance_StandingTolerance = new global::System.Data.DataColumn("BalanceTolerance_StandingTolerance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceTolerance_StandingTolerance);
                this.columnBalanceTolerance_Findings = new global::System.Data.DataColumn("BalanceTolerance_Findings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceTolerance_Findings);
                this.columnBalanceTolerance_Significance = new global::System.Data.DataColumn("BalanceTolerance_Significance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceTolerance_Significance);
                this.columnDeepTendonReflex_LeftHand = new global::System.Data.DataColumn("DeepTendonReflex_LeftHand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_LeftHand);
                this.columnDeepTendonReflex_RightHand = new global::System.Data.DataColumn("DeepTendonReflex_RightHand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_RightHand);
                this.columnDeepTendonReflex_LeftElbow = new global::System.Data.DataColumn("DeepTendonReflex_LeftElbow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_LeftElbow);
                this.columnDeepTendonReflex_RightElbow = new global::System.Data.DataColumn("DeepTendonReflex_RightElbow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_RightElbow);
                this.columnDeepTendonReflex_LeftKnee = new global::System.Data.DataColumn("DeepTendonReflex_LeftKnee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_LeftKnee);
                this.columnDeepTendonReflex_RightKnee = new global::System.Data.DataColumn("DeepTendonReflex_RightKnee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_RightKnee);
                this.columnDeepTendonReflex_LeftFoot = new global::System.Data.DataColumn("DeepTendonReflex_LeftFoot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_LeftFoot);
                this.columnDeepTendonReflex_RightFoot = new global::System.Data.DataColumn("DeepTendonReflex_RightFoot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_RightFoot);
                this.columnDeepTendonReflex_Findings = new global::System.Data.DataColumn("DeepTendonReflex_Findings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_Findings);
                this.columnDeepTendonReflex_Significance = new global::System.Data.DataColumn("DeepTendonReflex_Significance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeepTendonReflex_Significance);
                this.columnPosturalAssmtFindings = new global::System.Data.DataColumn("PosturalAssmtFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosturalAssmtFindings);
                this.columnPosturalAssmtSignificance = new global::System.Data.DataColumn("PosturalAssmtSignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosturalAssmtSignificance);
                this.columnHandGripStrength_T1RightHand = new global::System.Data.DataColumn("HandGripStrength_T1RightHand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_T1RightHand);
                this.columnHandGripStrength_T1LeftHand = new global::System.Data.DataColumn("HandGripStrength_T1LeftHand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_T1LeftHand);
                this.columnHandGripStrength_T2RightHand = new global::System.Data.DataColumn("HandGripStrength_T2RightHand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_T2RightHand);
                this.columnHandGripStrength_T2LeftHand = new global::System.Data.DataColumn("HandGripStrength_T2LeftHand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_T2LeftHand);
                this.columnHandGripStrength_T3RightHand = new global::System.Data.DataColumn("HandGripStrength_T3RightHand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_T3RightHand);
                this.columnHandGripStrength_T3LeftHand = new global::System.Data.DataColumn("HandGripStrength_T3LeftHand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_T3LeftHand);
                this.columnHandGripStrength_AveRightHand = new global::System.Data.DataColumn("HandGripStrength_AveRightHand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_AveRightHand);
                this.columnHandGripStrength_AveLeftHand = new global::System.Data.DataColumn("HandGripStrength_AveLeftHand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_AveLeftHand);
                this.columnHandGripStrength_Findings = new global::System.Data.DataColumn("HandGripStrength_Findings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_Findings);
                this.columnHandGripStrength_Significance = new global::System.Data.DataColumn("HandGripStrength_Significance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandGripStrength_Significance);
                this.columnVolumetricMeasurement_Right = new global::System.Data.DataColumn("VolumetricMeasurement_Right", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumetricMeasurement_Right);
                this.columnVolumetricMeasurement_Left = new global::System.Data.DataColumn("VolumetricMeasurement_Left", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumetricMeasurement_Left);
                this.columnVolumetricMeasurement_Difference = new global::System.Data.DataColumn("VolumetricMeasurement_Difference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumetricMeasurement_Difference);
                this.columnVolumetricMeasurement_Findings = new global::System.Data.DataColumn("VolumetricMeasurement_Findings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumetricMeasurement_Findings);
                this.columnVolumetricMeasurement_Significance = new global::System.Data.DataColumn("VolumetricMeasurement_Significance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumetricMeasurement_Significance);
                this.columnAnteriorView_HeadInMidline = new global::System.Data.DataColumn("AnteriorView_HeadInMidline", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_HeadInMidline);
                this.columnAnteriorView_HeadInMidlineFindings = new global::System.Data.DataColumn("AnteriorView_HeadInMidlineFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_HeadInMidlineFindings);
                this.columnAnteriorView_ShouldersInLevel = new global::System.Data.DataColumn("AnteriorView_ShouldersInLevel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_ShouldersInLevel);
                this.columnAnteriorView_ShouldersInLevelFindings = new global::System.Data.DataColumn("AnteriorView_ShouldersInLevelFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_ShouldersInLevelFindings);
                this.columnAnteriorView_Protrusion = new global::System.Data.DataColumn("AnteriorView_Protrusion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_Protrusion);
                this.columnAnteriorView_ProtrusionFindings = new global::System.Data.DataColumn("AnteriorView_ProtrusionFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_ProtrusionFindings);
                this.columnAnteriorView_Lateralization = new global::System.Data.DataColumn("AnteriorView_Lateralization", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_Lateralization);
                this.columnAnteriorView_LateralizationFindings = new global::System.Data.DataColumn("AnteriorView_LateralizationFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_LateralizationFindings);
                this.columnAnteriorView_Depression = new global::System.Data.DataColumn("AnteriorView_Depression", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_Depression);
                this.columnAnteriorView_DepressionFindings = new global::System.Data.DataColumn("AnteriorView_DepressionFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_DepressionFindings);
                this.columnAnteriorView_WaistAngle = new global::System.Data.DataColumn("AnteriorView_WaistAngle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_WaistAngle);
                this.columnAnteriorView_ArmPosition = new global::System.Data.DataColumn("AnteriorView_ArmPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_ArmPosition);
                this.columnAnteriorView_CarryingAngle = new global::System.Data.DataColumn("AnteriorView_CarryingAngle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_CarryingAngle);
                this.columnAnteriorView_ASISLevel = new global::System.Data.DataColumn("AnteriorView_ASISLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_ASISLevel);
                this.columnAnteriorView_PatellaeAlignment = new global::System.Data.DataColumn("AnteriorView_PatellaeAlignment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_PatellaeAlignment);
                this.columnAnteriorView_KneeAlignment = new global::System.Data.DataColumn("AnteriorView_KneeAlignment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_KneeAlignment);
                this.columnAnteriorView_MalleoliLevel = new global::System.Data.DataColumn("AnteriorView_MalleoliLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_MalleoliLevel);
                this.columnAnteriorView_ArchesOfFeet = new global::System.Data.DataColumn("AnteriorView_ArchesOfFeet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_ArchesOfFeet);
                this.columnAnteriorView_FeetAngle = new global::System.Data.DataColumn("AnteriorView_FeetAngle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_FeetAngle);
                this.columnAnteriorView_FeetAngleFindings = new global::System.Data.DataColumn("AnteriorView_FeetAngleFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnteriorView_FeetAngleFindings);
                this.columnPosteriorView_HeadInMidline = new global::System.Data.DataColumn("PosteriorView_HeadInMidline", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_HeadInMidline);
                this.columnPosteriorView_HeadInMidlineFindings = new global::System.Data.DataColumn("PosteriorView_HeadInMidlineFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_HeadInMidlineFindings);
                this.columnPosteriorView_ShouldersInLevel = new global::System.Data.DataColumn("PosteriorView_ShouldersInLevel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_ShouldersInLevel);
                this.columnPosteriorView_ShouldersInLevelFindings = new global::System.Data.DataColumn("PosteriorView_ShouldersInLevelFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_ShouldersInLevelFindings);
                this.columnPosteriorView_SpineScapularLevel = new global::System.Data.DataColumn("PosteriorView_SpineScapularLevel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_SpineScapularLevel);
                this.columnPosteriorView_SpineScapularLevelFindings = new global::System.Data.DataColumn("PosteriorView_SpineScapularLevelFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_SpineScapularLevelFindings);
                this.columnPosteriorView_SpineInMidline = new global::System.Data.DataColumn("PosteriorView_SpineInMidline", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_SpineInMidline);
                this.columnPosteriorView_SpineInMidlineFindings = new global::System.Data.DataColumn("PosteriorView_SpineInMidlineFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_SpineInMidlineFindings);
                this.columnPosteriorView_WaistLevelAngle = new global::System.Data.DataColumn("PosteriorView_WaistLevelAngle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_WaistLevelAngle);
                this.columnPosteriorView_ArmPosition = new global::System.Data.DataColumn("PosteriorView_ArmPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_ArmPosition);
                this.columnPosteriorView_IliacCrestlevel = new global::System.Data.DataColumn("PosteriorView_IliacCrestlevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_IliacCrestlevel);
                this.columnPosteriorView_PSISLevel = new global::System.Data.DataColumn("PosteriorView_PSISLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_PSISLevel);
                this.columnPosteriorView_GlutealFoldsLevel = new global::System.Data.DataColumn("PosteriorView_GlutealFoldsLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_GlutealFoldsLevel);
                this.columnPosteriorView_PoplitealFoassalevel = new global::System.Data.DataColumn("PosteriorView_PoplitealFoassalevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_PoplitealFoassalevel);
                this.columnPosteriorView_HeelsPosition = new global::System.Data.DataColumn("PosteriorView_HeelsPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosteriorView_HeelsPosition);
                this.columnLateralView_EarlobeShoulderAlignment = new global::System.Data.DataColumn("LateralView_EarlobeShoulderAlignment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_EarlobeShoulderAlignment);
                this.columnLateralView_EarlobeShoulderAlignmentFindings = new global::System.Data.DataColumn("LateralView_EarlobeShoulderAlignmentFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_EarlobeShoulderAlignmentFindings);
                this.columnLateralView_AcromioIliacAlignment = new global::System.Data.DataColumn("LateralView_AcromioIliacAlignment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_AcromioIliacAlignment);
                this.columnLateralView_AcromioIliacAlignmentFindings = new global::System.Data.DataColumn("LateralView_AcromioIliacAlignmentFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_AcromioIliacAlignmentFindings);
                this.columnLateralView_SpinalSegments = new global::System.Data.DataColumn("LateralView_SpinalSegments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_SpinalSegments);
                this.columnLateralView_ShoulderAlignment = new global::System.Data.DataColumn("LateralView_ShoulderAlignment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_ShoulderAlignment);
                this.columnLateralView_PelvicAngle = new global::System.Data.DataColumn("LateralView_PelvicAngle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_PelvicAngle);
                this.columnLateralView_KneeAlignment = new global::System.Data.DataColumn("LateralView_KneeAlignment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_KneeAlignment);
                this.columnLateralView_PlumblineAlignment = new global::System.Data.DataColumn("LateralView_PlumblineAlignment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_PlumblineAlignment);
                this.columnLateralView_PlumblineAlignmentFindings = new global::System.Data.DataColumn("LateralView_PlumblineAlignmentFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_PlumblineAlignmentFindings);
                this.columnLateralView_ArchesOfFeet = new global::System.Data.DataColumn("LateralView_ArchesOfFeet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateralView_ArchesOfFeet);
                this.columnGaitAssessment_Asssessment = new global::System.Data.DataColumn("GaitAssessment_Asssessment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_Asssessment);
                this.columnGaitAssessment_RInitialLoading = new global::System.Data.DataColumn("GaitAssessment_RInitialLoading", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_RInitialLoading);
                this.columnGaitAssessment_LInitialLoading = new global::System.Data.DataColumn("GaitAssessment_LInitialLoading", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_LInitialLoading);
                this.columnGaitAssessment_RLoadingResponse = new global::System.Data.DataColumn("GaitAssessment_RLoadingResponse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_RLoadingResponse);
                this.columnGaitAssessment_LLoadingResponse = new global::System.Data.DataColumn("GaitAssessment_LLoadingResponse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_LLoadingResponse);
                this.columnGaitAssessment_RMidStance = new global::System.Data.DataColumn("GaitAssessment_RMidStance", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_RMidStance);
                this.columnGaitAssessment_LMidStance = new global::System.Data.DataColumn("GaitAssessment_LMidStance", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_LMidStance);
                this.columnGaitAssessment_RTerminalStance = new global::System.Data.DataColumn("GaitAssessment_RTerminalStance", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_RTerminalStance);
                this.columnGaitAssessment_LTerminalStance = new global::System.Data.DataColumn("GaitAssessment_LTerminalStance", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_LTerminalStance);
                this.columnGaitAssessment_RPreSwing = new global::System.Data.DataColumn("GaitAssessment_RPreSwing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_RPreSwing);
                this.columnGaitAssessment_LPreSwing = new global::System.Data.DataColumn("GaitAssessment_LPreSwing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_LPreSwing);
                this.columnGaitAssessment_RInitialSwing = new global::System.Data.DataColumn("GaitAssessment_RInitialSwing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_RInitialSwing);
                this.columnGaitAssessment_LInitialPreSwing = new global::System.Data.DataColumn("GaitAssessment_LInitialPreSwing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_LInitialPreSwing);
                this.columnGaitAssessment_RMidSwing = new global::System.Data.DataColumn("GaitAssessment_RMidSwing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_RMidSwing);
                this.columnGaitAssessment_LMidPreSwing = new global::System.Data.DataColumn("GaitAssessment_LMidPreSwing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_LMidPreSwing);
                this.columnGaitAssessment_RTerminalSwing = new global::System.Data.DataColumn("GaitAssessment_RTerminalSwing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_RTerminalSwing);
                this.columnGaitAssessment_LTerminalSwing = new global::System.Data.DataColumn("GaitAssessment_LTerminalSwing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_LTerminalSwing);
                this.columnGaitAssessment_Findings = new global::System.Data.DataColumn("GaitAssessment_Findings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_Findings);
                this.columnGaitAssessment_Significance = new global::System.Data.DataColumn("GaitAssessment_Significance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAssessment_Significance);
                this.columnFunctionalAnalysis_AdlsAxWriting = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxWriting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxWriting);
                this.columnFunctionalAnalysis_AdlsAxCleaningHouse = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxCleaningHouse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxCleaningHouse);
                this.columnFunctionalAnalysis_AdlsAxCooking = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxCooking", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxCooking);
                this.columnFunctionalAnalysis_AdlsAxEating = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxEating", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxEating);
                this.columnFunctionalAnalysis_AdlsAxTurningDoorKnob = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxTurningDoorKnob", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxTurningDoorKnob);
                this.columnFunctionalAnalysis_AdlsAxUsingKeys = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxUsingKeys", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxUsingKeys);
                this.columnFunctionalAnalysis_AdlsAxOpeningBottle = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxOpeningBottle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxOpeningBottle);
                this.columnFunctionalAnalysis_AdlsAxBrushingTeeth = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxBrushingTeeth", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxBrushingTeeth);
                this.columnFunctionalAnalysis_AdlsAxTyingShoeLace = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxTyingShoeLace", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxTyingShoeLace);
                this.columnFunctionalAnalysis_AdlsAxWashingDishes = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxWashingDishes", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxWashingDishes);
                this.columnFunctionalAnalysis_AdlsAxSweepingFloor = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxSweepingFloor", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxSweepingFloor);
                this.columnFunctionalAnalysis_AdlsAxOthers = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxOthers", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxOthers);
                this.columnAssessment_Diagnosis = new global::System.Data.DataColumn("Assessment_Diagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessment_Diagnosis);
                this.columnAssessment_PTImpression = new global::System.Data.DataColumn("Assessment_PTImpression", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessment_PTImpression);
                this.columnAssessment_ProblemList = new global::System.Data.DataColumn("Assessment_ProblemList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessment_ProblemList);
                this.columnAssessment_LongTermGoals = new global::System.Data.DataColumn("Assessment_LongTermGoals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessment_LongTermGoals);
                this.columnAssessment_ShortTermGoals = new global::System.Data.DataColumn("Assessment_ShortTermGoals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessment_ShortTermGoals);
                this.columnPlan_PTManagement = new global::System.Data.DataColumn("Plan_PTManagement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlan_PTManagement);
                this.columnPlan_HomeInstruction = new global::System.Data.DataColumn("Plan_HomeInstruction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlan_HomeInstruction);
                this.columnFunctionalAnalysis_AdlsAxOthersText = new global::System.Data.DataColumn("FunctionalAnalysis_AdlsAxOthersText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalAnalysis_AdlsAxOthersText);
                this.columnCardioPulmonaryAssmt_BodyType = new global::System.Data.DataColumn("CardioPulmonaryAssmt_BodyType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardioPulmonaryAssmt_BodyType);
                this.columnCardioPulmonaryAssmt_ChestShape = new global::System.Data.DataColumn("CardioPulmonaryAssmt_ChestShape", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardioPulmonaryAssmt_ChestShape);
                this.columnCardioPulmonaryAssmt_ChestShapeOthers = new global::System.Data.DataColumn("CardioPulmonaryAssmt_ChestShapeOthers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardioPulmonaryAssmt_ChestShapeOthers);
                this.columnPulmonaryAssmt_SpmMucoid = new global::System.Data.DataColumn("PulmonaryAssmt_SpmMucoid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SpmMucoid);
                this.columnPulmonaryAssmt_SpmFrothy = new global::System.Data.DataColumn("PulmonaryAssmt_SpmFrothy", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SpmFrothy);
                this.columnPulmonaryAssmt_SpmMucopurulent = new global::System.Data.DataColumn("PulmonaryAssmt_SpmMucopurulent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SpmMucopurulent);
                this.columnPulmonaryAssmt_SpmHemoptysis = new global::System.Data.DataColumn("PulmonaryAssmt_SpmHemoptysis", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SpmHemoptysis);
                this.columnPulmonaryAssmt_SpmPurulent = new global::System.Data.DataColumn("PulmonaryAssmt_SpmPurulent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SpmPurulent);
                this.columnPulmonaryAssmt_SpmOthers = new global::System.Data.DataColumn("PulmonaryAssmt_SpmOthers", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SpmOthers);
                this.columnPulmonaryAssmt_SpmOthersText = new global::System.Data.DataColumn("PulmonaryAssmt_SpmOthersText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SpmOthersText);
                this.columnPulmonaryAssmt_MdShift = new global::System.Data.DataColumn("PulmonaryAssmt_MdShift", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_MdShift);
                this.columnPulmonaryAssmt_MdShiftFindings = new global::System.Data.DataColumn("PulmonaryAssmt_MdShiftFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_MdShiftFindings);
                this.columnPulmonaryAssmt_MdShiftSignificance = new global::System.Data.DataColumn("PulmonaryAssmt_MdShiftSignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_MdShiftSignificance);
                this.columnPulmonaryAssmt_Fremitus = new global::System.Data.DataColumn("PulmonaryAssmt_Fremitus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_Fremitus);
                this.columnPulmonaryAssmt_FremitusFindings = new global::System.Data.DataColumn("PulmonaryAssmt_FremitusFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_FremitusFindings);
                this.columnPulmonaryAssmt_FremitusSignificance = new global::System.Data.DataColumn("PulmonaryAssmt_FremitusSignificance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_FremitusSignificance);
                this.columnPulmonaryAssmt_ChstExpULE = new global::System.Data.DataColumn("PulmonaryAssmt_ChstExpULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_ChstExpULE);
                this.columnPulmonaryAssmt_ChstExpMLE = new global::System.Data.DataColumn("PulmonaryAssmt_ChstExpMLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_ChstExpMLE);
                this.columnPulmonaryAssmt_ChstExpLLE = new global::System.Data.DataColumn("PulmonaryAssmt_ChstExpLLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_ChstExpLLE);
                this.columnPulmonaryAssmt_ChstExpSig = new global::System.Data.DataColumn("PulmonaryAssmt_ChstExpSig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_ChstExpSig);
                this.columnPulmonaryAssmt_Percussion = new global::System.Data.DataColumn("PulmonaryAssmt_Percussion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_Percussion);
                this.columnPulmonaryAssmt_PercussionOthers = new global::System.Data.DataColumn("PulmonaryAssmt_PercussionOthers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_PercussionOthers);
                this.columnPulmonaryAssmt_SixMinWalk = new global::System.Data.DataColumn("PulmonaryAssmt_SixMinWalk", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SixMinWalk);
                this.columnPulmonaryAssmt_SixMinWalkFindings = new global::System.Data.DataColumn("PulmonaryAssmt_SixMinWalkFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_SixMinWalkFindings);
                this.columnPulmonaryAssmt_StairClimbing = new global::System.Data.DataColumn("PulmonaryAssmt_StairClimbing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_StairClimbing);
                this.columnPulmonaryAssmt_StairClimbingFindings = new global::System.Data.DataColumn("PulmonaryAssmt_StairClimbingFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_StairClimbingFindings);
                this.columnPulmonaryAssmt_ShuttleTest = new global::System.Data.DataColumn("PulmonaryAssmt_ShuttleTest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_ShuttleTest);
                this.columnPulmonaryAssmt_ShuttleTestFindings = new global::System.Data.DataColumn("PulmonaryAssmt_ShuttleTestFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_ShuttleTestFindings);
                this.columnPulmonaryAssmt_OtherTest = new global::System.Data.DataColumn("PulmonaryAssmt_OtherTest", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_OtherTest);
                this.columnPulmonaryAssmt_OtherTestFindings = new global::System.Data.DataColumn("PulmonaryAssmt_OtherTestFindings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulmonaryAssmt_OtherTestFindings);
                this.columnCMAxilla_MaxInsT1 = new global::System.Data.DataColumn("CMAxilla_MaxInsT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_MaxInsT1);
                this.columnCMAxilla_MaxInsT2 = new global::System.Data.DataColumn("CMAxilla_MaxInsT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_MaxInsT2);
                this.columnCMAxilla_MaxInsT3 = new global::System.Data.DataColumn("CMAxilla_MaxInsT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_MaxInsT3);
                this.columnCMAxilla_MaxInsAve = new global::System.Data.DataColumn("CMAxilla_MaxInsAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_MaxInsAve);
                this.columnCMAxilla_MaxExpT1 = new global::System.Data.DataColumn("CMAxilla_MaxExpT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_MaxExpT1);
                this.columnCMAxilla_MaxExpT2 = new global::System.Data.DataColumn("CMAxilla_MaxExpT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_MaxExpT2);
                this.columnCMAxilla_MaxExpT3 = new global::System.Data.DataColumn("CMAxilla_MaxExpT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_MaxExpT3);
                this.columnCMAxilla_MaxExpAve = new global::System.Data.DataColumn("CMAxilla_MaxExpAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_MaxExpAve);
                this.columnCMAxilla_DiffT1 = new global::System.Data.DataColumn("CMAxilla_DiffT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_DiffT1);
                this.columnCMAxilla_DiffT2 = new global::System.Data.DataColumn("CMAxilla_DiffT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_DiffT2);
                this.columnCMAxilla_DiffT3 = new global::System.Data.DataColumn("CMAxilla_DiffT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_DiffT3);
                this.columnCMAxilla_DiffAve = new global::System.Data.DataColumn("CMAxilla_DiffAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMAxilla_DiffAve);
                this.columnCMXiphoid_MaxInsT1 = new global::System.Data.DataColumn("CMXiphoid_MaxInsT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_MaxInsT1);
                this.columnCMXiphoid_MaxInsT2 = new global::System.Data.DataColumn("CMXiphoid_MaxInsT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_MaxInsT2);
                this.columnCMXiphoid_MaxInsT3 = new global::System.Data.DataColumn("CMXiphoid_MaxInsT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_MaxInsT3);
                this.columnCMXiphoid_MaxInsAve = new global::System.Data.DataColumn("CMXiphoid_MaxInsAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_MaxInsAve);
                this.columnCMXiphoid_MaxExpT1 = new global::System.Data.DataColumn("CMXiphoid_MaxExpT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_MaxExpT1);
                this.columnCMXiphoid_MaxExpT2 = new global::System.Data.DataColumn("CMXiphoid_MaxExpT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_MaxExpT2);
                this.columnCMXiphoid_MaxExpT3 = new global::System.Data.DataColumn("CMXiphoid_MaxExpT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_MaxExpT3);
                this.columnCMXiphoid_MaxExpAve = new global::System.Data.DataColumn("CMXiphoid_MaxExpAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_MaxExpAve);
                this.columnCMXiphoid_DiffT1 = new global::System.Data.DataColumn("CMXiphoid_DiffT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_DiffT1);
                this.columnCMXiphoid_DiffT2 = new global::System.Data.DataColumn("CMXiphoid_DiffT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_DiffT2);
                this.columnCMXiphoid_DiffT3 = new global::System.Data.DataColumn("CMXiphoid_DiffT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_DiffT3);
                this.columnCMXiphoid_DiffAve = new global::System.Data.DataColumn("CMXiphoid_DiffAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMXiphoid_DiffAve);
                this.columnCMLowerCostal_MaxInsT1 = new global::System.Data.DataColumn("CMLowerCostal_MaxInsT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_MaxInsT1);
                this.columnCMLowerCostal_MaxInsT2 = new global::System.Data.DataColumn("CMLowerCostal_MaxInsT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_MaxInsT2);
                this.columnCMLowerCostal_MaxInsT3 = new global::System.Data.DataColumn("CMLowerCostal_MaxInsT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_MaxInsT3);
                this.columnCMLowerCostal_MaxInsAve = new global::System.Data.DataColumn("CMLowerCostal_MaxInsAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_MaxInsAve);
                this.columnCMLowerCostal_MaxExpT1 = new global::System.Data.DataColumn("CMLowerCostal_MaxExpT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_MaxExpT1);
                this.columnCMLowerCostal_MaxExpT2 = new global::System.Data.DataColumn("CMLowerCostal_MaxExpT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_MaxExpT2);
                this.columnCMLowerCostal_MaxExpT3 = new global::System.Data.DataColumn("CMLowerCostal_MaxExpT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_MaxExpT3);
                this.columnCMLowerCostal_MaxExpAve = new global::System.Data.DataColumn("CMLowerCostal_MaxExpAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_MaxExpAve);
                this.columnCMLowerCostal_DiffT1 = new global::System.Data.DataColumn("CMLowerCostal_DiffT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_DiffT1);
                this.columnCMLowerCostal_DiffT2 = new global::System.Data.DataColumn("CMLowerCostal_DiffT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_DiffT2);
                this.columnCMLowerCostal_DiffT3 = new global::System.Data.DataColumn("CMLowerCostal_DiffT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_DiffT3);
                this.columnCMLowerCostal_DiffAve = new global::System.Data.DataColumn("CMLowerCostal_DiffAve", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMLowerCostal_DiffAve);
                this.columnAuscultation_Trachael = new global::System.Data.DataColumn("Auscultation_Trachael", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Trachael);
                this.columnAuscultation_Bronchial = new global::System.Data.DataColumn("Auscultation_Bronchial", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Bronchial);
                this.columnAuscultation_Bronchiovesicular = new global::System.Data.DataColumn("Auscultation_Bronchiovesicular", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Bronchiovesicular);
                this.columnAuscultation_Vesicular = new global::System.Data.DataColumn("Auscultation_Vesicular", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Vesicular);
                this.columnAuscultation_Crackles = new global::System.Data.DataColumn("Auscultation_Crackles", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Crackles);
                this.columnAuscultation_DiminishedBreathSounds = new global::System.Data.DataColumn("Auscultation_DiminishedBreathSounds", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_DiminishedBreathSounds);
                this.columnAuscultation_HighPitchedBronchialBreathing = new global::System.Data.DataColumn("Auscultation_HighPitchedBronchialBreathing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_HighPitchedBronchialBreathing);
                this.columnAuscultation_LowPitchedBronchialBreathing = new global::System.Data.DataColumn("Auscultation_LowPitchedBronchialBreathing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_LowPitchedBronchialBreathing);
                this.columnAuscultation_PleuralRub = new global::System.Data.DataColumn("Auscultation_PleuralRub", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_PleuralRub);
                this.columnAuscultation_Rhonchi = new global::System.Data.DataColumn("Auscultation_Rhonchi", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Rhonchi);
                this.columnAuscultation_Stridor = new global::System.Data.DataColumn("Auscultation_Stridor", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Stridor);
                this.columnAuscultation_Wheeze = new global::System.Data.DataColumn("Auscultation_Wheeze", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Wheeze);
                this.columnAuscultation_Others = new global::System.Data.DataColumn("Auscultation_Others", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_Others);
                this.columnAuscultation_OthersText = new global::System.Data.DataColumn("Auscultation_OthersText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuscultation_OthersText);
                this.columnFigureOfEight_Right = new global::System.Data.DataColumn("FigureOfEight_Right", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFigureOfEight_Right);
                this.columnFigureOfEight_Left = new global::System.Data.DataColumn("FigureOfEight_Left", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFigureOfEight_Left);
                this.columnFigureOfEight_Difference = new global::System.Data.DataColumn("FigureOfEight_Difference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFigureOfEight_Difference);
                this.columnFigureOfEight_Findings = new global::System.Data.DataColumn("FigureOfEight_Findings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFigureOfEight_Findings);
                this.columnFigureOfEight_Significance = new global::System.Data.DataColumn("FigureOfEight_Significance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFigureOfEight_Significance);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientVisitId}, true));
                this.columnPatientVisitId.AutoIncrement = true;
                this.columnPatientVisitId.AutoIncrementSeed = -1;
                this.columnPatientVisitId.AutoIncrementStep = -1;
                this.columnPatientVisitId.AllowDBNull = false;
                this.columnPatientVisitId.ReadOnly = true;
                this.columnPatientVisitId.Unique = true;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 50;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 50;
                this.columnAge.AllowDBNull = false;
                this.columnCivilStatus.MaxLength = 10;
                this.columnHandedNess.MaxLength = 5;
                this.columnOccupation.MaxLength = 50;
                this.columnAddress.MaxLength = 150;
                this.columnReligion.MaxLength = 50;
                this.columnPatientType.MaxLength = 11;
                this.columnGeneralPhysician.MaxLength = 50;
                this.columnNeurologist.MaxLength = 50;
                this.columnHPI.MaxLength = 2147483647;
                this.columnPatientId.AllowDBNull = false;
                this.columnSex.MaxLength = 1;
                this.columnCityTown.MaxLength = 50;
                this.columnProvince.MaxLength = 50;
                this.columnSurgeon.MaxLength = 50;
                this.columnOrthopedic.MaxLength = 50;
                this.columnCardiologist.MaxLength = 50;
                this.columnOpthalmologoist.MaxLength = 50;
                this.columnPulmonologist.MaxLength = 50;
                this.columnOtherDoctor.MaxLength = 50;
                this.columnReferringDoctor.MaxLength = 50;
                this.columnDiagnosis.MaxLength = 2147483647;
                this.columnPMHx_Trauma.AllowDBNull = false;
                this.columnPMHx_Arthritis.AllowDBNull = false;
                this.columnPMHx_HPN.AllowDBNull = false;
                this.columnPMHx_DM.AllowDBNull = false;
                this.columnPMHx_Allergies.AllowDBNull = false;
                this.columnPMHx_Surgery.AllowDBNull = false;
                this.columnPMHx_CardiovascularDisease.AllowDBNull = false;
                this.columnPMHx_PulmonaryCondition.AllowDBNull = false;
                this.columnPMHx_NeurologyCondition.AllowDBNull = false;
                this.columnPMHx_Cancer.AllowDBNull = false;
                this.columnPMHx_Others.MaxLength = 50;
                this.columnFMHx_HypertensionF.AllowDBNull = false;
                this.columnFMHx_HypertensionM.AllowDBNull = false;
                this.columnFMHx_ArthritisF.AllowDBNull = false;
                this.columnFMHx_ArthritisM.AllowDBNull = false;
                this.columnFMHx_DiabetesMellitusF.AllowDBNull = false;
                this.columnFMHx_DiabetesMellitusM.AllowDBNull = false;
                this.columnFMHx_CancerF.AllowDBNull = false;
                this.columnFMHx_CancerM.AllowDBNull = false;
                this.columnFMHx_AsthmaF.AllowDBNull = false;
                this.columnFMHx_AsthmaM.AllowDBNull = false;
                this.columnFMHx_AllergiesF.AllowDBNull = false;
                this.columnFMHx_AllergiesM.AllowDBNull = false;
                this.columnFMHx_NeurologicConditionF.AllowDBNull = false;
                this.columnFMHx_NeurologicConditionM.AllowDBNull = false;
                this.columnFMHx_Others.MaxLength = 50;
                this.columnFMHx_OthersF.AllowDBNull = false;
                this.columnFMHx_OthersM.AllowDBNull = false;
                this.columnPSEHx_FinancialStatus.MaxLength = 50;
                this.columnPSEHx_PersonalityType.MaxLength = 50;
                this.columnPSEHx_LifeStyle.MaxLength = 50;
                this.columnPSEHx_EducationalAttainment.MaxLength = 50;
                this.columnPSEHx_LivesWith.MaxLength = 50;
                this.columnPSEHx_NumberOfOffspring.AllowDBNull = false;
                this.columnPSEHx_Relatives.MaxLength = 50;
                this.columnPSEHx_OtherLivesWith.MaxLength = 50;
                this.columnPSEHx_Hobbies.MaxLength = 50;
                this.columnPSEHx_Sports.MaxLength = 50;
                this.columnPSEHx_OtherHobbies.MaxLength = 50;
                this.columnPSEHx_CigaretteSmoker.AllowDBNull = false;
                this.columnPSEHx_AlcoholDrinker.AllowDBNull = false;
                this.columnPSEHx_TypeOfHouse.MaxLength = 50;
                this.columnPSEHx_OtherTypeOfHouse.MaxLength = 50;
                this.columnPMHx_TraumaText.MaxLength = 50;
                this.columnPMHx_DMText.MaxLength = 50;
                this.columnPMHx_SurgeryText.MaxLength = 50;
                this.columnPMHx_Hospitalization.AllowDBNull = false;
                this.columnPMHx_HospitalizationText.MaxLength = 50;
                this.columnPMHx_CardiovascularDiseaseText.MaxLength = 50;
                this.columnPMHx_PulmonaryConditionText.MaxLength = 50;
                this.columnPMHx_NeurologyConditionText.MaxLength = 50;
                this.columnPMHx_ArthritisText.MaxLength = 50;
                this.columnRomFindings.MaxLength = 2147483647;
                this.columnRomSignificance.MaxLength = 2147483647;
                this.columnMmtFindings.MaxLength = 2147483647;
                this.columnMmtSignificance.MaxLength = 2147483647;
                this.columnSensoryFindings.MaxLength = 2147483647;
                this.columnSensorySignificance.MaxLength = 2147483647;
                this.columnCranialNerveAssmtFindings.MaxLength = 2147483647;
                this.columnCranialNerveAssmtSignificance.MaxLength = 2147483647;
                this.columnCoordinationAssmtFindings.MaxLength = 2147483647;
                this.columnCoordinationAssmtSignificance.MaxLength = 2147483647;
                this.columnMbmFindings.MaxLength = 2147483647;
                this.columnMbmSignificance.MaxLength = 2147483647;
                this.columnSubjectiveObjective_ChiefComplaint.MaxLength = 200;
                this.columnSubjectiveObjective_PtTranslation.MaxLength = 200;
                this.columnSubjectiveObjective_BPBefore.MaxLength = 20;
                this.columnSubjectiveObjective_BPAfter.MaxLength = 20;
                this.columnSubjectiveObjective_RRBefore.MaxLength = 20;
                this.columnSubjectiveObjective_RRAfter.MaxLength = 20;
                this.columnSubjectiveObjective_PRBefore.MaxLength = 20;
                this.columnSubjectiveObjective_PRAfter.MaxLength = 20;
                this.columnSubjectiveObjective_TBefore.MaxLength = 20;
                this.columnSubjectiveObjective_TAfter.MaxLength = 20;
                this.columnSubjectiveObjective_Findings.MaxLength = 200;
                this.columnSubjectiveObjective_Significance.MaxLength = 200;
                this.columnOcularInspection_Ambulation.AllowDBNull = false;
                this.columnOcularInspection_TADWheelChair.AllowDBNull = false;
                this.columnOcularInspection_TADCruches.MaxLength = 20;
                this.columnOcularInspection_TADCane.MaxLength = 20;
                this.columnOcularInspection_TADWalker.MaxLength = 20;
                this.columnOcularInspection_Alert.AllowDBNull = false;
                this.columnOcularInspection_Coherent.AllowDBNull = false;
                this.columnOcularInspection_Cooperative.AllowDBNull = false;
                this.columnOcularInspection_BodyType.MaxLength = 20;
                this.columnOcularInspection_Atrophy.MaxLength = 50;
                this.columnOcularInspection_Swelling.MaxLength = 50;
                this.columnOcularInspection_Redness.MaxLength = 50;
                this.columnOcularInspection_Ecchymosis.MaxLength = 50;
                this.columnOcularInspection_Deformity.MaxLength = 50;
                this.columnOcularInspection_Wounds.MaxLength = 50;
                this.columnOcularInspection_Scar.MaxLength = 50;
                this.columnOcularInspection_PressureSore.MaxLength = 50;
                this.columnOcularInspection_GaitDeviation.AllowDBNull = false;
                this.columnOcularInspection_Incision.MaxLength = 50;
                this.columnOcularInspection_ShortnessOfBreathing.AllowDBNull = false;
                this.columnOcularInspection_Others.MaxLength = 50;
                this.columnPalpation_BodyTemperature.MaxLength = 20;
                this.columnPalpation_MuscleTone.MaxLength = 20;
                this.columnPalpation_Edema.MaxLength = 20;
                this.columnPalpation_Tenderness.MaxLength = 20;
                this.columnPalpation_Location.MaxLength = 20;
                this.columnPalpation_Deformity.MaxLength = 20;
                this.columnPalpation_MuscleGuarding.AllowDBNull = false;
                this.columnPalpation_MuscleSpasm.AllowDBNull = false;
                this.columnPalpation_Subluxation.AllowDBNull = false;
                this.columnPalpation_Dislocation.AllowDBNull = false;
                this.columnCognitiveAssmt_STQuestion.MaxLength = 2147483647;
                this.columnCognitiveAssmt_STResponse.MaxLength = 2147483647;
                this.columnCognitiveAssmt_LTQuestion.MaxLength = 2147483647;
                this.columnCognitiveAssmt_LTResponse.MaxLength = 2147483647;
                this.columnCognitiveAssmt_Findings.MaxLength = 2147483647;
                this.columnCognitiveAssmt_Significance.MaxLength = 2147483647;
                this.columnBalanceTolerance_SittingBalance.MaxLength = 20;
                this.columnBalanceTolerance_SittingTolerance.MaxLength = 20;
                this.columnBalanceTolerance_StandingBalance.MaxLength = 20;
                this.columnBalanceTolerance_StandingTolerance.MaxLength = 20;
                this.columnBalanceTolerance_Findings.MaxLength = 2147483647;
                this.columnBalanceTolerance_Significance.MaxLength = 2147483647;
                this.columnDeepTendonReflex_LeftHand.MaxLength = 30;
                this.columnDeepTendonReflex_RightHand.MaxLength = 30;
                this.columnDeepTendonReflex_LeftElbow.MaxLength = 30;
                this.columnDeepTendonReflex_RightElbow.MaxLength = 30;
                this.columnDeepTendonReflex_LeftKnee.MaxLength = 30;
                this.columnDeepTendonReflex_RightKnee.MaxLength = 30;
                this.columnDeepTendonReflex_LeftFoot.MaxLength = 30;
                this.columnDeepTendonReflex_RightFoot.MaxLength = 30;
                this.columnDeepTendonReflex_Findings.MaxLength = 2147483647;
                this.columnDeepTendonReflex_Significance.MaxLength = 2147483647;
                this.columnPosturalAssmtFindings.MaxLength = 2147483647;
                this.columnPosturalAssmtSignificance.MaxLength = 2147483647;
                this.columnHandGripStrength_T1RightHand.AllowDBNull = false;
                this.columnHandGripStrength_T1LeftHand.AllowDBNull = false;
                this.columnHandGripStrength_T2RightHand.AllowDBNull = false;
                this.columnHandGripStrength_T2LeftHand.AllowDBNull = false;
                this.columnHandGripStrength_T3RightHand.AllowDBNull = false;
                this.columnHandGripStrength_T3LeftHand.AllowDBNull = false;
                this.columnHandGripStrength_AveRightHand.AllowDBNull = false;
                this.columnHandGripStrength_AveLeftHand.AllowDBNull = false;
                this.columnHandGripStrength_Findings.MaxLength = 2147483647;
                this.columnHandGripStrength_Significance.MaxLength = 2147483647;
                this.columnVolumetricMeasurement_Right.AllowDBNull = false;
                this.columnVolumetricMeasurement_Left.AllowDBNull = false;
                this.columnVolumetricMeasurement_Difference.AllowDBNull = false;
                this.columnVolumetricMeasurement_Findings.MaxLength = 2147483647;
                this.columnVolumetricMeasurement_Significance.MaxLength = 2147483647;
                this.columnAnteriorView_HeadInMidline.AllowDBNull = false;
                this.columnAnteriorView_HeadInMidlineFindings.MaxLength = 100;
                this.columnAnteriorView_ShouldersInLevel.AllowDBNull = false;
                this.columnAnteriorView_ShouldersInLevelFindings.MaxLength = 100;
                this.columnAnteriorView_Protrusion.AllowDBNull = false;
                this.columnAnteriorView_ProtrusionFindings.MaxLength = 100;
                this.columnAnteriorView_Lateralization.AllowDBNull = false;
                this.columnAnteriorView_LateralizationFindings.MaxLength = 100;
                this.columnAnteriorView_Depression.AllowDBNull = false;
                this.columnAnteriorView_DepressionFindings.MaxLength = 100;
                this.columnAnteriorView_WaistAngle.AllowDBNull = false;
                this.columnAnteriorView_ArmPosition.MaxLength = 100;
                this.columnAnteriorView_CarryingAngle.AllowDBNull = false;
                this.columnAnteriorView_ASISLevel.MaxLength = 100;
                this.columnAnteriorView_PatellaeAlignment.MaxLength = 100;
                this.columnAnteriorView_KneeAlignment.MaxLength = 100;
                this.columnAnteriorView_MalleoliLevel.MaxLength = 100;
                this.columnAnteriorView_ArchesOfFeet.MaxLength = 100;
                this.columnAnteriorView_FeetAngle.AllowDBNull = false;
                this.columnAnteriorView_FeetAngleFindings.MaxLength = 100;
                this.columnPosteriorView_HeadInMidline.AllowDBNull = false;
                this.columnPosteriorView_HeadInMidlineFindings.MaxLength = 100;
                this.columnPosteriorView_ShouldersInLevel.AllowDBNull = false;
                this.columnPosteriorView_ShouldersInLevelFindings.MaxLength = 100;
                this.columnPosteriorView_SpineScapularLevel.AllowDBNull = false;
                this.columnPosteriorView_SpineScapularLevelFindings.MaxLength = 100;
                this.columnPosteriorView_SpineInMidline.AllowDBNull = false;
                this.columnPosteriorView_SpineInMidlineFindings.MaxLength = 100;
                this.columnPosteriorView_WaistLevelAngle.AllowDBNull = false;
                this.columnPosteriorView_ArmPosition.MaxLength = 100;
                this.columnPosteriorView_IliacCrestlevel.MaxLength = 100;
                this.columnPosteriorView_PSISLevel.MaxLength = 100;
                this.columnPosteriorView_GlutealFoldsLevel.MaxLength = 100;
                this.columnPosteriorView_PoplitealFoassalevel.MaxLength = 100;
                this.columnPosteriorView_HeelsPosition.MaxLength = 100;
                this.columnLateralView_EarlobeShoulderAlignment.AllowDBNull = false;
                this.columnLateralView_EarlobeShoulderAlignmentFindings.MaxLength = 100;
                this.columnLateralView_AcromioIliacAlignment.AllowDBNull = false;
                this.columnLateralView_AcromioIliacAlignmentFindings.MaxLength = 100;
                this.columnLateralView_SpinalSegments.MaxLength = 100;
                this.columnLateralView_ShoulderAlignment.MaxLength = 100;
                this.columnLateralView_PelvicAngle.AllowDBNull = false;
                this.columnLateralView_KneeAlignment.MaxLength = 100;
                this.columnLateralView_PlumblineAlignment.AllowDBNull = false;
                this.columnLateralView_PlumblineAlignmentFindings.MaxLength = 100;
                this.columnLateralView_ArchesOfFeet.MaxLength = 100;
                this.columnGaitAssessment_Asssessment.MaxLength = 100;
                this.columnGaitAssessment_RInitialLoading.AllowDBNull = false;
                this.columnGaitAssessment_LInitialLoading.AllowDBNull = false;
                this.columnGaitAssessment_RLoadingResponse.AllowDBNull = false;
                this.columnGaitAssessment_LLoadingResponse.AllowDBNull = false;
                this.columnGaitAssessment_RMidStance.AllowDBNull = false;
                this.columnGaitAssessment_LMidStance.AllowDBNull = false;
                this.columnGaitAssessment_RTerminalStance.AllowDBNull = false;
                this.columnGaitAssessment_LTerminalStance.AllowDBNull = false;
                this.columnGaitAssessment_RPreSwing.AllowDBNull = false;
                this.columnGaitAssessment_LPreSwing.AllowDBNull = false;
                this.columnGaitAssessment_RInitialSwing.AllowDBNull = false;
                this.columnGaitAssessment_LInitialPreSwing.AllowDBNull = false;
                this.columnGaitAssessment_RMidSwing.AllowDBNull = false;
                this.columnGaitAssessment_LMidPreSwing.AllowDBNull = false;
                this.columnGaitAssessment_RTerminalSwing.AllowDBNull = false;
                this.columnGaitAssessment_LTerminalSwing.AllowDBNull = false;
                this.columnGaitAssessment_Findings.MaxLength = 2147483647;
                this.columnGaitAssessment_Significance.MaxLength = 2147483647;
                this.columnFunctionalAnalysis_AdlsAxWriting.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxCleaningHouse.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxCooking.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxEating.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxTurningDoorKnob.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxUsingKeys.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxOpeningBottle.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxBrushingTeeth.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxTyingShoeLace.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxWashingDishes.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxSweepingFloor.AllowDBNull = false;
                this.columnFunctionalAnalysis_AdlsAxOthers.AllowDBNull = false;
                this.columnAssessment_Diagnosis.MaxLength = 2147483647;
                this.columnAssessment_PTImpression.MaxLength = 2147483647;
                this.columnAssessment_ProblemList.MaxLength = 2147483647;
                this.columnAssessment_LongTermGoals.MaxLength = 2147483647;
                this.columnAssessment_ShortTermGoals.MaxLength = 2147483647;
                this.columnPlan_PTManagement.MaxLength = 2147483647;
                this.columnPlan_HomeInstruction.MaxLength = 2147483647;
                this.columnFunctionalAnalysis_AdlsAxOthersText.MaxLength = 100;
                this.columnCardioPulmonaryAssmt_BodyType.MaxLength = 10;
                this.columnCardioPulmonaryAssmt_ChestShape.MaxLength = 20;
                this.columnCardioPulmonaryAssmt_ChestShapeOthers.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_SpmMucoid.AllowDBNull = false;
                this.columnPulmonaryAssmt_SpmFrothy.AllowDBNull = false;
                this.columnPulmonaryAssmt_SpmMucopurulent.AllowDBNull = false;
                this.columnPulmonaryAssmt_SpmHemoptysis.AllowDBNull = false;
                this.columnPulmonaryAssmt_SpmPurulent.AllowDBNull = false;
                this.columnPulmonaryAssmt_SpmOthers.AllowDBNull = false;
                this.columnPulmonaryAssmt_SpmOthersText.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_MdShift.MaxLength = 10;
                this.columnPulmonaryAssmt_MdShiftFindings.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_MdShiftSignificance.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_Fremitus.MaxLength = 10;
                this.columnPulmonaryAssmt_FremitusFindings.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_FremitusSignificance.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_ChstExpULE.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_ChstExpMLE.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_ChstExpLLE.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_ChstExpSig.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_Percussion.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_PercussionOthers.MaxLength = 100;
                this.columnPulmonaryAssmt_SixMinWalk.AllowDBNull = false;
                this.columnPulmonaryAssmt_SixMinWalkFindings.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_StairClimbing.AllowDBNull = false;
                this.columnPulmonaryAssmt_StairClimbingFindings.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_ShuttleTest.AllowDBNull = false;
                this.columnPulmonaryAssmt_ShuttleTestFindings.MaxLength = 2147483647;
                this.columnPulmonaryAssmt_OtherTest.AllowDBNull = false;
                this.columnPulmonaryAssmt_OtherTestFindings.MaxLength = 2147483647;
                this.columnCMAxilla_MaxInsT1.AllowDBNull = false;
                this.columnCMAxilla_MaxInsT2.AllowDBNull = false;
                this.columnCMAxilla_MaxInsT3.AllowDBNull = false;
                this.columnCMAxilla_MaxInsAve.AllowDBNull = false;
                this.columnCMAxilla_MaxExpT1.AllowDBNull = false;
                this.columnCMAxilla_MaxExpT2.AllowDBNull = false;
                this.columnCMAxilla_MaxExpT3.AllowDBNull = false;
                this.columnCMAxilla_MaxExpAve.AllowDBNull = false;
                this.columnCMAxilla_DiffT1.AllowDBNull = false;
                this.columnCMAxilla_DiffT2.AllowDBNull = false;
                this.columnCMAxilla_DiffT3.AllowDBNull = false;
                this.columnCMAxilla_DiffAve.AllowDBNull = false;
                this.columnCMXiphoid_MaxInsT1.AllowDBNull = false;
                this.columnCMXiphoid_MaxInsT2.AllowDBNull = false;
                this.columnCMXiphoid_MaxInsT3.AllowDBNull = false;
                this.columnCMXiphoid_MaxInsAve.AllowDBNull = false;
                this.columnCMXiphoid_MaxExpT1.AllowDBNull = false;
                this.columnCMXiphoid_MaxExpT2.AllowDBNull = false;
                this.columnCMXiphoid_MaxExpT3.AllowDBNull = false;
                this.columnCMXiphoid_MaxExpAve.AllowDBNull = false;
                this.columnCMXiphoid_DiffT1.AllowDBNull = false;
                this.columnCMXiphoid_DiffT2.AllowDBNull = false;
                this.columnCMXiphoid_DiffT3.AllowDBNull = false;
                this.columnCMXiphoid_DiffAve.AllowDBNull = false;
                this.columnCMLowerCostal_MaxInsT1.AllowDBNull = false;
                this.columnCMLowerCostal_MaxInsT2.AllowDBNull = false;
                this.columnCMLowerCostal_MaxInsT3.AllowDBNull = false;
                this.columnCMLowerCostal_MaxInsAve.AllowDBNull = false;
                this.columnCMLowerCostal_MaxExpT1.AllowDBNull = false;
                this.columnCMLowerCostal_MaxExpT2.AllowDBNull = false;
                this.columnCMLowerCostal_MaxExpT3.AllowDBNull = false;
                this.columnCMLowerCostal_MaxExpAve.AllowDBNull = false;
                this.columnCMLowerCostal_DiffT1.AllowDBNull = false;
                this.columnCMLowerCostal_DiffT2.AllowDBNull = false;
                this.columnCMLowerCostal_DiffT3.AllowDBNull = false;
                this.columnCMLowerCostal_DiffAve.AllowDBNull = false;
                this.columnAuscultation_Trachael.AllowDBNull = false;
                this.columnAuscultation_Bronchial.AllowDBNull = false;
                this.columnAuscultation_Bronchiovesicular.AllowDBNull = false;
                this.columnAuscultation_Vesicular.AllowDBNull = false;
                this.columnAuscultation_Crackles.AllowDBNull = false;
                this.columnAuscultation_DiminishedBreathSounds.AllowDBNull = false;
                this.columnAuscultation_HighPitchedBronchialBreathing.AllowDBNull = false;
                this.columnAuscultation_LowPitchedBronchialBreathing.AllowDBNull = false;
                this.columnAuscultation_PleuralRub.AllowDBNull = false;
                this.columnAuscultation_Rhonchi.AllowDBNull = false;
                this.columnAuscultation_Stridor.AllowDBNull = false;
                this.columnAuscultation_Wheeze.AllowDBNull = false;
                this.columnAuscultation_Others.AllowDBNull = false;
                this.columnAuscultation_OthersText.MaxLength = 100;
                this.columnFigureOfEight_Right.AllowDBNull = false;
                this.columnFigureOfEight_Left.AllowDBNull = false;
                this.columnFigureOfEight_Difference.AllowDBNull = false;
                this.columnFigureOfEight_Findings.MaxLength = 2147483647;
                this.columnFigureOfEight_Significance.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow NewPatientVisitsRow() {
                return ((PatientVisitsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PatientVisitsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PatientVisitsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PatientVisitsRowChanged != null)) {
                    this.PatientVisitsRowChanged(this, new PatientVisitsRowChangeEvent(((PatientVisitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PatientVisitsRowChanging != null)) {
                    this.PatientVisitsRowChanging(this, new PatientVisitsRowChangeEvent(((PatientVisitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PatientVisitsRowDeleted != null)) {
                    this.PatientVisitsRowDeleted(this, new PatientVisitsRowChangeEvent(((PatientVisitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PatientVisitsRowDeleting != null)) {
                    this.PatientVisitsRowDeleting(this, new PatientVisitsRowChangeEvent(((PatientVisitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePatientVisitsRow(PatientVisitsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PatientVisitsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AncillaryProceduresDataTable : global::System.Data.TypedTableBase<AncillaryProceduresRow> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnProcedureName;
            
            private global::System.Data.DataColumn columnProcedureDate;
            
            private global::System.Data.DataColumn columnResult;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AncillaryProceduresDataTable() {
                this.TableName = "AncillaryProcedures";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AncillaryProceduresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AncillaryProceduresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcedureNameColumn {
                get {
                    return this.columnProcedureName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcedureDateColumn {
                get {
                    return this.columnProcedureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AncillaryProceduresRow this[int index] {
                get {
                    return ((AncillaryProceduresRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AncillaryProceduresRowChangeEventHandler AncillaryProceduresRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AncillaryProceduresRowChangeEventHandler AncillaryProceduresRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AncillaryProceduresRowChangeEventHandler AncillaryProceduresRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AncillaryProceduresRowChangeEventHandler AncillaryProceduresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAncillaryProceduresRow(AncillaryProceduresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AncillaryProceduresRow AddAncillaryProceduresRow(string ProcedureName, System.DateTime ProcedureDate, string Result, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_AncillaryProcedures_dbo_PatientVisits_PatientVisitId) {
                AncillaryProceduresRow rowAncillaryProceduresRow = ((AncillaryProceduresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ProcedureName,
                        ProcedureDate,
                        Result,
                        null};
                if ((_parentPatientVisitsRowByFK_dbo_AncillaryProcedures_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[4] = _parentPatientVisitsRowByFK_dbo_AncillaryProcedures_dbo_PatientVisits_PatientVisitId[0];
                }
                rowAncillaryProceduresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAncillaryProceduresRow);
                return rowAncillaryProceduresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AncillaryProceduresRow FindByRowId(int RowId) {
                return ((AncillaryProceduresRow)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AncillaryProceduresDataTable cln = ((AncillaryProceduresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AncillaryProceduresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnProcedureName = base.Columns["ProcedureName"];
                this.columnProcedureDate = base.Columns["ProcedureDate"];
                this.columnResult = base.Columns["Result"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnProcedureName = new global::System.Data.DataColumn("ProcedureName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureName);
                this.columnProcedureDate = new global::System.Data.DataColumn("ProcedureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureDate);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnProcedureName.MaxLength = 50;
                this.columnProcedureDate.AllowDBNull = false;
                this.columnResult.MaxLength = 50;
                this.columnPatientVisitId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AncillaryProceduresRow NewAncillaryProceduresRow() {
                return ((AncillaryProceduresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AncillaryProceduresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AncillaryProceduresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AncillaryProceduresRowChanged != null)) {
                    this.AncillaryProceduresRowChanged(this, new AncillaryProceduresRowChangeEvent(((AncillaryProceduresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AncillaryProceduresRowChanging != null)) {
                    this.AncillaryProceduresRowChanging(this, new AncillaryProceduresRowChangeEvent(((AncillaryProceduresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AncillaryProceduresRowDeleted != null)) {
                    this.AncillaryProceduresRowDeleted(this, new AncillaryProceduresRowChangeEvent(((AncillaryProceduresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AncillaryProceduresRowDeleting != null)) {
                    this.AncillaryProceduresRowDeleting(this, new AncillaryProceduresRowChangeEvent(((AncillaryProceduresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAncillaryProceduresRow(AncillaryProceduresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AncillaryProceduresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DrugHistoriesDataTable : global::System.Data.TypedTableBase<DrugHistoriesRow> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnDrugName;
            
            private global::System.Data.DataColumn columnDrugDate;
            
            private global::System.Data.DataColumn columnResult;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrugHistoriesDataTable() {
                this.TableName = "DrugHistories";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DrugHistoriesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DrugHistoriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugNameColumn {
                get {
                    return this.columnDrugName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugDateColumn {
                get {
                    return this.columnDrugDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrugHistoriesRow this[int index] {
                get {
                    return ((DrugHistoriesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DrugHistoriesRowChangeEventHandler DrugHistoriesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DrugHistoriesRowChangeEventHandler DrugHistoriesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DrugHistoriesRowChangeEventHandler DrugHistoriesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DrugHistoriesRowChangeEventHandler DrugHistoriesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDrugHistoriesRow(DrugHistoriesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrugHistoriesRow AddDrugHistoriesRow(string DrugName, System.DateTime DrugDate, string Result, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_DrugHistories_dbo_PatientVisits_PatientVisitId) {
                DrugHistoriesRow rowDrugHistoriesRow = ((DrugHistoriesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DrugName,
                        DrugDate,
                        Result,
                        null};
                if ((_parentPatientVisitsRowByFK_dbo_DrugHistories_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[4] = _parentPatientVisitsRowByFK_dbo_DrugHistories_dbo_PatientVisits_PatientVisitId[0];
                }
                rowDrugHistoriesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDrugHistoriesRow);
                return rowDrugHistoriesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrugHistoriesRow FindByRowId(int RowId) {
                return ((DrugHistoriesRow)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DrugHistoriesDataTable cln = ((DrugHistoriesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DrugHistoriesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnDrugName = base.Columns["DrugName"];
                this.columnDrugDate = base.Columns["DrugDate"];
                this.columnResult = base.Columns["Result"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnDrugName = new global::System.Data.DataColumn("DrugName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugName);
                this.columnDrugDate = new global::System.Data.DataColumn("DrugDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugDate);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnDrugName.MaxLength = 50;
                this.columnDrugDate.AllowDBNull = false;
                this.columnResult.MaxLength = 50;
                this.columnPatientVisitId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrugHistoriesRow NewDrugHistoriesRow() {
                return ((DrugHistoriesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DrugHistoriesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DrugHistoriesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DrugHistoriesRowChanged != null)) {
                    this.DrugHistoriesRowChanged(this, new DrugHistoriesRowChangeEvent(((DrugHistoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DrugHistoriesRowChanging != null)) {
                    this.DrugHistoriesRowChanging(this, new DrugHistoriesRowChangeEvent(((DrugHistoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DrugHistoriesRowDeleted != null)) {
                    this.DrugHistoriesRowDeleted(this, new DrugHistoriesRowChangeEvent(((DrugHistoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DrugHistoriesRowDeleting != null)) {
                    this.DrugHistoriesRowDeleting(this, new DrugHistoriesRowChangeEvent(((DrugHistoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDrugHistoriesRow(DrugHistoriesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DrugHistoriesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ROMsDataTable : global::System.Data.TypedTableBase<ROMsRow> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnMotion;
            
            private global::System.Data.DataColumn columnArom;
            
            private global::System.Data.DataColumn columnProm;
            
            private global::System.Data.DataColumn columnNormalValue;
            
            private global::System.Data.DataColumn columnDifference;
            
            private global::System.Data.DataColumn columnEndFeel;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROMsDataTable() {
                this.TableName = "ROMs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ROMsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ROMsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotionColumn {
                get {
                    return this.columnMotion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AromColumn {
                get {
                    return this.columnArom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PromColumn {
                get {
                    return this.columnProm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NormalValueColumn {
                get {
                    return this.columnNormalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DifferenceColumn {
                get {
                    return this.columnDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndFeelColumn {
                get {
                    return this.columnEndFeel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROMsRow this[int index] {
                get {
                    return ((ROMsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ROMsRowChangeEventHandler ROMsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ROMsRowChangeEventHandler ROMsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ROMsRowChangeEventHandler ROMsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ROMsRowChangeEventHandler ROMsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddROMsRow(ROMsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROMsRow AddROMsRow(string Motion, decimal Arom, decimal Prom, decimal NormalValue, decimal Difference, string EndFeel, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_ROMs_dbo_PatientVisits_PatientVisitId) {
                ROMsRow rowROMsRow = ((ROMsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Motion,
                        Arom,
                        Prom,
                        NormalValue,
                        Difference,
                        EndFeel,
                        null};
                if ((_parentPatientVisitsRowByFK_dbo_ROMs_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[7] = _parentPatientVisitsRowByFK_dbo_ROMs_dbo_PatientVisits_PatientVisitId[0];
                }
                rowROMsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowROMsRow);
                return rowROMsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROMsRow FindByRowId(int RowId) {
                return ((ROMsRow)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ROMsDataTable cln = ((ROMsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ROMsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnMotion = base.Columns["Motion"];
                this.columnArom = base.Columns["Arom"];
                this.columnProm = base.Columns["Prom"];
                this.columnNormalValue = base.Columns["NormalValue"];
                this.columnDifference = base.Columns["Difference"];
                this.columnEndFeel = base.Columns["EndFeel"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnMotion = new global::System.Data.DataColumn("Motion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotion);
                this.columnArom = new global::System.Data.DataColumn("Arom", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArom);
                this.columnProm = new global::System.Data.DataColumn("Prom", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProm);
                this.columnNormalValue = new global::System.Data.DataColumn("NormalValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalValue);
                this.columnDifference = new global::System.Data.DataColumn("Difference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifference);
                this.columnEndFeel = new global::System.Data.DataColumn("EndFeel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndFeel);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnMotion.MaxLength = 100;
                this.columnArom.AllowDBNull = false;
                this.columnProm.AllowDBNull = false;
                this.columnNormalValue.AllowDBNull = false;
                this.columnDifference.AllowDBNull = false;
                this.columnEndFeel.MaxLength = 20;
                this.columnPatientVisitId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROMsRow NewROMsRow() {
                return ((ROMsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ROMsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ROMsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ROMsRowChanged != null)) {
                    this.ROMsRowChanged(this, new ROMsRowChangeEvent(((ROMsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ROMsRowChanging != null)) {
                    this.ROMsRowChanging(this, new ROMsRowChangeEvent(((ROMsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ROMsRowDeleted != null)) {
                    this.ROMsRowDeleted(this, new ROMsRowChangeEvent(((ROMsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ROMsRowDeleting != null)) {
                    this.ROMsRowDeleting(this, new ROMsRowChangeEvent(((ROMsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveROMsRow(ROMsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ROMsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ROM2DataTable : global::System.Data.TypedTableBase<ROM2Row> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnMotion;
            
            private global::System.Data.DataColumn columnAromR;
            
            private global::System.Data.DataColumn columnAromL;
            
            private global::System.Data.DataColumn columnPromR;
            
            private global::System.Data.DataColumn columnPromL;
            
            private global::System.Data.DataColumn columnNormalValue;
            
            private global::System.Data.DataColumn columnDifferenceR;
            
            private global::System.Data.DataColumn columnDifferenceL;
            
            private global::System.Data.DataColumn columnEndFeel;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROM2DataTable() {
                this.TableName = "ROM2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ROM2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ROM2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotionColumn {
                get {
                    return this.columnMotion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AromRColumn {
                get {
                    return this.columnAromR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AromLColumn {
                get {
                    return this.columnAromL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PromRColumn {
                get {
                    return this.columnPromR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PromLColumn {
                get {
                    return this.columnPromL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NormalValueColumn {
                get {
                    return this.columnNormalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DifferenceRColumn {
                get {
                    return this.columnDifferenceR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DifferenceLColumn {
                get {
                    return this.columnDifferenceL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndFeelColumn {
                get {
                    return this.columnEndFeel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROM2Row this[int index] {
                get {
                    return ((ROM2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ROM2RowChangeEventHandler ROM2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ROM2RowChangeEventHandler ROM2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ROM2RowChangeEventHandler ROM2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ROM2RowChangeEventHandler ROM2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddROM2Row(ROM2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROM2Row AddROM2Row(string Motion, decimal AromR, decimal AromL, decimal PromR, decimal PromL, decimal NormalValue, decimal DifferenceR, decimal DifferenceL, string EndFeel, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_ROM2_dbo_PatientVisits_PatientVisitId) {
                ROM2Row rowROM2Row = ((ROM2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Motion,
                        AromR,
                        AromL,
                        PromR,
                        PromL,
                        NormalValue,
                        DifferenceR,
                        DifferenceL,
                        EndFeel,
                        null};
                if ((_parentPatientVisitsRowByFK_dbo_ROM2_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[10] = _parentPatientVisitsRowByFK_dbo_ROM2_dbo_PatientVisits_PatientVisitId[0];
                }
                rowROM2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowROM2Row);
                return rowROM2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROM2Row FindByRowId(int RowId) {
                return ((ROM2Row)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ROM2DataTable cln = ((ROM2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ROM2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnMotion = base.Columns["Motion"];
                this.columnAromR = base.Columns["AromR"];
                this.columnAromL = base.Columns["AromL"];
                this.columnPromR = base.Columns["PromR"];
                this.columnPromL = base.Columns["PromL"];
                this.columnNormalValue = base.Columns["NormalValue"];
                this.columnDifferenceR = base.Columns["DifferenceR"];
                this.columnDifferenceL = base.Columns["DifferenceL"];
                this.columnEndFeel = base.Columns["EndFeel"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnMotion = new global::System.Data.DataColumn("Motion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotion);
                this.columnAromR = new global::System.Data.DataColumn("AromR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAromR);
                this.columnAromL = new global::System.Data.DataColumn("AromL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAromL);
                this.columnPromR = new global::System.Data.DataColumn("PromR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromR);
                this.columnPromL = new global::System.Data.DataColumn("PromL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromL);
                this.columnNormalValue = new global::System.Data.DataColumn("NormalValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalValue);
                this.columnDifferenceR = new global::System.Data.DataColumn("DifferenceR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifferenceR);
                this.columnDifferenceL = new global::System.Data.DataColumn("DifferenceL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifferenceL);
                this.columnEndFeel = new global::System.Data.DataColumn("EndFeel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndFeel);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnMotion.MaxLength = 100;
                this.columnAromR.AllowDBNull = false;
                this.columnAromL.AllowDBNull = false;
                this.columnPromR.AllowDBNull = false;
                this.columnPromL.AllowDBNull = false;
                this.columnNormalValue.AllowDBNull = false;
                this.columnDifferenceR.AllowDBNull = false;
                this.columnDifferenceL.AllowDBNull = false;
                this.columnEndFeel.MaxLength = 20;
                this.columnPatientVisitId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROM2Row NewROM2Row() {
                return ((ROM2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ROM2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ROM2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ROM2RowChanged != null)) {
                    this.ROM2RowChanged(this, new ROM2RowChangeEvent(((ROM2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ROM2RowChanging != null)) {
                    this.ROM2RowChanging(this, new ROM2RowChangeEvent(((ROM2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ROM2RowDeleted != null)) {
                    this.ROM2RowDeleted(this, new ROM2RowChangeEvent(((ROM2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ROM2RowDeleting != null)) {
                    this.ROM2RowDeleting(this, new ROM2RowChangeEvent(((ROM2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveROM2Row(ROM2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ROM2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MMTsDataTable : global::System.Data.TypedTableBase<MMTsRow> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnMotion;
            
            private global::System.Data.DataColumn columnGradeR;
            
            private global::System.Data.DataColumn columnGraderL;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MMTsDataTable() {
                this.TableName = "MMTs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MMTsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MMTsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotionColumn {
                get {
                    return this.columnMotion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GradeRColumn {
                get {
                    return this.columnGradeR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GraderLColumn {
                get {
                    return this.columnGraderL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MMTsRow this[int index] {
                get {
                    return ((MMTsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MMTsRowChangeEventHandler MMTsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MMTsRowChangeEventHandler MMTsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MMTsRowChangeEventHandler MMTsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MMTsRowChangeEventHandler MMTsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMMTsRow(MMTsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MMTsRow AddMMTsRow(string Motion, decimal GradeR, decimal GraderL, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_MMTs_dbo_PatientVisits_PatientVisitId) {
                MMTsRow rowMMTsRow = ((MMTsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Motion,
                        GradeR,
                        GraderL,
                        null};
                if ((_parentPatientVisitsRowByFK_dbo_MMTs_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[4] = _parentPatientVisitsRowByFK_dbo_MMTs_dbo_PatientVisits_PatientVisitId[0];
                }
                rowMMTsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMMTsRow);
                return rowMMTsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MMTsRow FindByRowId(int RowId) {
                return ((MMTsRow)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MMTsDataTable cln = ((MMTsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MMTsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnMotion = base.Columns["Motion"];
                this.columnGradeR = base.Columns["GradeR"];
                this.columnGraderL = base.Columns["GraderL"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnMotion = new global::System.Data.DataColumn("Motion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotion);
                this.columnGradeR = new global::System.Data.DataColumn("GradeR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGradeR);
                this.columnGraderL = new global::System.Data.DataColumn("GraderL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraderL);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnMotion.MaxLength = 100;
                this.columnGradeR.AllowDBNull = false;
                this.columnGraderL.AllowDBNull = false;
                this.columnPatientVisitId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MMTsRow NewMMTsRow() {
                return ((MMTsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MMTsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MMTsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MMTsRowChanged != null)) {
                    this.MMTsRowChanged(this, new MMTsRowChangeEvent(((MMTsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MMTsRowChanging != null)) {
                    this.MMTsRowChanging(this, new MMTsRowChangeEvent(((MMTsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MMTsRowDeleted != null)) {
                    this.MMTsRowDeleted(this, new MMTsRowChangeEvent(((MMTsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MMTsRowDeleting != null)) {
                    this.MMTsRowDeleting(this, new MMTsRowChangeEvent(((MMTsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMMTsRow(MMTsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MMTsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SensoryAxesDataTable : global::System.Data.TypedTableBase<SensoryAxesRow> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnMaterialUsed;
            
            private global::System.Data.DataColumn columnLandmarks;
            
            private global::System.Data.DataColumn columnResult;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SensoryAxesDataTable() {
                this.TableName = "SensoryAxes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SensoryAxesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SensoryAxesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialUsedColumn {
                get {
                    return this.columnMaterialUsed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LandmarksColumn {
                get {
                    return this.columnLandmarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SensoryAxesRow this[int index] {
                get {
                    return ((SensoryAxesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SensoryAxesRowChangeEventHandler SensoryAxesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SensoryAxesRowChangeEventHandler SensoryAxesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SensoryAxesRowChangeEventHandler SensoryAxesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SensoryAxesRowChangeEventHandler SensoryAxesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSensoryAxesRow(SensoryAxesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SensoryAxesRow AddSensoryAxesRow(string MaterialUsed, string Landmarks, string Result, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_SensoryAxes_dbo_PatientVisits_PatientVisitId) {
                SensoryAxesRow rowSensoryAxesRow = ((SensoryAxesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MaterialUsed,
                        Landmarks,
                        Result,
                        null};
                if ((_parentPatientVisitsRowByFK_dbo_SensoryAxes_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[4] = _parentPatientVisitsRowByFK_dbo_SensoryAxes_dbo_PatientVisits_PatientVisitId[0];
                }
                rowSensoryAxesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSensoryAxesRow);
                return rowSensoryAxesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SensoryAxesRow FindByRowId(int RowId) {
                return ((SensoryAxesRow)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SensoryAxesDataTable cln = ((SensoryAxesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SensoryAxesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnMaterialUsed = base.Columns["MaterialUsed"];
                this.columnLandmarks = base.Columns["Landmarks"];
                this.columnResult = base.Columns["Result"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnMaterialUsed = new global::System.Data.DataColumn("MaterialUsed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialUsed);
                this.columnLandmarks = new global::System.Data.DataColumn("Landmarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandmarks);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnMaterialUsed.MaxLength = 100;
                this.columnLandmarks.MaxLength = 100;
                this.columnResult.MaxLength = 50;
                this.columnPatientVisitId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SensoryAxesRow NewSensoryAxesRow() {
                return ((SensoryAxesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SensoryAxesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SensoryAxesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SensoryAxesRowChanged != null)) {
                    this.SensoryAxesRowChanged(this, new SensoryAxesRowChangeEvent(((SensoryAxesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SensoryAxesRowChanging != null)) {
                    this.SensoryAxesRowChanging(this, new SensoryAxesRowChangeEvent(((SensoryAxesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SensoryAxesRowDeleted != null)) {
                    this.SensoryAxesRowDeleted(this, new SensoryAxesRowChangeEvent(((SensoryAxesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SensoryAxesRowDeleting != null)) {
                    this.SensoryAxesRowDeleting(this, new SensoryAxesRowChangeEvent(((SensoryAxesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSensoryAxesRow(SensoryAxesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SensoryAxesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CranialNerveAssmtsDataTable : global::System.Data.TypedTableBase<CranialNerveAssmtsRow> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnRight;
            
            private global::System.Data.DataColumn columnLeft;
            
            private global::System.Data.DataColumn columnResult;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            private global::System.Data.DataColumn columnCranialNerve;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CranialNerveAssmtsDataTable() {
                this.TableName = "CranialNerveAssmts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CranialNerveAssmtsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CranialNerveAssmtsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RightColumn {
                get {
                    return this.columnRight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeftColumn {
                get {
                    return this.columnLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CranialNerveColumn {
                get {
                    return this.columnCranialNerve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CranialNerveAssmtsRow this[int index] {
                get {
                    return ((CranialNerveAssmtsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CranialNerveAssmtsRowChangeEventHandler CranialNerveAssmtsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CranialNerveAssmtsRowChangeEventHandler CranialNerveAssmtsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CranialNerveAssmtsRowChangeEventHandler CranialNerveAssmtsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CranialNerveAssmtsRowChangeEventHandler CranialNerveAssmtsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCranialNerveAssmtsRow(CranialNerveAssmtsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CranialNerveAssmtsRow AddCranialNerveAssmtsRow(string Right, string Left, string Result, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_CranialNerveAssmts_dbo_PatientVisits_PatientVisitId, string CranialNerve) {
                CranialNerveAssmtsRow rowCranialNerveAssmtsRow = ((CranialNerveAssmtsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Right,
                        Left,
                        Result,
                        null,
                        CranialNerve};
                if ((_parentPatientVisitsRowByFK_dbo_CranialNerveAssmts_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[4] = _parentPatientVisitsRowByFK_dbo_CranialNerveAssmts_dbo_PatientVisits_PatientVisitId[0];
                }
                rowCranialNerveAssmtsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCranialNerveAssmtsRow);
                return rowCranialNerveAssmtsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CranialNerveAssmtsRow FindByRowId(int RowId) {
                return ((CranialNerveAssmtsRow)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CranialNerveAssmtsDataTable cln = ((CranialNerveAssmtsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CranialNerveAssmtsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnRight = base.Columns["Right"];
                this.columnLeft = base.Columns["Left"];
                this.columnResult = base.Columns["Result"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
                this.columnCranialNerve = base.Columns["CranialNerve"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnRight = new global::System.Data.DataColumn("Right", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRight);
                this.columnLeft = new global::System.Data.DataColumn("Left", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeft);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.columnCranialNerve = new global::System.Data.DataColumn("CranialNerve", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCranialNerve);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnRight.MaxLength = 2;
                this.columnLeft.MaxLength = 2;
                this.columnResult.MaxLength = 50;
                this.columnPatientVisitId.AllowDBNull = false;
                this.columnCranialNerve.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CranialNerveAssmtsRow NewCranialNerveAssmtsRow() {
                return ((CranialNerveAssmtsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CranialNerveAssmtsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CranialNerveAssmtsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CranialNerveAssmtsRowChanged != null)) {
                    this.CranialNerveAssmtsRowChanged(this, new CranialNerveAssmtsRowChangeEvent(((CranialNerveAssmtsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CranialNerveAssmtsRowChanging != null)) {
                    this.CranialNerveAssmtsRowChanging(this, new CranialNerveAssmtsRowChangeEvent(((CranialNerveAssmtsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CranialNerveAssmtsRowDeleted != null)) {
                    this.CranialNerveAssmtsRowDeleted(this, new CranialNerveAssmtsRowChangeEvent(((CranialNerveAssmtsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CranialNerveAssmtsRowDeleting != null)) {
                    this.CranialNerveAssmtsRowDeleting(this, new CranialNerveAssmtsRowChangeEvent(((CranialNerveAssmtsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCranialNerveAssmtsRow(CranialNerveAssmtsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CranialNerveAssmtsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CoordinationAssmtsDataTable : global::System.Data.TypedTableBase<CoordinationAssmtsRow> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnCoordinationTest;
            
            private global::System.Data.DataColumn columnRight;
            
            private global::System.Data.DataColumn columnLeft;
            
            private global::System.Data.DataColumn columnResult;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CoordinationAssmtsDataTable() {
                this.TableName = "CoordinationAssmts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CoordinationAssmtsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CoordinationAssmtsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoordinationTestColumn {
                get {
                    return this.columnCoordinationTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RightColumn {
                get {
                    return this.columnRight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeftColumn {
                get {
                    return this.columnLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CoordinationAssmtsRow this[int index] {
                get {
                    return ((CoordinationAssmtsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CoordinationAssmtsRowChangeEventHandler CoordinationAssmtsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CoordinationAssmtsRowChangeEventHandler CoordinationAssmtsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CoordinationAssmtsRowChangeEventHandler CoordinationAssmtsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CoordinationAssmtsRowChangeEventHandler CoordinationAssmtsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCoordinationAssmtsRow(CoordinationAssmtsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CoordinationAssmtsRow AddCoordinationAssmtsRow(string CoordinationTest, string Right, string Left, string Result, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_CoordinationAssmts_dbo_PatientVisits_PatientVisitId) {
                CoordinationAssmtsRow rowCoordinationAssmtsRow = ((CoordinationAssmtsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CoordinationTest,
                        Right,
                        Left,
                        Result,
                        null};
                if ((_parentPatientVisitsRowByFK_dbo_CoordinationAssmts_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[5] = _parentPatientVisitsRowByFK_dbo_CoordinationAssmts_dbo_PatientVisits_PatientVisitId[0];
                }
                rowCoordinationAssmtsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCoordinationAssmtsRow);
                return rowCoordinationAssmtsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CoordinationAssmtsRow FindByRowId(int RowId) {
                return ((CoordinationAssmtsRow)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CoordinationAssmtsDataTable cln = ((CoordinationAssmtsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CoordinationAssmtsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnCoordinationTest = base.Columns["CoordinationTest"];
                this.columnRight = base.Columns["Right"];
                this.columnLeft = base.Columns["Left"];
                this.columnResult = base.Columns["Result"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnCoordinationTest = new global::System.Data.DataColumn("CoordinationTest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoordinationTest);
                this.columnRight = new global::System.Data.DataColumn("Right", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRight);
                this.columnLeft = new global::System.Data.DataColumn("Left", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeft);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnCoordinationTest.MaxLength = 50;
                this.columnRight.MaxLength = 50;
                this.columnLeft.MaxLength = 50;
                this.columnResult.MaxLength = 50;
                this.columnPatientVisitId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CoordinationAssmtsRow NewCoordinationAssmtsRow() {
                return ((CoordinationAssmtsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CoordinationAssmtsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CoordinationAssmtsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CoordinationAssmtsRowChanged != null)) {
                    this.CoordinationAssmtsRowChanged(this, new CoordinationAssmtsRowChangeEvent(((CoordinationAssmtsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CoordinationAssmtsRowChanging != null)) {
                    this.CoordinationAssmtsRowChanging(this, new CoordinationAssmtsRowChangeEvent(((CoordinationAssmtsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CoordinationAssmtsRowDeleted != null)) {
                    this.CoordinationAssmtsRowDeleted(this, new CoordinationAssmtsRowChangeEvent(((CoordinationAssmtsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CoordinationAssmtsRowDeleting != null)) {
                    this.CoordinationAssmtsRowDeleting(this, new CoordinationAssmtsRowChangeEvent(((CoordinationAssmtsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCoordinationAssmtsRow(CoordinationAssmtsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CoordinationAssmtsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MBMsDataTable : global::System.Data.TypedTableBase<MBMsRow> {
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnMarkings;
            
            private global::System.Data.DataColumn columnRight;
            
            private global::System.Data.DataColumn columnLeft;
            
            private global::System.Data.DataColumn columnDifference;
            
            private global::System.Data.DataColumn columnPatientVisitId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBMsDataTable() {
                this.TableName = "MBMs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MBMsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MBMsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkingsColumn {
                get {
                    return this.columnMarkings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RightColumn {
                get {
                    return this.columnRight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeftColumn {
                get {
                    return this.columnLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DifferenceColumn {
                get {
                    return this.columnDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientVisitIdColumn {
                get {
                    return this.columnPatientVisitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBMsRow this[int index] {
                get {
                    return ((MBMsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MBMsRowChangeEventHandler MBMsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MBMsRowChangeEventHandler MBMsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MBMsRowChangeEventHandler MBMsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MBMsRowChangeEventHandler MBMsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMBMsRow(MBMsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBMsRow AddMBMsRow(string Location, string Markings, decimal Right, decimal Left, decimal Difference, PatientVisitsRow _parentPatientVisitsRowByFK_dbo_MBMs_dbo_PatientVisits_PatientVisitId) {
                MBMsRow rowMBMsRow = ((MBMsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Location,
                        Markings,
                        Right,
                        Left,
                        Difference,
                        null};
                if ((_parentPatientVisitsRowByFK_dbo_MBMs_dbo_PatientVisits_PatientVisitId != null)) {
                    columnValuesArray[6] = _parentPatientVisitsRowByFK_dbo_MBMs_dbo_PatientVisits_PatientVisitId[0];
                }
                rowMBMsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMBMsRow);
                return rowMBMsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBMsRow FindByRowId(int RowId) {
                return ((MBMsRow)(this.Rows.Find(new object[] {
                            RowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MBMsDataTable cln = ((MBMsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MBMsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRowId = base.Columns["RowId"];
                this.columnLocation = base.Columns["Location"];
                this.columnMarkings = base.Columns["Markings"];
                this.columnRight = base.Columns["Right"];
                this.columnLeft = base.Columns["Left"];
                this.columnDifference = base.Columns["Difference"];
                this.columnPatientVisitId = base.Columns["PatientVisitId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnMarkings = new global::System.Data.DataColumn("Markings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkings);
                this.columnRight = new global::System.Data.DataColumn("Right", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRight);
                this.columnLeft = new global::System.Data.DataColumn("Left", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeft);
                this.columnDifference = new global::System.Data.DataColumn("Difference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifference);
                this.columnPatientVisitId = new global::System.Data.DataColumn("PatientVisitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientVisitId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowId}, true));
                this.columnRowId.AutoIncrement = true;
                this.columnRowId.AutoIncrementSeed = -1;
                this.columnRowId.AutoIncrementStep = -1;
                this.columnRowId.AllowDBNull = false;
                this.columnRowId.ReadOnly = true;
                this.columnRowId.Unique = true;
                this.columnLocation.MaxLength = 50;
                this.columnMarkings.MaxLength = 50;
                this.columnRight.AllowDBNull = false;
                this.columnLeft.AllowDBNull = false;
                this.columnDifference.AllowDBNull = false;
                this.columnPatientVisitId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBMsRow NewMBMsRow() {
                return ((MBMsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MBMsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MBMsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MBMsRowChanged != null)) {
                    this.MBMsRowChanged(this, new MBMsRowChangeEvent(((MBMsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MBMsRowChanging != null)) {
                    this.MBMsRowChanging(this, new MBMsRowChangeEvent(((MBMsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MBMsRowDeleted != null)) {
                    this.MBMsRowDeleted(this, new MBMsRowChangeEvent(((MBMsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MBMsRowDeleting != null)) {
                    this.MBMsRowDeleting(this, new MBMsRowChangeEvent(((MBMsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMBMsRow(MBMsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SoapDataSet ds = new SoapDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MBMsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PatientVisitsRow : global::System.Data.DataRow {
            
            private PatientVisitsDataTable tablePatientVisits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PatientVisitsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePatientVisits = ((PatientVisitsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tablePatientVisits.PatientVisitIdColumn]));
                }
                set {
                    this[this.tablePatientVisits.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName {
                get {
                    return ((string)(this[this.tablePatientVisits.FirstNameColumn]));
                }
                set {
                    this[this.tablePatientVisits.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastName {
                get {
                    return ((string)(this[this.tablePatientVisits.LastNameColumn]));
                }
                set {
                    this[this.tablePatientVisits.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Age {
                get {
                    return ((int)(this[this.tablePatientVisits.AgeColumn]));
                }
                set {
                    this[this.tablePatientVisits.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CivilStatus {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CivilStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CivilStatus\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CivilStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HandedNess {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.HandedNessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HandedNess\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.HandedNessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Occupation {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OccupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Occupation\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Religion {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.ReligionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Religion\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.ReligionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateOfConsultation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientVisits.DateOfConsultationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfConsultation\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DateOfConsultationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientType {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PatientTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientType\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PatientTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GeneralPhysician {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.GeneralPhysicianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralPhysician\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.GeneralPhysicianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateOfReferral {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientVisits.DateOfReferralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfReferral\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DateOfReferralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Neurologist {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.NeurologistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Neurologist\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.NeurologistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HPI {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.HPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HPI\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.HPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientId {
                get {
                    return ((int)(this[this.tablePatientVisits.PatientIdColumn]));
                }
                set {
                    this[this.tablePatientVisits.PatientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CityTown {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CityTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityTown\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CityTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Province {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.ProvinceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Province\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.ProvinceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateOfAdmission {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientVisits.DateOfAdmissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfAdmission\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DateOfAdmissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Surgeon {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SurgeonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Surgeon\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SurgeonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateOfSurgery {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientVisits.DateOfSurgeryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfSurgery\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DateOfSurgeryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Orthopedic {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OrthopedicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orthopedic\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OrthopedicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Cardiologist {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CardiologistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cardiologist\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CardiologistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Opthalmologoist {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OpthalmologoistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Opthalmologoist\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OpthalmologoistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Pulmonologist {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonologistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pulmonologist\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonologistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherDoctor {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OtherDoctorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDoctor\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OtherDoctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReferringDoctor {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.ReferringDoctorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferringDoctor\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.ReferringDoctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateOfInitialEvaluation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientVisits.DateOfInitialEvaluationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfInitialEvaluation\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DateOfInitialEvaluationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Diagnosis {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DiagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diagnosis\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_Trauma {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_TraumaColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_TraumaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_Arthritis {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_ArthritisColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_ArthritisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_HPN {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_HPNColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_HPNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_DM {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_DMColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_DMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_Allergies {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_AllergiesColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_AllergiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_Surgery {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_SurgeryColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_SurgeryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PMHx_SurgeryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientVisits.PMHx_SurgeryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_SurgeryDate\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_SurgeryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_CardiovascularDisease {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_CardiovascularDiseaseColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_CardiovascularDiseaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_PulmonaryCondition {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_PulmonaryConditionColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_PulmonaryConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_NeurologyCondition {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_NeurologyConditionColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_NeurologyConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_Cancer {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_CancerColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_CancerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_Others {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_OthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_Others\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_HypertensionF {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_HypertensionFColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_HypertensionFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_HypertensionM {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_HypertensionMColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_HypertensionMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_ArthritisF {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_ArthritisFColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_ArthritisFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_ArthritisM {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_ArthritisMColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_ArthritisMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_DiabetesMellitusF {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_DiabetesMellitusFColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_DiabetesMellitusFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_DiabetesMellitusM {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_DiabetesMellitusMColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_DiabetesMellitusMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_CancerF {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_CancerFColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_CancerFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_CancerM {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_CancerMColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_CancerMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_AsthmaF {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_AsthmaFColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_AsthmaFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_AsthmaM {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_AsthmaMColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_AsthmaMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_AllergiesF {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_AllergiesFColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_AllergiesFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_AllergiesM {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_AllergiesMColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_AllergiesMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_NeurologicConditionF {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_NeurologicConditionFColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_NeurologicConditionFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_NeurologicConditionM {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_NeurologicConditionMColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_NeurologicConditionMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FMHx_Others {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.FMHx_OthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FMHx_Others\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.FMHx_OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_OthersF {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_OthersFColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_OthersFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FMHx_OthersM {
                get {
                    return ((bool)(this[this.tablePatientVisits.FMHx_OthersMColumn]));
                }
                set {
                    this[this.tablePatientVisits.FMHx_OthersMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_FinancialStatus {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_FinancialStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_FinancialStatus\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_FinancialStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_PersonalityType {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_PersonalityTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_PersonalityType\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_PersonalityTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_LifeStyle {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_LifeStyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_LifeStyle\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_LifeStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_EducationalAttainment {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_EducationalAttainmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_EducationalAttainment\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_EducationalAttainmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_LivesWith {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_LivesWithColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_LivesWith\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_LivesWithColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PSEHx_NumberOfOffspring {
                get {
                    return ((int)(this[this.tablePatientVisits.PSEHx_NumberOfOffspringColumn]));
                }
                set {
                    this[this.tablePatientVisits.PSEHx_NumberOfOffspringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_Relatives {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_RelativesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_Relatives\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_RelativesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_OtherLivesWith {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_OtherLivesWithColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_OtherLivesWith\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_OtherLivesWithColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_Hobbies {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_HobbiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_Hobbies\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_HobbiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_Sports {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_SportsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_Sports\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_SportsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_OtherHobbies {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_OtherHobbiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_OtherHobbies\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_OtherHobbiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PSEHx_CigaretteSmoker {
                get {
                    return ((bool)(this[this.tablePatientVisits.PSEHx_CigaretteSmokerColumn]));
                }
                set {
                    this[this.tablePatientVisits.PSEHx_CigaretteSmokerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PSEHx_AlcoholDrinker {
                get {
                    return ((bool)(this[this.tablePatientVisits.PSEHx_AlcoholDrinkerColumn]));
                }
                set {
                    this[this.tablePatientVisits.PSEHx_AlcoholDrinkerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_TypeOfHouse {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_TypeOfHouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_TypeOfHouse\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_TypeOfHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PSEHx_OtherTypeOfHouse {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PSEHx_OtherTypeOfHouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSEHx_OtherTypeOfHouse\' in table \'PatientVisits\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PSEHx_OtherTypeOfHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_TraumaText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_TraumaTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_TraumaText\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_TraumaTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_DMText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_DMTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_DMText\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_DMTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_SurgeryText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_SurgeryTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_SurgeryText\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_SurgeryTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_Hospitalization {
                get {
                    return ((bool)(this[this.tablePatientVisits.PMHx_HospitalizationColumn]));
                }
                set {
                    this[this.tablePatientVisits.PMHx_HospitalizationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_HospitalizationText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_HospitalizationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_HospitalizationText\' in table \'PatientVisits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_HospitalizationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PMHx_HospitalizationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientVisits.PMHx_HospitalizationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_HospitalizationDate\' in table \'PatientVisits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_HospitalizationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_CardiovascularDiseaseText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_CardiovascularDiseaseTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_CardiovascularDiseaseText\' in table \'PatientVisits\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_CardiovascularDiseaseTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_PulmonaryConditionText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_PulmonaryConditionTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_PulmonaryConditionText\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_PulmonaryConditionTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_NeurologyConditionText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_NeurologyConditionTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_NeurologyConditionText\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_NeurologyConditionTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PMHx_ArthritisText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PMHx_ArthritisTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_ArthritisText\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_ArthritisTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PMHx_AsthmaDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientVisits.PMHx_AsthmaDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_AsthmaDate\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_AsthmaDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PMHx_Asthma {
                get {
                    try {
                        return ((bool)(this[this.tablePatientVisits.PMHx_AsthmaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMHx_Asthma\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PMHx_AsthmaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RomFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.RomFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RomFindings\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.RomFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RomSignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.RomSignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RomSignificance\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.RomSignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MmtFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.MmtFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MmtFindings\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.MmtFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MmtSignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.MmtSignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MmtSignificance\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.MmtSignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SensoryFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SensoryFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SensoryFindings\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SensoryFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SensorySignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SensorySignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SensorySignificance\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SensorySignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CranialNerveAssmtFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CranialNerveAssmtFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CranialNerveAssmtFindings\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CranialNerveAssmtFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CranialNerveAssmtSignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CranialNerveAssmtSignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CranialNerveAssmtSignificance\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CranialNerveAssmtSignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoordinationAssmtFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CoordinationAssmtFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoordinationAssmtFindings\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CoordinationAssmtFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoordinationAssmtSignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CoordinationAssmtSignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoordinationAssmtSignificance\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CoordinationAssmtSignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MbmFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.MbmFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MbmFindings\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.MbmFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MbmSignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.MbmSignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MbmSignificance\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.MbmSignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_ChiefComplaint {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_ChiefComplaintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_ChiefComplaint\' in table \'PatientVisits" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_ChiefComplaintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_PtTranslation {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_PtTranslationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_PtTranslation\' in table \'PatientVisits\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_PtTranslationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_BPBefore {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_BPBeforeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_BPBefore\' in table \'PatientVisits\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_BPBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_BPAfter {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_BPAfterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_BPAfter\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_BPAfterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_RRBefore {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_RRBeforeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_RRBefore\' in table \'PatientVisits\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_RRBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_RRAfter {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_RRAfterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_RRAfter\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_RRAfterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_PRBefore {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_PRBeforeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_PRBefore\' in table \'PatientVisits\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_PRBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_PRAfter {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_PRAfterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_PRAfter\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_PRAfterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_TBefore {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_TBeforeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_TBefore\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_TBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_TAfter {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_TAfterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_TAfter\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_TAfterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_Findings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_FindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_Findings\' in table \'PatientVisits\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_FindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectiveObjective_Significance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.SubjectiveObjective_SignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectiveObjective_Significance\' in table \'PatientVisits\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.SubjectiveObjective_SignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OcularInspection_Ambulation {
                get {
                    return ((bool)(this[this.tablePatientVisits.OcularInspection_AmbulationColumn]));
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_AmbulationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OcularInspection_TADWheelChair {
                get {
                    return ((bool)(this[this.tablePatientVisits.OcularInspection_TADWheelChairColumn]));
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_TADWheelChairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_TADCruches {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_TADCruchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_TADCruches\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_TADCruchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_TADCane {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_TADCaneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_TADCane\' in table \'PatientVisits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_TADCaneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_TADWalker {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_TADWalkerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_TADWalker\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_TADWalkerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OcularInspection_Alert {
                get {
                    return ((bool)(this[this.tablePatientVisits.OcularInspection_AlertColumn]));
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_AlertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OcularInspection_Coherent {
                get {
                    return ((bool)(this[this.tablePatientVisits.OcularInspection_CoherentColumn]));
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_CoherentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OcularInspection_Cooperative {
                get {
                    return ((bool)(this[this.tablePatientVisits.OcularInspection_CooperativeColumn]));
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_CooperativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_BodyType {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_BodyTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_BodyType\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_BodyTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Atrophy {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_AtrophyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Atrophy\' in table \'PatientVisits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_AtrophyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Swelling {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_SwellingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Swelling\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_SwellingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Redness {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_RednessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Redness\' in table \'PatientVisits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_RednessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Ecchymosis {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_EcchymosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Ecchymosis\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_EcchymosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Deformity {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_DeformityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Deformity\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_DeformityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Wounds {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_WoundsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Wounds\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_WoundsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Scar {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_ScarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Scar\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_ScarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_PressureSore {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_PressureSoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_PressureSore\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_PressureSoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OcularInspection_GaitDeviation {
                get {
                    return ((bool)(this[this.tablePatientVisits.OcularInspection_GaitDeviationColumn]));
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_GaitDeviationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Incision {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_IncisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Incision\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_IncisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OcularInspection_ShortnessOfBreathing {
                get {
                    return ((bool)(this[this.tablePatientVisits.OcularInspection_ShortnessOfBreathingColumn]));
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_ShortnessOfBreathingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OcularInspection_Others {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.OcularInspection_OthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OcularInspection_Others\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.OcularInspection_OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Palpation_BodyTemperature {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Palpation_BodyTemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Palpation_BodyTemperature\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Palpation_BodyTemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Palpation_MuscleTone {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Palpation_MuscleToneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Palpation_MuscleTone\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Palpation_MuscleToneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Palpation_Edema {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Palpation_EdemaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Palpation_Edema\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Palpation_EdemaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Palpation_Tenderness {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Palpation_TendernessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Palpation_Tenderness\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Palpation_TendernessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Palpation_Location {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Palpation_LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Palpation_Location\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Palpation_LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Palpation_Deformity {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Palpation_DeformityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Palpation_Deformity\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Palpation_DeformityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Palpation_MuscleGuarding {
                get {
                    return ((bool)(this[this.tablePatientVisits.Palpation_MuscleGuardingColumn]));
                }
                set {
                    this[this.tablePatientVisits.Palpation_MuscleGuardingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Palpation_MuscleSpasm {
                get {
                    return ((bool)(this[this.tablePatientVisits.Palpation_MuscleSpasmColumn]));
                }
                set {
                    this[this.tablePatientVisits.Palpation_MuscleSpasmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Palpation_Subluxation {
                get {
                    return ((bool)(this[this.tablePatientVisits.Palpation_SubluxationColumn]));
                }
                set {
                    this[this.tablePatientVisits.Palpation_SubluxationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Palpation_Dislocation {
                get {
                    return ((bool)(this[this.tablePatientVisits.Palpation_DislocationColumn]));
                }
                set {
                    this[this.tablePatientVisits.Palpation_DislocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CognitiveAssmt_STQuestion {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CognitiveAssmt_STQuestionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CognitiveAssmt_STQuestion\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CognitiveAssmt_STQuestionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CognitiveAssmt_STResponse {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CognitiveAssmt_STResponseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CognitiveAssmt_STResponse\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CognitiveAssmt_STResponseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CognitiveAssmt_LTQuestion {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CognitiveAssmt_LTQuestionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CognitiveAssmt_LTQuestion\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CognitiveAssmt_LTQuestionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CognitiveAssmt_LTResponse {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CognitiveAssmt_LTResponseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CognitiveAssmt_LTResponse\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CognitiveAssmt_LTResponseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CognitiveAssmt_Findings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CognitiveAssmt_FindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CognitiveAssmt_Findings\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CognitiveAssmt_FindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CognitiveAssmt_Significance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CognitiveAssmt_SignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CognitiveAssmt_Significance\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CognitiveAssmt_SignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BalanceTolerance_SittingBalance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.BalanceTolerance_SittingBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceTolerance_SittingBalance\' in table \'PatientVisits\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.BalanceTolerance_SittingBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BalanceTolerance_SittingTolerance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.BalanceTolerance_SittingToleranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceTolerance_SittingTolerance\' in table \'PatientVisits\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.BalanceTolerance_SittingToleranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BalanceTolerance_StandingBalance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.BalanceTolerance_StandingBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceTolerance_StandingBalance\' in table \'PatientVisits\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.BalanceTolerance_StandingBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BalanceTolerance_StandingTolerance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.BalanceTolerance_StandingToleranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceTolerance_StandingTolerance\' in table \'PatientVisits" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.BalanceTolerance_StandingToleranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BalanceTolerance_Findings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.BalanceTolerance_FindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceTolerance_Findings\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.BalanceTolerance_FindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BalanceTolerance_Significance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.BalanceTolerance_SignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceTolerance_Significance\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.BalanceTolerance_SignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_LeftHand {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_LeftHandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_LeftHand\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_LeftHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_RightHand {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_RightHandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_RightHand\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_RightHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_LeftElbow {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_LeftElbowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_LeftElbow\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_LeftElbowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_RightElbow {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_RightElbowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_RightElbow\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_RightElbowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_LeftKnee {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_LeftKneeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_LeftKnee\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_LeftKneeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_RightKnee {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_RightKneeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_RightKnee\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_RightKneeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_LeftFoot {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_LeftFootColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_LeftFoot\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_LeftFootColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_RightFoot {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_RightFootColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_RightFoot\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_RightFootColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_Findings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_FindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_Findings\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_FindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeepTendonReflex_Significance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.DeepTendonReflex_SignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeepTendonReflex_Significance\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.DeepTendonReflex_SignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosturalAssmtFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosturalAssmtFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosturalAssmtFindings\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosturalAssmtFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosturalAssmtSignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosturalAssmtSignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosturalAssmtSignificance\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosturalAssmtSignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HandGripStrength_T1RightHand {
                get {
                    return ((decimal)(this[this.tablePatientVisits.HandGripStrength_T1RightHandColumn]));
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_T1RightHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HandGripStrength_T1LeftHand {
                get {
                    return ((decimal)(this[this.tablePatientVisits.HandGripStrength_T1LeftHandColumn]));
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_T1LeftHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HandGripStrength_T2RightHand {
                get {
                    return ((decimal)(this[this.tablePatientVisits.HandGripStrength_T2RightHandColumn]));
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_T2RightHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HandGripStrength_T2LeftHand {
                get {
                    return ((decimal)(this[this.tablePatientVisits.HandGripStrength_T2LeftHandColumn]));
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_T2LeftHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HandGripStrength_T3RightHand {
                get {
                    return ((decimal)(this[this.tablePatientVisits.HandGripStrength_T3RightHandColumn]));
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_T3RightHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HandGripStrength_T3LeftHand {
                get {
                    return ((decimal)(this[this.tablePatientVisits.HandGripStrength_T3LeftHandColumn]));
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_T3LeftHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HandGripStrength_AveRightHand {
                get {
                    return ((decimal)(this[this.tablePatientVisits.HandGripStrength_AveRightHandColumn]));
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_AveRightHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HandGripStrength_AveLeftHand {
                get {
                    return ((decimal)(this[this.tablePatientVisits.HandGripStrength_AveLeftHandColumn]));
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_AveLeftHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HandGripStrength_Findings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.HandGripStrength_FindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HandGripStrength_Findings\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_FindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HandGripStrength_Significance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.HandGripStrength_SignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HandGripStrength_Significance\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.HandGripStrength_SignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VolumetricMeasurement_Right {
                get {
                    return ((decimal)(this[this.tablePatientVisits.VolumetricMeasurement_RightColumn]));
                }
                set {
                    this[this.tablePatientVisits.VolumetricMeasurement_RightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VolumetricMeasurement_Left {
                get {
                    return ((decimal)(this[this.tablePatientVisits.VolumetricMeasurement_LeftColumn]));
                }
                set {
                    this[this.tablePatientVisits.VolumetricMeasurement_LeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VolumetricMeasurement_Difference {
                get {
                    return ((decimal)(this[this.tablePatientVisits.VolumetricMeasurement_DifferenceColumn]));
                }
                set {
                    this[this.tablePatientVisits.VolumetricMeasurement_DifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VolumetricMeasurement_Findings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.VolumetricMeasurement_FindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumetricMeasurement_Findings\' in table \'PatientVisits\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.VolumetricMeasurement_FindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VolumetricMeasurement_Significance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.VolumetricMeasurement_SignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumetricMeasurement_Significance\' in table \'PatientVisits" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.VolumetricMeasurement_SignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AnteriorView_HeadInMidline {
                get {
                    return ((bool)(this[this.tablePatientVisits.AnteriorView_HeadInMidlineColumn]));
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_HeadInMidlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_HeadInMidlineFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_HeadInMidlineFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_HeadInMidlineFindings\' in table \'PatientVisits" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_HeadInMidlineFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AnteriorView_ShouldersInLevel {
                get {
                    return ((bool)(this[this.tablePatientVisits.AnteriorView_ShouldersInLevelColumn]));
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_ShouldersInLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_ShouldersInLevelFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_ShouldersInLevelFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_ShouldersInLevelFindings\' in table \'PatientVis" +
                                "its\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_ShouldersInLevelFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AnteriorView_Protrusion {
                get {
                    return ((bool)(this[this.tablePatientVisits.AnteriorView_ProtrusionColumn]));
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_ProtrusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_ProtrusionFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_ProtrusionFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_ProtrusionFindings\' in table \'PatientVisits\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_ProtrusionFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AnteriorView_Lateralization {
                get {
                    return ((bool)(this[this.tablePatientVisits.AnteriorView_LateralizationColumn]));
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_LateralizationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_LateralizationFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_LateralizationFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_LateralizationFindings\' in table \'PatientVisit" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_LateralizationFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AnteriorView_Depression {
                get {
                    return ((bool)(this[this.tablePatientVisits.AnteriorView_DepressionColumn]));
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_DepressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_DepressionFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_DepressionFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_DepressionFindings\' in table \'PatientVisits\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_DepressionFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AnteriorView_WaistAngle {
                get {
                    return ((decimal)(this[this.tablePatientVisits.AnteriorView_WaistAngleColumn]));
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_WaistAngleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_ArmPosition {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_ArmPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_ArmPosition\' in table \'PatientVisits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_ArmPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AnteriorView_CarryingAngle {
                get {
                    return ((decimal)(this[this.tablePatientVisits.AnteriorView_CarryingAngleColumn]));
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_CarryingAngleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_ASISLevel {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_ASISLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_ASISLevel\' in table \'PatientVisits\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_ASISLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_PatellaeAlignment {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_PatellaeAlignmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_PatellaeAlignment\' in table \'PatientVisits\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_PatellaeAlignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_KneeAlignment {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_KneeAlignmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_KneeAlignment\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_KneeAlignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_MalleoliLevel {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_MalleoliLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_MalleoliLevel\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_MalleoliLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_ArchesOfFeet {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_ArchesOfFeetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_ArchesOfFeet\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_ArchesOfFeetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AnteriorView_FeetAngle {
                get {
                    return ((bool)(this[this.tablePatientVisits.AnteriorView_FeetAngleColumn]));
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_FeetAngleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnteriorView_FeetAngleFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.AnteriorView_FeetAngleFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnteriorView_FeetAngleFindings\' in table \'PatientVisits\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.AnteriorView_FeetAngleFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PosteriorView_HeadInMidline {
                get {
                    return ((bool)(this[this.tablePatientVisits.PosteriorView_HeadInMidlineColumn]));
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_HeadInMidlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_HeadInMidlineFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_HeadInMidlineFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_HeadInMidlineFindings\' in table \'PatientVisit" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_HeadInMidlineFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PosteriorView_ShouldersInLevel {
                get {
                    return ((bool)(this[this.tablePatientVisits.PosteriorView_ShouldersInLevelColumn]));
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_ShouldersInLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_ShouldersInLevelFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_ShouldersInLevelFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_ShouldersInLevelFindings\' in table \'PatientVi" +
                                "sits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_ShouldersInLevelFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PosteriorView_SpineScapularLevel {
                get {
                    return ((bool)(this[this.tablePatientVisits.PosteriorView_SpineScapularLevelColumn]));
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_SpineScapularLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_SpineScapularLevelFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_SpineScapularLevelFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_SpineScapularLevelFindings\' in table \'Patient" +
                                "Visits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_SpineScapularLevelFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PosteriorView_SpineInMidline {
                get {
                    return ((bool)(this[this.tablePatientVisits.PosteriorView_SpineInMidlineColumn]));
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_SpineInMidlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_SpineInMidlineFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_SpineInMidlineFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_SpineInMidlineFindings\' in table \'PatientVisi" +
                                "ts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_SpineInMidlineFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PosteriorView_WaistLevelAngle {
                get {
                    return ((decimal)(this[this.tablePatientVisits.PosteriorView_WaistLevelAngleColumn]));
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_WaistLevelAngleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_ArmPosition {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_ArmPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_ArmPosition\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_ArmPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_IliacCrestlevel {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_IliacCrestlevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_IliacCrestlevel\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_IliacCrestlevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_PSISLevel {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_PSISLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_PSISLevel\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_PSISLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_GlutealFoldsLevel {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_GlutealFoldsLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_GlutealFoldsLevel\' in table \'PatientVisits\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_GlutealFoldsLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_PoplitealFoassalevel {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_PoplitealFoassalevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_PoplitealFoassalevel\' in table \'PatientVisits" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_PoplitealFoassalevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PosteriorView_HeelsPosition {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PosteriorView_HeelsPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PosteriorView_HeelsPosition\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PosteriorView_HeelsPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LateralView_EarlobeShoulderAlignment {
                get {
                    return ((bool)(this[this.tablePatientVisits.LateralView_EarlobeShoulderAlignmentColumn]));
                }
                set {
                    this[this.tablePatientVisits.LateralView_EarlobeShoulderAlignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LateralView_EarlobeShoulderAlignmentFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.LateralView_EarlobeShoulderAlignmentFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralView_EarlobeShoulderAlignmentFindings\' in table \'Pat" +
                                "ientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.LateralView_EarlobeShoulderAlignmentFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LateralView_AcromioIliacAlignment {
                get {
                    return ((bool)(this[this.tablePatientVisits.LateralView_AcromioIliacAlignmentColumn]));
                }
                set {
                    this[this.tablePatientVisits.LateralView_AcromioIliacAlignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LateralView_AcromioIliacAlignmentFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.LateralView_AcromioIliacAlignmentFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralView_AcromioIliacAlignmentFindings\' in table \'Patien" +
                                "tVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.LateralView_AcromioIliacAlignmentFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LateralView_SpinalSegments {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.LateralView_SpinalSegmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralView_SpinalSegments\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.LateralView_SpinalSegmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LateralView_ShoulderAlignment {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.LateralView_ShoulderAlignmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralView_ShoulderAlignment\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.LateralView_ShoulderAlignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LateralView_PelvicAngle {
                get {
                    return ((decimal)(this[this.tablePatientVisits.LateralView_PelvicAngleColumn]));
                }
                set {
                    this[this.tablePatientVisits.LateralView_PelvicAngleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LateralView_KneeAlignment {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.LateralView_KneeAlignmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralView_KneeAlignment\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.LateralView_KneeAlignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LateralView_PlumblineAlignment {
                get {
                    return ((bool)(this[this.tablePatientVisits.LateralView_PlumblineAlignmentColumn]));
                }
                set {
                    this[this.tablePatientVisits.LateralView_PlumblineAlignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LateralView_PlumblineAlignmentFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.LateralView_PlumblineAlignmentFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralView_PlumblineAlignmentFindings\' in table \'PatientVi" +
                                "sits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.LateralView_PlumblineAlignmentFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LateralView_ArchesOfFeet {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.LateralView_ArchesOfFeetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateralView_ArchesOfFeet\' in table \'PatientVisits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.LateralView_ArchesOfFeetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaitAssessment_Asssessment {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.GaitAssessment_AsssessmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GaitAssessment_Asssessment\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_AsssessmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_RInitialLoading {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_RInitialLoadingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_RInitialLoadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_LInitialLoading {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_LInitialLoadingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_LInitialLoadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_RLoadingResponse {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_RLoadingResponseColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_RLoadingResponseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_LLoadingResponse {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_LLoadingResponseColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_LLoadingResponseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_RMidStance {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_RMidStanceColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_RMidStanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_LMidStance {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_LMidStanceColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_LMidStanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_RTerminalStance {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_RTerminalStanceColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_RTerminalStanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_LTerminalStance {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_LTerminalStanceColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_LTerminalStanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_RPreSwing {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_RPreSwingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_RPreSwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_LPreSwing {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_LPreSwingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_LPreSwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_RInitialSwing {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_RInitialSwingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_RInitialSwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_LInitialPreSwing {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_LInitialPreSwingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_LInitialPreSwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_RMidSwing {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_RMidSwingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_RMidSwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_LMidPreSwing {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_LMidPreSwingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_LMidPreSwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_RTerminalSwing {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_RTerminalSwingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_RTerminalSwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GaitAssessment_LTerminalSwing {
                get {
                    return ((bool)(this[this.tablePatientVisits.GaitAssessment_LTerminalSwingColumn]));
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_LTerminalSwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaitAssessment_Findings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.GaitAssessment_FindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GaitAssessment_Findings\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_FindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaitAssessment_Significance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.GaitAssessment_SignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GaitAssessment_Significance\' in table \'PatientVisits\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.GaitAssessment_SignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxWriting {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxWritingColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxWritingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxCleaningHouse {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxCleaningHouseColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxCleaningHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxCooking {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxCookingColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxCookingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxEating {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxEatingColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxEatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxTurningDoorKnob {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxTurningDoorKnobColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxTurningDoorKnobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxUsingKeys {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxUsingKeysColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxUsingKeysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxOpeningBottle {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxOpeningBottleColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxOpeningBottleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxBrushingTeeth {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxBrushingTeethColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxBrushingTeethColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxTyingShoeLace {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxTyingShoeLaceColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxTyingShoeLaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxWashingDishes {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxWashingDishesColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxWashingDishesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxSweepingFloor {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxSweepingFloorColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxSweepingFloorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FunctionalAnalysis_AdlsAxOthers {
                get {
                    return ((bool)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxOthersColumn]));
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxOthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Assessment_Diagnosis {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Assessment_DiagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Assessment_Diagnosis\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Assessment_DiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Assessment_PTImpression {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Assessment_PTImpressionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Assessment_PTImpression\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Assessment_PTImpressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Assessment_ProblemList {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Assessment_ProblemListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Assessment_ProblemList\' in table \'PatientVisits\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Assessment_ProblemListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Assessment_LongTermGoals {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Assessment_LongTermGoalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Assessment_LongTermGoals\' in table \'PatientVisits\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Assessment_LongTermGoalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Assessment_ShortTermGoals {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Assessment_ShortTermGoalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Assessment_ShortTermGoals\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Assessment_ShortTermGoalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Plan_PTManagement {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Plan_PTManagementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plan_PTManagement\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Plan_PTManagementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Plan_HomeInstruction {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Plan_HomeInstructionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plan_HomeInstruction\' in table \'PatientVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Plan_HomeInstructionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FunctionalAnalysis_AdlsAxOthersText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxOthersTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FunctionalAnalysis_AdlsAxOthersText\' in table \'PatientVisit" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxOthersTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CardioPulmonaryAssmt_BodyType {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CardioPulmonaryAssmt_BodyTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardioPulmonaryAssmt_BodyType\' in table \'PatientVisits\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CardioPulmonaryAssmt_BodyTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CardioPulmonaryAssmt_ChestShape {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CardioPulmonaryAssmt_ChestShapeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardioPulmonaryAssmt_ChestShape\' in table \'PatientVisits\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CardioPulmonaryAssmt_ChestShapeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CardioPulmonaryAssmt_ChestShapeOthers {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.CardioPulmonaryAssmt_ChestShapeOthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardioPulmonaryAssmt_ChestShapeOthers\' in table \'PatientVis" +
                                "its\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.CardioPulmonaryAssmt_ChestShapeOthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_SpmMucoid {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_SpmMucoidColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SpmMucoidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_SpmFrothy {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_SpmFrothyColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SpmFrothyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_SpmMucopurulent {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_SpmMucopurulentColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SpmMucopurulentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_SpmHemoptysis {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_SpmHemoptysisColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SpmHemoptysisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_SpmPurulent {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_SpmPurulentColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SpmPurulentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_SpmOthers {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_SpmOthersColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SpmOthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_SpmOthersText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_SpmOthersTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_SpmOthersText\' in table \'PatientVisits\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SpmOthersTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_MdShift {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_MdShiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_MdShift\' in table \'PatientVisits\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_MdShiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_MdShiftFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_MdShiftFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_MdShiftFindings\' in table \'PatientVisits\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_MdShiftFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_MdShiftSignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_MdShiftSignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_MdShiftSignificance\' in table \'PatientVisits" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_MdShiftSignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_Fremitus {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_FremitusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_Fremitus\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_FremitusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_FremitusFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_FremitusFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_FremitusFindings\' in table \'PatientVisits\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_FremitusFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_FremitusSignificance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_FremitusSignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_FremitusSignificance\' in table \'PatientVisit" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_FremitusSignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_ChstExpULE {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_ChstExpULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_ChstExpULE\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_ChstExpULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_ChstExpMLE {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_ChstExpMLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_ChstExpMLE\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_ChstExpMLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_ChstExpLLE {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_ChstExpLLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_ChstExpLLE\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_ChstExpLLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_ChstExpSig {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_ChstExpSigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_ChstExpSig\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_ChstExpSigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_Percussion {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_PercussionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_Percussion\' in table \'PatientVisits\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_PercussionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_PercussionOthers {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_PercussionOthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_PercussionOthers\' in table \'PatientVisits\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_PercussionOthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_SixMinWalk {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_SixMinWalkColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SixMinWalkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_SixMinWalkFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_SixMinWalkFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_SixMinWalkFindings\' in table \'PatientVisits\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_SixMinWalkFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_StairClimbing {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_StairClimbingColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_StairClimbingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_StairClimbingFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_StairClimbingFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_StairClimbingFindings\' in table \'PatientVisi" +
                                "ts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_StairClimbingFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_ShuttleTest {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_ShuttleTestColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_ShuttleTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_ShuttleTestFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_ShuttleTestFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_ShuttleTestFindings\' in table \'PatientVisits" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_ShuttleTestFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PulmonaryAssmt_OtherTest {
                get {
                    return ((bool)(this[this.tablePatientVisits.PulmonaryAssmt_OtherTestColumn]));
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_OtherTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PulmonaryAssmt_OtherTestFindings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.PulmonaryAssmt_OtherTestFindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PulmonaryAssmt_OtherTestFindings\' in table \'PatientVisits\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.PulmonaryAssmt_OtherTestFindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_MaxInsT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_MaxInsT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_MaxInsT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_MaxInsT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_MaxInsT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_MaxInsT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_MaxInsT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_MaxInsT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_MaxInsT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_MaxInsAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_MaxInsAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_MaxInsAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_MaxExpT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_MaxExpT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_MaxExpT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_MaxExpT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_MaxExpT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_MaxExpT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_MaxExpT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_MaxExpT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_MaxExpT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_MaxExpAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_MaxExpAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_MaxExpAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_DiffT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_DiffT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_DiffT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_DiffT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_DiffT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_DiffT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_DiffT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_DiffT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_DiffT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMAxilla_DiffAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMAxilla_DiffAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMAxilla_DiffAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_MaxInsT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_MaxInsT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_MaxInsT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_MaxInsT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_MaxInsT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_MaxInsT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_MaxInsT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_MaxInsT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_MaxInsT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_MaxInsAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_MaxInsAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_MaxInsAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_MaxExpT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_MaxExpT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_MaxExpT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_MaxExpT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_MaxExpT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_MaxExpT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_MaxExpT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_MaxExpT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_MaxExpT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_MaxExpAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_MaxExpAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_MaxExpAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_DiffT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_DiffT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_DiffT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_DiffT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_DiffT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_DiffT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_DiffT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_DiffT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_DiffT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMXiphoid_DiffAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMXiphoid_DiffAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMXiphoid_DiffAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_MaxInsT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_MaxInsT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_MaxInsT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_MaxInsT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_MaxInsT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_MaxInsT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_MaxInsT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_MaxInsT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_MaxInsT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_MaxInsAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_MaxInsAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_MaxInsAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_MaxExpT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_MaxExpT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_MaxExpT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_MaxExpT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_MaxExpT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_MaxExpT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_MaxExpT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_MaxExpT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_MaxExpT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_MaxExpAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_MaxExpAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_MaxExpAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_DiffT1 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_DiffT1Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_DiffT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_DiffT2 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_DiffT2Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_DiffT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_DiffT3 {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_DiffT3Column]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_DiffT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMLowerCostal_DiffAve {
                get {
                    return ((decimal)(this[this.tablePatientVisits.CMLowerCostal_DiffAveColumn]));
                }
                set {
                    this[this.tablePatientVisits.CMLowerCostal_DiffAveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Trachael {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_TrachaelColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_TrachaelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Bronchial {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_BronchialColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_BronchialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Bronchiovesicular {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_BronchiovesicularColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_BronchiovesicularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Vesicular {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_VesicularColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_VesicularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Crackles {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_CracklesColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_CracklesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_DiminishedBreathSounds {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_DiminishedBreathSoundsColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_DiminishedBreathSoundsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_HighPitchedBronchialBreathing {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_HighPitchedBronchialBreathingColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_HighPitchedBronchialBreathingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_LowPitchedBronchialBreathing {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_LowPitchedBronchialBreathingColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_LowPitchedBronchialBreathingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_PleuralRub {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_PleuralRubColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_PleuralRubColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Rhonchi {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_RhonchiColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_RhonchiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Stridor {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_StridorColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_StridorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Wheeze {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_WheezeColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_WheezeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Auscultation_Others {
                get {
                    return ((bool)(this[this.tablePatientVisits.Auscultation_OthersColumn]));
                }
                set {
                    this[this.tablePatientVisits.Auscultation_OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Auscultation_OthersText {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.Auscultation_OthersTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Auscultation_OthersText\' in table \'PatientVisits\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.Auscultation_OthersTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FigureOfEight_Right {
                get {
                    return ((decimal)(this[this.tablePatientVisits.FigureOfEight_RightColumn]));
                }
                set {
                    this[this.tablePatientVisits.FigureOfEight_RightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FigureOfEight_Left {
                get {
                    return ((decimal)(this[this.tablePatientVisits.FigureOfEight_LeftColumn]));
                }
                set {
                    this[this.tablePatientVisits.FigureOfEight_LeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FigureOfEight_Difference {
                get {
                    return ((decimal)(this[this.tablePatientVisits.FigureOfEight_DifferenceColumn]));
                }
                set {
                    this[this.tablePatientVisits.FigureOfEight_DifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FigureOfEight_Findings {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.FigureOfEight_FindingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FigureOfEight_Findings\' in table \'PatientVisits\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.FigureOfEight_FindingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FigureOfEight_Significance {
                get {
                    try {
                        return ((string)(this[this.tablePatientVisits.FigureOfEight_SignificanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FigureOfEight_Significance\' in table \'PatientVisits\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePatientVisits.FigureOfEight_SignificanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCivilStatusNull() {
                return this.IsNull(this.tablePatientVisits.CivilStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCivilStatusNull() {
                this[this.tablePatientVisits.CivilStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandedNessNull() {
                return this.IsNull(this.tablePatientVisits.HandedNessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandedNessNull() {
                this[this.tablePatientVisits.HandedNessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOccupationNull() {
                return this.IsNull(this.tablePatientVisits.OccupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOccupationNull() {
                this[this.tablePatientVisits.OccupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tablePatientVisits.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tablePatientVisits.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReligionNull() {
                return this.IsNull(this.tablePatientVisits.ReligionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReligionNull() {
                this[this.tablePatientVisits.ReligionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateOfConsultationNull() {
                return this.IsNull(this.tablePatientVisits.DateOfConsultationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateOfConsultationNull() {
                this[this.tablePatientVisits.DateOfConsultationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientTypeNull() {
                return this.IsNull(this.tablePatientVisits.PatientTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientTypeNull() {
                this[this.tablePatientVisits.PatientTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGeneralPhysicianNull() {
                return this.IsNull(this.tablePatientVisits.GeneralPhysicianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGeneralPhysicianNull() {
                this[this.tablePatientVisits.GeneralPhysicianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateOfReferralNull() {
                return this.IsNull(this.tablePatientVisits.DateOfReferralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateOfReferralNull() {
                this[this.tablePatientVisits.DateOfReferralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeurologistNull() {
                return this.IsNull(this.tablePatientVisits.NeurologistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeurologistNull() {
                this[this.tablePatientVisits.NeurologistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHPINull() {
                return this.IsNull(this.tablePatientVisits.HPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHPINull() {
                this[this.tablePatientVisits.HPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSexNull() {
                return this.IsNull(this.tablePatientVisits.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSexNull() {
                this[this.tablePatientVisits.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityTownNull() {
                return this.IsNull(this.tablePatientVisits.CityTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityTownNull() {
                this[this.tablePatientVisits.CityTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProvinceNull() {
                return this.IsNull(this.tablePatientVisits.ProvinceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProvinceNull() {
                this[this.tablePatientVisits.ProvinceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateOfAdmissionNull() {
                return this.IsNull(this.tablePatientVisits.DateOfAdmissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateOfAdmissionNull() {
                this[this.tablePatientVisits.DateOfAdmissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurgeonNull() {
                return this.IsNull(this.tablePatientVisits.SurgeonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurgeonNull() {
                this[this.tablePatientVisits.SurgeonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateOfSurgeryNull() {
                return this.IsNull(this.tablePatientVisits.DateOfSurgeryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateOfSurgeryNull() {
                this[this.tablePatientVisits.DateOfSurgeryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrthopedicNull() {
                return this.IsNull(this.tablePatientVisits.OrthopedicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrthopedicNull() {
                this[this.tablePatientVisits.OrthopedicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCardiologistNull() {
                return this.IsNull(this.tablePatientVisits.CardiologistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCardiologistNull() {
                this[this.tablePatientVisits.CardiologistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpthalmologoistNull() {
                return this.IsNull(this.tablePatientVisits.OpthalmologoistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpthalmologoistNull() {
                this[this.tablePatientVisits.OpthalmologoistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonologistNull() {
                return this.IsNull(this.tablePatientVisits.PulmonologistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonologistNull() {
                this[this.tablePatientVisits.PulmonologistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDoctorNull() {
                return this.IsNull(this.tablePatientVisits.OtherDoctorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDoctorNull() {
                this[this.tablePatientVisits.OtherDoctorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReferringDoctorNull() {
                return this.IsNull(this.tablePatientVisits.ReferringDoctorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReferringDoctorNull() {
                this[this.tablePatientVisits.ReferringDoctorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateOfInitialEvaluationNull() {
                return this.IsNull(this.tablePatientVisits.DateOfInitialEvaluationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateOfInitialEvaluationNull() {
                this[this.tablePatientVisits.DateOfInitialEvaluationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosisNull() {
                return this.IsNull(this.tablePatientVisits.DiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosisNull() {
                this[this.tablePatientVisits.DiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_SurgeryDateNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_SurgeryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_SurgeryDateNull() {
                this[this.tablePatientVisits.PMHx_SurgeryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_OthersNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_OthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_OthersNull() {
                this[this.tablePatientVisits.PMHx_OthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFMHx_OthersNull() {
                return this.IsNull(this.tablePatientVisits.FMHx_OthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFMHx_OthersNull() {
                this[this.tablePatientVisits.FMHx_OthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_FinancialStatusNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_FinancialStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_FinancialStatusNull() {
                this[this.tablePatientVisits.PSEHx_FinancialStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_PersonalityTypeNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_PersonalityTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_PersonalityTypeNull() {
                this[this.tablePatientVisits.PSEHx_PersonalityTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_LifeStyleNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_LifeStyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_LifeStyleNull() {
                this[this.tablePatientVisits.PSEHx_LifeStyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_EducationalAttainmentNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_EducationalAttainmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_EducationalAttainmentNull() {
                this[this.tablePatientVisits.PSEHx_EducationalAttainmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_LivesWithNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_LivesWithColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_LivesWithNull() {
                this[this.tablePatientVisits.PSEHx_LivesWithColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_RelativesNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_RelativesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_RelativesNull() {
                this[this.tablePatientVisits.PSEHx_RelativesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_OtherLivesWithNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_OtherLivesWithColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_OtherLivesWithNull() {
                this[this.tablePatientVisits.PSEHx_OtherLivesWithColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_HobbiesNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_HobbiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_HobbiesNull() {
                this[this.tablePatientVisits.PSEHx_HobbiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_SportsNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_SportsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_SportsNull() {
                this[this.tablePatientVisits.PSEHx_SportsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_OtherHobbiesNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_OtherHobbiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_OtherHobbiesNull() {
                this[this.tablePatientVisits.PSEHx_OtherHobbiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_TypeOfHouseNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_TypeOfHouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_TypeOfHouseNull() {
                this[this.tablePatientVisits.PSEHx_TypeOfHouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPSEHx_OtherTypeOfHouseNull() {
                return this.IsNull(this.tablePatientVisits.PSEHx_OtherTypeOfHouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPSEHx_OtherTypeOfHouseNull() {
                this[this.tablePatientVisits.PSEHx_OtherTypeOfHouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_TraumaTextNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_TraumaTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_TraumaTextNull() {
                this[this.tablePatientVisits.PMHx_TraumaTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_DMTextNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_DMTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_DMTextNull() {
                this[this.tablePatientVisits.PMHx_DMTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_SurgeryTextNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_SurgeryTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_SurgeryTextNull() {
                this[this.tablePatientVisits.PMHx_SurgeryTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_HospitalizationTextNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_HospitalizationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_HospitalizationTextNull() {
                this[this.tablePatientVisits.PMHx_HospitalizationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_HospitalizationDateNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_HospitalizationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_HospitalizationDateNull() {
                this[this.tablePatientVisits.PMHx_HospitalizationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_CardiovascularDiseaseTextNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_CardiovascularDiseaseTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_CardiovascularDiseaseTextNull() {
                this[this.tablePatientVisits.PMHx_CardiovascularDiseaseTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_PulmonaryConditionTextNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_PulmonaryConditionTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_PulmonaryConditionTextNull() {
                this[this.tablePatientVisits.PMHx_PulmonaryConditionTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_NeurologyConditionTextNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_NeurologyConditionTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_NeurologyConditionTextNull() {
                this[this.tablePatientVisits.PMHx_NeurologyConditionTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_ArthritisTextNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_ArthritisTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_ArthritisTextNull() {
                this[this.tablePatientVisits.PMHx_ArthritisTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_AsthmaDateNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_AsthmaDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_AsthmaDateNull() {
                this[this.tablePatientVisits.PMHx_AsthmaDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPMHx_AsthmaNull() {
                return this.IsNull(this.tablePatientVisits.PMHx_AsthmaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPMHx_AsthmaNull() {
                this[this.tablePatientVisits.PMHx_AsthmaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRomFindingsNull() {
                return this.IsNull(this.tablePatientVisits.RomFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRomFindingsNull() {
                this[this.tablePatientVisits.RomFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRomSignificanceNull() {
                return this.IsNull(this.tablePatientVisits.RomSignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRomSignificanceNull() {
                this[this.tablePatientVisits.RomSignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMmtFindingsNull() {
                return this.IsNull(this.tablePatientVisits.MmtFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMmtFindingsNull() {
                this[this.tablePatientVisits.MmtFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMmtSignificanceNull() {
                return this.IsNull(this.tablePatientVisits.MmtSignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMmtSignificanceNull() {
                this[this.tablePatientVisits.MmtSignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSensoryFindingsNull() {
                return this.IsNull(this.tablePatientVisits.SensoryFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSensoryFindingsNull() {
                this[this.tablePatientVisits.SensoryFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSensorySignificanceNull() {
                return this.IsNull(this.tablePatientVisits.SensorySignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSensorySignificanceNull() {
                this[this.tablePatientVisits.SensorySignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCranialNerveAssmtFindingsNull() {
                return this.IsNull(this.tablePatientVisits.CranialNerveAssmtFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCranialNerveAssmtFindingsNull() {
                this[this.tablePatientVisits.CranialNerveAssmtFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCranialNerveAssmtSignificanceNull() {
                return this.IsNull(this.tablePatientVisits.CranialNerveAssmtSignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCranialNerveAssmtSignificanceNull() {
                this[this.tablePatientVisits.CranialNerveAssmtSignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoordinationAssmtFindingsNull() {
                return this.IsNull(this.tablePatientVisits.CoordinationAssmtFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoordinationAssmtFindingsNull() {
                this[this.tablePatientVisits.CoordinationAssmtFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoordinationAssmtSignificanceNull() {
                return this.IsNull(this.tablePatientVisits.CoordinationAssmtSignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoordinationAssmtSignificanceNull() {
                this[this.tablePatientVisits.CoordinationAssmtSignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMbmFindingsNull() {
                return this.IsNull(this.tablePatientVisits.MbmFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMbmFindingsNull() {
                this[this.tablePatientVisits.MbmFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMbmSignificanceNull() {
                return this.IsNull(this.tablePatientVisits.MbmSignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMbmSignificanceNull() {
                this[this.tablePatientVisits.MbmSignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_ChiefComplaintNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_ChiefComplaintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_ChiefComplaintNull() {
                this[this.tablePatientVisits.SubjectiveObjective_ChiefComplaintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_PtTranslationNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_PtTranslationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_PtTranslationNull() {
                this[this.tablePatientVisits.SubjectiveObjective_PtTranslationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_BPBeforeNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_BPBeforeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_BPBeforeNull() {
                this[this.tablePatientVisits.SubjectiveObjective_BPBeforeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_BPAfterNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_BPAfterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_BPAfterNull() {
                this[this.tablePatientVisits.SubjectiveObjective_BPAfterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_RRBeforeNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_RRBeforeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_RRBeforeNull() {
                this[this.tablePatientVisits.SubjectiveObjective_RRBeforeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_RRAfterNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_RRAfterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_RRAfterNull() {
                this[this.tablePatientVisits.SubjectiveObjective_RRAfterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_PRBeforeNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_PRBeforeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_PRBeforeNull() {
                this[this.tablePatientVisits.SubjectiveObjective_PRBeforeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_PRAfterNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_PRAfterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_PRAfterNull() {
                this[this.tablePatientVisits.SubjectiveObjective_PRAfterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_TBeforeNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_TBeforeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_TBeforeNull() {
                this[this.tablePatientVisits.SubjectiveObjective_TBeforeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_TAfterNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_TAfterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_TAfterNull() {
                this[this.tablePatientVisits.SubjectiveObjective_TAfterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_FindingsNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_FindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_FindingsNull() {
                this[this.tablePatientVisits.SubjectiveObjective_FindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectiveObjective_SignificanceNull() {
                return this.IsNull(this.tablePatientVisits.SubjectiveObjective_SignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectiveObjective_SignificanceNull() {
                this[this.tablePatientVisits.SubjectiveObjective_SignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_TADCruchesNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_TADCruchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_TADCruchesNull() {
                this[this.tablePatientVisits.OcularInspection_TADCruchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_TADCaneNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_TADCaneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_TADCaneNull() {
                this[this.tablePatientVisits.OcularInspection_TADCaneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_TADWalkerNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_TADWalkerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_TADWalkerNull() {
                this[this.tablePatientVisits.OcularInspection_TADWalkerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_BodyTypeNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_BodyTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_BodyTypeNull() {
                this[this.tablePatientVisits.OcularInspection_BodyTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_AtrophyNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_AtrophyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_AtrophyNull() {
                this[this.tablePatientVisits.OcularInspection_AtrophyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_SwellingNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_SwellingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_SwellingNull() {
                this[this.tablePatientVisits.OcularInspection_SwellingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_RednessNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_RednessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_RednessNull() {
                this[this.tablePatientVisits.OcularInspection_RednessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_EcchymosisNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_EcchymosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_EcchymosisNull() {
                this[this.tablePatientVisits.OcularInspection_EcchymosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_DeformityNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_DeformityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_DeformityNull() {
                this[this.tablePatientVisits.OcularInspection_DeformityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_WoundsNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_WoundsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_WoundsNull() {
                this[this.tablePatientVisits.OcularInspection_WoundsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_ScarNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_ScarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_ScarNull() {
                this[this.tablePatientVisits.OcularInspection_ScarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_PressureSoreNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_PressureSoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_PressureSoreNull() {
                this[this.tablePatientVisits.OcularInspection_PressureSoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_IncisionNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_IncisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_IncisionNull() {
                this[this.tablePatientVisits.OcularInspection_IncisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOcularInspection_OthersNull() {
                return this.IsNull(this.tablePatientVisits.OcularInspection_OthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOcularInspection_OthersNull() {
                this[this.tablePatientVisits.OcularInspection_OthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPalpation_BodyTemperatureNull() {
                return this.IsNull(this.tablePatientVisits.Palpation_BodyTemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPalpation_BodyTemperatureNull() {
                this[this.tablePatientVisits.Palpation_BodyTemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPalpation_MuscleToneNull() {
                return this.IsNull(this.tablePatientVisits.Palpation_MuscleToneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPalpation_MuscleToneNull() {
                this[this.tablePatientVisits.Palpation_MuscleToneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPalpation_EdemaNull() {
                return this.IsNull(this.tablePatientVisits.Palpation_EdemaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPalpation_EdemaNull() {
                this[this.tablePatientVisits.Palpation_EdemaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPalpation_TendernessNull() {
                return this.IsNull(this.tablePatientVisits.Palpation_TendernessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPalpation_TendernessNull() {
                this[this.tablePatientVisits.Palpation_TendernessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPalpation_LocationNull() {
                return this.IsNull(this.tablePatientVisits.Palpation_LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPalpation_LocationNull() {
                this[this.tablePatientVisits.Palpation_LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPalpation_DeformityNull() {
                return this.IsNull(this.tablePatientVisits.Palpation_DeformityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPalpation_DeformityNull() {
                this[this.tablePatientVisits.Palpation_DeformityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCognitiveAssmt_STQuestionNull() {
                return this.IsNull(this.tablePatientVisits.CognitiveAssmt_STQuestionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCognitiveAssmt_STQuestionNull() {
                this[this.tablePatientVisits.CognitiveAssmt_STQuestionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCognitiveAssmt_STResponseNull() {
                return this.IsNull(this.tablePatientVisits.CognitiveAssmt_STResponseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCognitiveAssmt_STResponseNull() {
                this[this.tablePatientVisits.CognitiveAssmt_STResponseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCognitiveAssmt_LTQuestionNull() {
                return this.IsNull(this.tablePatientVisits.CognitiveAssmt_LTQuestionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCognitiveAssmt_LTQuestionNull() {
                this[this.tablePatientVisits.CognitiveAssmt_LTQuestionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCognitiveAssmt_LTResponseNull() {
                return this.IsNull(this.tablePatientVisits.CognitiveAssmt_LTResponseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCognitiveAssmt_LTResponseNull() {
                this[this.tablePatientVisits.CognitiveAssmt_LTResponseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCognitiveAssmt_FindingsNull() {
                return this.IsNull(this.tablePatientVisits.CognitiveAssmt_FindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCognitiveAssmt_FindingsNull() {
                this[this.tablePatientVisits.CognitiveAssmt_FindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCognitiveAssmt_SignificanceNull() {
                return this.IsNull(this.tablePatientVisits.CognitiveAssmt_SignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCognitiveAssmt_SignificanceNull() {
                this[this.tablePatientVisits.CognitiveAssmt_SignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceTolerance_SittingBalanceNull() {
                return this.IsNull(this.tablePatientVisits.BalanceTolerance_SittingBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceTolerance_SittingBalanceNull() {
                this[this.tablePatientVisits.BalanceTolerance_SittingBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceTolerance_SittingToleranceNull() {
                return this.IsNull(this.tablePatientVisits.BalanceTolerance_SittingToleranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceTolerance_SittingToleranceNull() {
                this[this.tablePatientVisits.BalanceTolerance_SittingToleranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceTolerance_StandingBalanceNull() {
                return this.IsNull(this.tablePatientVisits.BalanceTolerance_StandingBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceTolerance_StandingBalanceNull() {
                this[this.tablePatientVisits.BalanceTolerance_StandingBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceTolerance_StandingToleranceNull() {
                return this.IsNull(this.tablePatientVisits.BalanceTolerance_StandingToleranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceTolerance_StandingToleranceNull() {
                this[this.tablePatientVisits.BalanceTolerance_StandingToleranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceTolerance_FindingsNull() {
                return this.IsNull(this.tablePatientVisits.BalanceTolerance_FindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceTolerance_FindingsNull() {
                this[this.tablePatientVisits.BalanceTolerance_FindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceTolerance_SignificanceNull() {
                return this.IsNull(this.tablePatientVisits.BalanceTolerance_SignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceTolerance_SignificanceNull() {
                this[this.tablePatientVisits.BalanceTolerance_SignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_LeftHandNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_LeftHandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_LeftHandNull() {
                this[this.tablePatientVisits.DeepTendonReflex_LeftHandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_RightHandNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_RightHandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_RightHandNull() {
                this[this.tablePatientVisits.DeepTendonReflex_RightHandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_LeftElbowNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_LeftElbowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_LeftElbowNull() {
                this[this.tablePatientVisits.DeepTendonReflex_LeftElbowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_RightElbowNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_RightElbowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_RightElbowNull() {
                this[this.tablePatientVisits.DeepTendonReflex_RightElbowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_LeftKneeNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_LeftKneeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_LeftKneeNull() {
                this[this.tablePatientVisits.DeepTendonReflex_LeftKneeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_RightKneeNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_RightKneeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_RightKneeNull() {
                this[this.tablePatientVisits.DeepTendonReflex_RightKneeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_LeftFootNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_LeftFootColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_LeftFootNull() {
                this[this.tablePatientVisits.DeepTendonReflex_LeftFootColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_RightFootNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_RightFootColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_RightFootNull() {
                this[this.tablePatientVisits.DeepTendonReflex_RightFootColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_FindingsNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_FindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_FindingsNull() {
                this[this.tablePatientVisits.DeepTendonReflex_FindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeepTendonReflex_SignificanceNull() {
                return this.IsNull(this.tablePatientVisits.DeepTendonReflex_SignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeepTendonReflex_SignificanceNull() {
                this[this.tablePatientVisits.DeepTendonReflex_SignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosturalAssmtFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PosturalAssmtFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosturalAssmtFindingsNull() {
                this[this.tablePatientVisits.PosturalAssmtFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosturalAssmtSignificanceNull() {
                return this.IsNull(this.tablePatientVisits.PosturalAssmtSignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosturalAssmtSignificanceNull() {
                this[this.tablePatientVisits.PosturalAssmtSignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandGripStrength_FindingsNull() {
                return this.IsNull(this.tablePatientVisits.HandGripStrength_FindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandGripStrength_FindingsNull() {
                this[this.tablePatientVisits.HandGripStrength_FindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandGripStrength_SignificanceNull() {
                return this.IsNull(this.tablePatientVisits.HandGripStrength_SignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandGripStrength_SignificanceNull() {
                this[this.tablePatientVisits.HandGripStrength_SignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumetricMeasurement_FindingsNull() {
                return this.IsNull(this.tablePatientVisits.VolumetricMeasurement_FindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumetricMeasurement_FindingsNull() {
                this[this.tablePatientVisits.VolumetricMeasurement_FindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumetricMeasurement_SignificanceNull() {
                return this.IsNull(this.tablePatientVisits.VolumetricMeasurement_SignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumetricMeasurement_SignificanceNull() {
                this[this.tablePatientVisits.VolumetricMeasurement_SignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_HeadInMidlineFindingsNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_HeadInMidlineFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_HeadInMidlineFindingsNull() {
                this[this.tablePatientVisits.AnteriorView_HeadInMidlineFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_ShouldersInLevelFindingsNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_ShouldersInLevelFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_ShouldersInLevelFindingsNull() {
                this[this.tablePatientVisits.AnteriorView_ShouldersInLevelFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_ProtrusionFindingsNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_ProtrusionFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_ProtrusionFindingsNull() {
                this[this.tablePatientVisits.AnteriorView_ProtrusionFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_LateralizationFindingsNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_LateralizationFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_LateralizationFindingsNull() {
                this[this.tablePatientVisits.AnteriorView_LateralizationFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_DepressionFindingsNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_DepressionFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_DepressionFindingsNull() {
                this[this.tablePatientVisits.AnteriorView_DepressionFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_ArmPositionNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_ArmPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_ArmPositionNull() {
                this[this.tablePatientVisits.AnteriorView_ArmPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_ASISLevelNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_ASISLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_ASISLevelNull() {
                this[this.tablePatientVisits.AnteriorView_ASISLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_PatellaeAlignmentNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_PatellaeAlignmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_PatellaeAlignmentNull() {
                this[this.tablePatientVisits.AnteriorView_PatellaeAlignmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_KneeAlignmentNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_KneeAlignmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_KneeAlignmentNull() {
                this[this.tablePatientVisits.AnteriorView_KneeAlignmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_MalleoliLevelNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_MalleoliLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_MalleoliLevelNull() {
                this[this.tablePatientVisits.AnteriorView_MalleoliLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_ArchesOfFeetNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_ArchesOfFeetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_ArchesOfFeetNull() {
                this[this.tablePatientVisits.AnteriorView_ArchesOfFeetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnteriorView_FeetAngleFindingsNull() {
                return this.IsNull(this.tablePatientVisits.AnteriorView_FeetAngleFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnteriorView_FeetAngleFindingsNull() {
                this[this.tablePatientVisits.AnteriorView_FeetAngleFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_HeadInMidlineFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_HeadInMidlineFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_HeadInMidlineFindingsNull() {
                this[this.tablePatientVisits.PosteriorView_HeadInMidlineFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_ShouldersInLevelFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_ShouldersInLevelFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_ShouldersInLevelFindingsNull() {
                this[this.tablePatientVisits.PosteriorView_ShouldersInLevelFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_SpineScapularLevelFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_SpineScapularLevelFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_SpineScapularLevelFindingsNull() {
                this[this.tablePatientVisits.PosteriorView_SpineScapularLevelFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_SpineInMidlineFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_SpineInMidlineFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_SpineInMidlineFindingsNull() {
                this[this.tablePatientVisits.PosteriorView_SpineInMidlineFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_ArmPositionNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_ArmPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_ArmPositionNull() {
                this[this.tablePatientVisits.PosteriorView_ArmPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_IliacCrestlevelNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_IliacCrestlevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_IliacCrestlevelNull() {
                this[this.tablePatientVisits.PosteriorView_IliacCrestlevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_PSISLevelNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_PSISLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_PSISLevelNull() {
                this[this.tablePatientVisits.PosteriorView_PSISLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_GlutealFoldsLevelNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_GlutealFoldsLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_GlutealFoldsLevelNull() {
                this[this.tablePatientVisits.PosteriorView_GlutealFoldsLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_PoplitealFoassalevelNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_PoplitealFoassalevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_PoplitealFoassalevelNull() {
                this[this.tablePatientVisits.PosteriorView_PoplitealFoassalevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPosteriorView_HeelsPositionNull() {
                return this.IsNull(this.tablePatientVisits.PosteriorView_HeelsPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPosteriorView_HeelsPositionNull() {
                this[this.tablePatientVisits.PosteriorView_HeelsPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateralView_EarlobeShoulderAlignmentFindingsNull() {
                return this.IsNull(this.tablePatientVisits.LateralView_EarlobeShoulderAlignmentFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateralView_EarlobeShoulderAlignmentFindingsNull() {
                this[this.tablePatientVisits.LateralView_EarlobeShoulderAlignmentFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateralView_AcromioIliacAlignmentFindingsNull() {
                return this.IsNull(this.tablePatientVisits.LateralView_AcromioIliacAlignmentFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateralView_AcromioIliacAlignmentFindingsNull() {
                this[this.tablePatientVisits.LateralView_AcromioIliacAlignmentFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateralView_SpinalSegmentsNull() {
                return this.IsNull(this.tablePatientVisits.LateralView_SpinalSegmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateralView_SpinalSegmentsNull() {
                this[this.tablePatientVisits.LateralView_SpinalSegmentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateralView_ShoulderAlignmentNull() {
                return this.IsNull(this.tablePatientVisits.LateralView_ShoulderAlignmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateralView_ShoulderAlignmentNull() {
                this[this.tablePatientVisits.LateralView_ShoulderAlignmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateralView_KneeAlignmentNull() {
                return this.IsNull(this.tablePatientVisits.LateralView_KneeAlignmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateralView_KneeAlignmentNull() {
                this[this.tablePatientVisits.LateralView_KneeAlignmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateralView_PlumblineAlignmentFindingsNull() {
                return this.IsNull(this.tablePatientVisits.LateralView_PlumblineAlignmentFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateralView_PlumblineAlignmentFindingsNull() {
                this[this.tablePatientVisits.LateralView_PlumblineAlignmentFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateralView_ArchesOfFeetNull() {
                return this.IsNull(this.tablePatientVisits.LateralView_ArchesOfFeetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateralView_ArchesOfFeetNull() {
                this[this.tablePatientVisits.LateralView_ArchesOfFeetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGaitAssessment_AsssessmentNull() {
                return this.IsNull(this.tablePatientVisits.GaitAssessment_AsssessmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGaitAssessment_AsssessmentNull() {
                this[this.tablePatientVisits.GaitAssessment_AsssessmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGaitAssessment_FindingsNull() {
                return this.IsNull(this.tablePatientVisits.GaitAssessment_FindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGaitAssessment_FindingsNull() {
                this[this.tablePatientVisits.GaitAssessment_FindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGaitAssessment_SignificanceNull() {
                return this.IsNull(this.tablePatientVisits.GaitAssessment_SignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGaitAssessment_SignificanceNull() {
                this[this.tablePatientVisits.GaitAssessment_SignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssessment_DiagnosisNull() {
                return this.IsNull(this.tablePatientVisits.Assessment_DiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssessment_DiagnosisNull() {
                this[this.tablePatientVisits.Assessment_DiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssessment_PTImpressionNull() {
                return this.IsNull(this.tablePatientVisits.Assessment_PTImpressionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssessment_PTImpressionNull() {
                this[this.tablePatientVisits.Assessment_PTImpressionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssessment_ProblemListNull() {
                return this.IsNull(this.tablePatientVisits.Assessment_ProblemListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssessment_ProblemListNull() {
                this[this.tablePatientVisits.Assessment_ProblemListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssessment_LongTermGoalsNull() {
                return this.IsNull(this.tablePatientVisits.Assessment_LongTermGoalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssessment_LongTermGoalsNull() {
                this[this.tablePatientVisits.Assessment_LongTermGoalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssessment_ShortTermGoalsNull() {
                return this.IsNull(this.tablePatientVisits.Assessment_ShortTermGoalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssessment_ShortTermGoalsNull() {
                this[this.tablePatientVisits.Assessment_ShortTermGoalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlan_PTManagementNull() {
                return this.IsNull(this.tablePatientVisits.Plan_PTManagementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlan_PTManagementNull() {
                this[this.tablePatientVisits.Plan_PTManagementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlan_HomeInstructionNull() {
                return this.IsNull(this.tablePatientVisits.Plan_HomeInstructionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlan_HomeInstructionNull() {
                this[this.tablePatientVisits.Plan_HomeInstructionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFunctionalAnalysis_AdlsAxOthersTextNull() {
                return this.IsNull(this.tablePatientVisits.FunctionalAnalysis_AdlsAxOthersTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFunctionalAnalysis_AdlsAxOthersTextNull() {
                this[this.tablePatientVisits.FunctionalAnalysis_AdlsAxOthersTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCardioPulmonaryAssmt_BodyTypeNull() {
                return this.IsNull(this.tablePatientVisits.CardioPulmonaryAssmt_BodyTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCardioPulmonaryAssmt_BodyTypeNull() {
                this[this.tablePatientVisits.CardioPulmonaryAssmt_BodyTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCardioPulmonaryAssmt_ChestShapeNull() {
                return this.IsNull(this.tablePatientVisits.CardioPulmonaryAssmt_ChestShapeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCardioPulmonaryAssmt_ChestShapeNull() {
                this[this.tablePatientVisits.CardioPulmonaryAssmt_ChestShapeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCardioPulmonaryAssmt_ChestShapeOthersNull() {
                return this.IsNull(this.tablePatientVisits.CardioPulmonaryAssmt_ChestShapeOthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCardioPulmonaryAssmt_ChestShapeOthersNull() {
                this[this.tablePatientVisits.CardioPulmonaryAssmt_ChestShapeOthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_SpmOthersTextNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_SpmOthersTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_SpmOthersTextNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_SpmOthersTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_MdShiftNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_MdShiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_MdShiftNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_MdShiftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_MdShiftFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_MdShiftFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_MdShiftFindingsNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_MdShiftFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_MdShiftSignificanceNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_MdShiftSignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_MdShiftSignificanceNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_MdShiftSignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_FremitusNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_FremitusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_FremitusNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_FremitusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_FremitusFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_FremitusFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_FremitusFindingsNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_FremitusFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_FremitusSignificanceNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_FremitusSignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_FremitusSignificanceNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_FremitusSignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_ChstExpULENull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_ChstExpULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_ChstExpULENull() {
                this[this.tablePatientVisits.PulmonaryAssmt_ChstExpULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_ChstExpMLENull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_ChstExpMLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_ChstExpMLENull() {
                this[this.tablePatientVisits.PulmonaryAssmt_ChstExpMLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_ChstExpLLENull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_ChstExpLLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_ChstExpLLENull() {
                this[this.tablePatientVisits.PulmonaryAssmt_ChstExpLLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_ChstExpSigNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_ChstExpSigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_ChstExpSigNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_ChstExpSigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_PercussionNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_PercussionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_PercussionNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_PercussionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_PercussionOthersNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_PercussionOthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_PercussionOthersNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_PercussionOthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_SixMinWalkFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_SixMinWalkFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_SixMinWalkFindingsNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_SixMinWalkFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_StairClimbingFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_StairClimbingFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_StairClimbingFindingsNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_StairClimbingFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_ShuttleTestFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_ShuttleTestFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_ShuttleTestFindingsNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_ShuttleTestFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPulmonaryAssmt_OtherTestFindingsNull() {
                return this.IsNull(this.tablePatientVisits.PulmonaryAssmt_OtherTestFindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPulmonaryAssmt_OtherTestFindingsNull() {
                this[this.tablePatientVisits.PulmonaryAssmt_OtherTestFindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAuscultation_OthersTextNull() {
                return this.IsNull(this.tablePatientVisits.Auscultation_OthersTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAuscultation_OthersTextNull() {
                this[this.tablePatientVisits.Auscultation_OthersTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFigureOfEight_FindingsNull() {
                return this.IsNull(this.tablePatientVisits.FigureOfEight_FindingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFigureOfEight_FindingsNull() {
                this[this.tablePatientVisits.FigureOfEight_FindingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFigureOfEight_SignificanceNull() {
                return this.IsNull(this.tablePatientVisits.FigureOfEight_SignificanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFigureOfEight_SignificanceNull() {
                this[this.tablePatientVisits.FigureOfEight_SignificanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AncillaryProceduresRow[] GetAncillaryProceduresRows() {
                if ((this.Table.ChildRelations["FK_dbo.AncillaryProcedures_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new AncillaryProceduresRow[0];
                }
                else {
                    return ((AncillaryProceduresRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.AncillaryProcedures_dbo.PatientVisits_PatientVisitId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrugHistoriesRow[] GetDrugHistoriesRows() {
                if ((this.Table.ChildRelations["FK_dbo.DrugHistories_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new DrugHistoriesRow[0];
                }
                else {
                    return ((DrugHistoriesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.DrugHistories_dbo.PatientVisits_PatientVisitId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROMsRow[] GetROMsRows() {
                if ((this.Table.ChildRelations["FK_dbo.ROMs_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new ROMsRow[0];
                }
                else {
                    return ((ROMsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.ROMs_dbo.PatientVisits_PatientVisitId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROM2Row[] GetROM2Rows() {
                if ((this.Table.ChildRelations["FK_dbo.ROM2_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new ROM2Row[0];
                }
                else {
                    return ((ROM2Row[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.ROM2_dbo.PatientVisits_PatientVisitId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MMTsRow[] GetMMTsRows() {
                if ((this.Table.ChildRelations["FK_dbo.MMTs_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new MMTsRow[0];
                }
                else {
                    return ((MMTsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.MMTs_dbo.PatientVisits_PatientVisitId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SensoryAxesRow[] GetSensoryAxesRows() {
                if ((this.Table.ChildRelations["FK_dbo.SensoryAxes_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new SensoryAxesRow[0];
                }
                else {
                    return ((SensoryAxesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.SensoryAxes_dbo.PatientVisits_PatientVisitId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CranialNerveAssmtsRow[] GetCranialNerveAssmtsRows() {
                if ((this.Table.ChildRelations["FK_dbo.CranialNerveAssmts_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new CranialNerveAssmtsRow[0];
                }
                else {
                    return ((CranialNerveAssmtsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.CranialNerveAssmts_dbo.PatientVisits_PatientVisitId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CoordinationAssmtsRow[] GetCoordinationAssmtsRows() {
                if ((this.Table.ChildRelations["FK_dbo.CoordinationAssmts_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new CoordinationAssmtsRow[0];
                }
                else {
                    return ((CoordinationAssmtsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.CoordinationAssmts_dbo.PatientVisits_PatientVisitId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBMsRow[] GetMBMsRows() {
                if ((this.Table.ChildRelations["FK_dbo.MBMs_dbo.PatientVisits_PatientVisitId"] == null)) {
                    return new MBMsRow[0];
                }
                else {
                    return ((MBMsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.MBMs_dbo.PatientVisits_PatientVisitId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AncillaryProceduresRow : global::System.Data.DataRow {
            
            private AncillaryProceduresDataTable tableAncillaryProcedures;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AncillaryProceduresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAncillaryProcedures = ((AncillaryProceduresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableAncillaryProcedures.RowIdColumn]));
                }
                set {
                    this[this.tableAncillaryProcedures.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcedureName {
                get {
                    try {
                        return ((string)(this[this.tableAncillaryProcedures.ProcedureNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcedureName\' in table \'AncillaryProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAncillaryProcedures.ProcedureNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ProcedureDate {
                get {
                    return ((global::System.DateTime)(this[this.tableAncillaryProcedures.ProcedureDateColumn]));
                }
                set {
                    this[this.tableAncillaryProcedures.ProcedureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableAncillaryProcedures.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'AncillaryProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAncillaryProcedures.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableAncillaryProcedures.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableAncillaryProcedures.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.AncillaryProcedures_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.AncillaryProcedures_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcedureNameNull() {
                return this.IsNull(this.tableAncillaryProcedures.ProcedureNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcedureNameNull() {
                this[this.tableAncillaryProcedures.ProcedureNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull() {
                return this.IsNull(this.tableAncillaryProcedures.ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull() {
                this[this.tableAncillaryProcedures.ResultColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DrugHistoriesRow : global::System.Data.DataRow {
            
            private DrugHistoriesDataTable tableDrugHistories;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DrugHistoriesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDrugHistories = ((DrugHistoriesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableDrugHistories.RowIdColumn]));
                }
                set {
                    this[this.tableDrugHistories.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugName {
                get {
                    try {
                        return ((string)(this[this.tableDrugHistories.DrugNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugName\' in table \'DrugHistories\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDrugHistories.DrugNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DrugDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDrugHistories.DrugDateColumn]));
                }
                set {
                    this[this.tableDrugHistories.DrugDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableDrugHistories.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'DrugHistories\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDrugHistories.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableDrugHistories.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableDrugHistories.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.DrugHistories_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.DrugHistories_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugNameNull() {
                return this.IsNull(this.tableDrugHistories.DrugNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugNameNull() {
                this[this.tableDrugHistories.DrugNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull() {
                return this.IsNull(this.tableDrugHistories.ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull() {
                this[this.tableDrugHistories.ResultColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ROMsRow : global::System.Data.DataRow {
            
            private ROMsDataTable tableROMs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ROMsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableROMs = ((ROMsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableROMs.RowIdColumn]));
                }
                set {
                    this[this.tableROMs.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Motion {
                get {
                    try {
                        return ((string)(this[this.tableROMs.MotionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Motion\' in table \'ROMs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableROMs.MotionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Arom {
                get {
                    return ((decimal)(this[this.tableROMs.AromColumn]));
                }
                set {
                    this[this.tableROMs.AromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Prom {
                get {
                    return ((decimal)(this[this.tableROMs.PromColumn]));
                }
                set {
                    this[this.tableROMs.PromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NormalValue {
                get {
                    return ((decimal)(this[this.tableROMs.NormalValueColumn]));
                }
                set {
                    this[this.tableROMs.NormalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Difference {
                get {
                    return ((decimal)(this[this.tableROMs.DifferenceColumn]));
                }
                set {
                    this[this.tableROMs.DifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EndFeel {
                get {
                    try {
                        return ((string)(this[this.tableROMs.EndFeelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndFeel\' in table \'ROMs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableROMs.EndFeelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableROMs.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableROMs.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.ROMs_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.ROMs_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotionNull() {
                return this.IsNull(this.tableROMs.MotionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotionNull() {
                this[this.tableROMs.MotionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEndFeelNull() {
                return this.IsNull(this.tableROMs.EndFeelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEndFeelNull() {
                this[this.tableROMs.EndFeelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ROM2Row : global::System.Data.DataRow {
            
            private ROM2DataTable tableROM2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ROM2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableROM2 = ((ROM2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableROM2.RowIdColumn]));
                }
                set {
                    this[this.tableROM2.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Motion {
                get {
                    try {
                        return ((string)(this[this.tableROM2.MotionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Motion\' in table \'ROM2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableROM2.MotionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AromR {
                get {
                    return ((decimal)(this[this.tableROM2.AromRColumn]));
                }
                set {
                    this[this.tableROM2.AromRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AromL {
                get {
                    return ((decimal)(this[this.tableROM2.AromLColumn]));
                }
                set {
                    this[this.tableROM2.AromLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PromR {
                get {
                    return ((decimal)(this[this.tableROM2.PromRColumn]));
                }
                set {
                    this[this.tableROM2.PromRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PromL {
                get {
                    return ((decimal)(this[this.tableROM2.PromLColumn]));
                }
                set {
                    this[this.tableROM2.PromLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NormalValue {
                get {
                    return ((decimal)(this[this.tableROM2.NormalValueColumn]));
                }
                set {
                    this[this.tableROM2.NormalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DifferenceR {
                get {
                    return ((decimal)(this[this.tableROM2.DifferenceRColumn]));
                }
                set {
                    this[this.tableROM2.DifferenceRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DifferenceL {
                get {
                    return ((decimal)(this[this.tableROM2.DifferenceLColumn]));
                }
                set {
                    this[this.tableROM2.DifferenceLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EndFeel {
                get {
                    try {
                        return ((string)(this[this.tableROM2.EndFeelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndFeel\' in table \'ROM2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableROM2.EndFeelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableROM2.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableROM2.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.ROM2_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.ROM2_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotionNull() {
                return this.IsNull(this.tableROM2.MotionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotionNull() {
                this[this.tableROM2.MotionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEndFeelNull() {
                return this.IsNull(this.tableROM2.EndFeelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEndFeelNull() {
                this[this.tableROM2.EndFeelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MMTsRow : global::System.Data.DataRow {
            
            private MMTsDataTable tableMMTs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MMTsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMMTs = ((MMTsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableMMTs.RowIdColumn]));
                }
                set {
                    this[this.tableMMTs.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Motion {
                get {
                    try {
                        return ((string)(this[this.tableMMTs.MotionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Motion\' in table \'MMTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMMTs.MotionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GradeR {
                get {
                    return ((decimal)(this[this.tableMMTs.GradeRColumn]));
                }
                set {
                    this[this.tableMMTs.GradeRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GraderL {
                get {
                    return ((decimal)(this[this.tableMMTs.GraderLColumn]));
                }
                set {
                    this[this.tableMMTs.GraderLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableMMTs.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableMMTs.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.MMTs_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.MMTs_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotionNull() {
                return this.IsNull(this.tableMMTs.MotionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotionNull() {
                this[this.tableMMTs.MotionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SensoryAxesRow : global::System.Data.DataRow {
            
            private SensoryAxesDataTable tableSensoryAxes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SensoryAxesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSensoryAxes = ((SensoryAxesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableSensoryAxes.RowIdColumn]));
                }
                set {
                    this[this.tableSensoryAxes.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaterialUsed {
                get {
                    try {
                        return ((string)(this[this.tableSensoryAxes.MaterialUsedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialUsed\' in table \'SensoryAxes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSensoryAxes.MaterialUsedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Landmarks {
                get {
                    try {
                        return ((string)(this[this.tableSensoryAxes.LandmarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Landmarks\' in table \'SensoryAxes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSensoryAxes.LandmarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableSensoryAxes.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'SensoryAxes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSensoryAxes.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableSensoryAxes.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableSensoryAxes.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.SensoryAxes_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.SensoryAxes_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialUsedNull() {
                return this.IsNull(this.tableSensoryAxes.MaterialUsedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialUsedNull() {
                this[this.tableSensoryAxes.MaterialUsedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLandmarksNull() {
                return this.IsNull(this.tableSensoryAxes.LandmarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLandmarksNull() {
                this[this.tableSensoryAxes.LandmarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull() {
                return this.IsNull(this.tableSensoryAxes.ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull() {
                this[this.tableSensoryAxes.ResultColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CranialNerveAssmtsRow : global::System.Data.DataRow {
            
            private CranialNerveAssmtsDataTable tableCranialNerveAssmts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CranialNerveAssmtsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCranialNerveAssmts = ((CranialNerveAssmtsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableCranialNerveAssmts.RowIdColumn]));
                }
                set {
                    this[this.tableCranialNerveAssmts.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Right {
                get {
                    try {
                        return ((string)(this[this.tableCranialNerveAssmts.RightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Right\' in table \'CranialNerveAssmts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCranialNerveAssmts.RightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Left {
                get {
                    try {
                        return ((string)(this[this.tableCranialNerveAssmts.LeftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Left\' in table \'CranialNerveAssmts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCranialNerveAssmts.LeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableCranialNerveAssmts.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'CranialNerveAssmts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCranialNerveAssmts.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableCranialNerveAssmts.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableCranialNerveAssmts.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CranialNerve {
                get {
                    try {
                        return ((string)(this[this.tableCranialNerveAssmts.CranialNerveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CranialNerve\' in table \'CranialNerveAssmts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCranialNerveAssmts.CranialNerveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.CranialNerveAssmts_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.CranialNerveAssmts_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRightNull() {
                return this.IsNull(this.tableCranialNerveAssmts.RightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRightNull() {
                this[this.tableCranialNerveAssmts.RightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLeftNull() {
                return this.IsNull(this.tableCranialNerveAssmts.LeftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLeftNull() {
                this[this.tableCranialNerveAssmts.LeftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull() {
                return this.IsNull(this.tableCranialNerveAssmts.ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull() {
                this[this.tableCranialNerveAssmts.ResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCranialNerveNull() {
                return this.IsNull(this.tableCranialNerveAssmts.CranialNerveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCranialNerveNull() {
                this[this.tableCranialNerveAssmts.CranialNerveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CoordinationAssmtsRow : global::System.Data.DataRow {
            
            private CoordinationAssmtsDataTable tableCoordinationAssmts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CoordinationAssmtsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCoordinationAssmts = ((CoordinationAssmtsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableCoordinationAssmts.RowIdColumn]));
                }
                set {
                    this[this.tableCoordinationAssmts.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoordinationTest {
                get {
                    try {
                        return ((string)(this[this.tableCoordinationAssmts.CoordinationTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoordinationTest\' in table \'CoordinationAssmts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoordinationAssmts.CoordinationTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Right {
                get {
                    try {
                        return ((string)(this[this.tableCoordinationAssmts.RightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Right\' in table \'CoordinationAssmts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoordinationAssmts.RightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Left {
                get {
                    try {
                        return ((string)(this[this.tableCoordinationAssmts.LeftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Left\' in table \'CoordinationAssmts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoordinationAssmts.LeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableCoordinationAssmts.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'CoordinationAssmts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoordinationAssmts.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableCoordinationAssmts.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableCoordinationAssmts.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.CoordinationAssmts_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.CoordinationAssmts_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoordinationTestNull() {
                return this.IsNull(this.tableCoordinationAssmts.CoordinationTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoordinationTestNull() {
                this[this.tableCoordinationAssmts.CoordinationTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRightNull() {
                return this.IsNull(this.tableCoordinationAssmts.RightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRightNull() {
                this[this.tableCoordinationAssmts.RightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLeftNull() {
                return this.IsNull(this.tableCoordinationAssmts.LeftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLeftNull() {
                this[this.tableCoordinationAssmts.LeftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull() {
                return this.IsNull(this.tableCoordinationAssmts.ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull() {
                this[this.tableCoordinationAssmts.ResultColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MBMsRow : global::System.Data.DataRow {
            
            private MBMsDataTable tableMBMs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MBMsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMBMs = ((MBMsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableMBMs.RowIdColumn]));
                }
                set {
                    this[this.tableMBMs.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableMBMs.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'MBMs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBMs.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Markings {
                get {
                    try {
                        return ((string)(this[this.tableMBMs.MarkingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Markings\' in table \'MBMs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBMs.MarkingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Right {
                get {
                    return ((decimal)(this[this.tableMBMs.RightColumn]));
                }
                set {
                    this[this.tableMBMs.RightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Left {
                get {
                    return ((decimal)(this[this.tableMBMs.LeftColumn]));
                }
                set {
                    this[this.tableMBMs.LeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Difference {
                get {
                    return ((decimal)(this[this.tableMBMs.DifferenceColumn]));
                }
                set {
                    this[this.tableMBMs.DifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientVisitId {
                get {
                    return ((int)(this[this.tableMBMs.PatientVisitIdColumn]));
                }
                set {
                    this[this.tableMBMs.PatientVisitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow PatientVisitsRow {
                get {
                    return ((PatientVisitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.MBMs_dbo.PatientVisits_PatientVisitId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.MBMs_dbo.PatientVisits_PatientVisitId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationNull() {
                return this.IsNull(this.tableMBMs.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationNull() {
                this[this.tableMBMs.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkingsNull() {
                return this.IsNull(this.tableMBMs.MarkingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkingsNull() {
                this[this.tableMBMs.MarkingsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PatientVisitsRowChangeEvent : global::System.EventArgs {
            
            private PatientVisitsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRowChangeEvent(PatientVisitsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientVisitsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AncillaryProceduresRowChangeEvent : global::System.EventArgs {
            
            private AncillaryProceduresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AncillaryProceduresRowChangeEvent(AncillaryProceduresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AncillaryProceduresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DrugHistoriesRowChangeEvent : global::System.EventArgs {
            
            private DrugHistoriesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrugHistoriesRowChangeEvent(DrugHistoriesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DrugHistoriesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ROMsRowChangeEvent : global::System.EventArgs {
            
            private ROMsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROMsRowChangeEvent(ROMsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROMsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ROM2RowChangeEvent : global::System.EventArgs {
            
            private ROM2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROM2RowChangeEvent(ROM2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ROM2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MMTsRowChangeEvent : global::System.EventArgs {
            
            private MMTsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MMTsRowChangeEvent(MMTsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MMTsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SensoryAxesRowChangeEvent : global::System.EventArgs {
            
            private SensoryAxesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SensoryAxesRowChangeEvent(SensoryAxesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SensoryAxesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CranialNerveAssmtsRowChangeEvent : global::System.EventArgs {
            
            private CranialNerveAssmtsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CranialNerveAssmtsRowChangeEvent(CranialNerveAssmtsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CranialNerveAssmtsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CoordinationAssmtsRowChangeEvent : global::System.EventArgs {
            
            private CoordinationAssmtsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CoordinationAssmtsRowChangeEvent(CoordinationAssmtsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CoordinationAssmtsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MBMsRowChangeEvent : global::System.EventArgs {
            
            private MBMsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBMsRowChangeEvent(MBMsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBMsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WebApi.DataSet.SoapDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PatientVisitsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PatientVisitsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PatientVisits";
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("CivilStatus", "CivilStatus");
            tableMapping.ColumnMappings.Add("HandedNess", "HandedNess");
            tableMapping.ColumnMappings.Add("Occupation", "Occupation");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("Religion", "Religion");
            tableMapping.ColumnMappings.Add("DateOfConsultation", "DateOfConsultation");
            tableMapping.ColumnMappings.Add("PatientType", "PatientType");
            tableMapping.ColumnMappings.Add("GeneralPhysician", "GeneralPhysician");
            tableMapping.ColumnMappings.Add("DateOfReferral", "DateOfReferral");
            tableMapping.ColumnMappings.Add("Neurologist", "Neurologist");
            tableMapping.ColumnMappings.Add("HPI", "HPI");
            tableMapping.ColumnMappings.Add("PatientId", "PatientId");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("CityTown", "CityTown");
            tableMapping.ColumnMappings.Add("Province", "Province");
            tableMapping.ColumnMappings.Add("DateOfAdmission", "DateOfAdmission");
            tableMapping.ColumnMappings.Add("Surgeon", "Surgeon");
            tableMapping.ColumnMappings.Add("DateOfSurgery", "DateOfSurgery");
            tableMapping.ColumnMappings.Add("Orthopedic", "Orthopedic");
            tableMapping.ColumnMappings.Add("Cardiologist", "Cardiologist");
            tableMapping.ColumnMappings.Add("Opthalmologoist", "Opthalmologoist");
            tableMapping.ColumnMappings.Add("Pulmonologist", "Pulmonologist");
            tableMapping.ColumnMappings.Add("OtherDoctor", "OtherDoctor");
            tableMapping.ColumnMappings.Add("ReferringDoctor", "ReferringDoctor");
            tableMapping.ColumnMappings.Add("DateOfInitialEvaluation", "DateOfInitialEvaluation");
            tableMapping.ColumnMappings.Add("Diagnosis", "Diagnosis");
            tableMapping.ColumnMappings.Add("PMHx_Trauma", "PMHx_Trauma");
            tableMapping.ColumnMappings.Add("PMHx_Arthritis", "PMHx_Arthritis");
            tableMapping.ColumnMappings.Add("PMHx_HPN", "PMHx_HPN");
            tableMapping.ColumnMappings.Add("PMHx_DM", "PMHx_DM");
            tableMapping.ColumnMappings.Add("PMHx_Allergies", "PMHx_Allergies");
            tableMapping.ColumnMappings.Add("PMHx_Surgery", "PMHx_Surgery");
            tableMapping.ColumnMappings.Add("PMHx_SurgeryDate", "PMHx_SurgeryDate");
            tableMapping.ColumnMappings.Add("PMHx_CardiovascularDisease", "PMHx_CardiovascularDisease");
            tableMapping.ColumnMappings.Add("PMHx_PulmonaryCondition", "PMHx_PulmonaryCondition");
            tableMapping.ColumnMappings.Add("PMHx_NeurologyCondition", "PMHx_NeurologyCondition");
            tableMapping.ColumnMappings.Add("PMHx_Cancer", "PMHx_Cancer");
            tableMapping.ColumnMappings.Add("PMHx_Others", "PMHx_Others");
            tableMapping.ColumnMappings.Add("FMHx_HypertensionF", "FMHx_HypertensionF");
            tableMapping.ColumnMappings.Add("FMHx_HypertensionM", "FMHx_HypertensionM");
            tableMapping.ColumnMappings.Add("FMHx_ArthritisF", "FMHx_ArthritisF");
            tableMapping.ColumnMappings.Add("FMHx_ArthritisM", "FMHx_ArthritisM");
            tableMapping.ColumnMappings.Add("FMHx_DiabetesMellitusF", "FMHx_DiabetesMellitusF");
            tableMapping.ColumnMappings.Add("FMHx_DiabetesMellitusM", "FMHx_DiabetesMellitusM");
            tableMapping.ColumnMappings.Add("FMHx_CancerF", "FMHx_CancerF");
            tableMapping.ColumnMappings.Add("FMHx_CancerM", "FMHx_CancerM");
            tableMapping.ColumnMappings.Add("FMHx_AsthmaF", "FMHx_AsthmaF");
            tableMapping.ColumnMappings.Add("FMHx_AsthmaM", "FMHx_AsthmaM");
            tableMapping.ColumnMappings.Add("FMHx_AllergiesF", "FMHx_AllergiesF");
            tableMapping.ColumnMappings.Add("FMHx_AllergiesM", "FMHx_AllergiesM");
            tableMapping.ColumnMappings.Add("FMHx_NeurologicConditionF", "FMHx_NeurologicConditionF");
            tableMapping.ColumnMappings.Add("FMHx_NeurologicConditionM", "FMHx_NeurologicConditionM");
            tableMapping.ColumnMappings.Add("FMHx_Others", "FMHx_Others");
            tableMapping.ColumnMappings.Add("FMHx_OthersF", "FMHx_OthersF");
            tableMapping.ColumnMappings.Add("FMHx_OthersM", "FMHx_OthersM");
            tableMapping.ColumnMappings.Add("PSEHx_FinancialStatus", "PSEHx_FinancialStatus");
            tableMapping.ColumnMappings.Add("PSEHx_PersonalityType", "PSEHx_PersonalityType");
            tableMapping.ColumnMappings.Add("PSEHx_LifeStyle", "PSEHx_LifeStyle");
            tableMapping.ColumnMappings.Add("PSEHx_EducationalAttainment", "PSEHx_EducationalAttainment");
            tableMapping.ColumnMappings.Add("PSEHx_LivesWith", "PSEHx_LivesWith");
            tableMapping.ColumnMappings.Add("PSEHx_NumberOfOffspring", "PSEHx_NumberOfOffspring");
            tableMapping.ColumnMappings.Add("PSEHx_Relatives", "PSEHx_Relatives");
            tableMapping.ColumnMappings.Add("PSEHx_OtherLivesWith", "PSEHx_OtherLivesWith");
            tableMapping.ColumnMappings.Add("PSEHx_Hobbies", "PSEHx_Hobbies");
            tableMapping.ColumnMappings.Add("PSEHx_Sports", "PSEHx_Sports");
            tableMapping.ColumnMappings.Add("PSEHx_OtherHobbies", "PSEHx_OtherHobbies");
            tableMapping.ColumnMappings.Add("PSEHx_CigaretteSmoker", "PSEHx_CigaretteSmoker");
            tableMapping.ColumnMappings.Add("PSEHx_AlcoholDrinker", "PSEHx_AlcoholDrinker");
            tableMapping.ColumnMappings.Add("PSEHx_TypeOfHouse", "PSEHx_TypeOfHouse");
            tableMapping.ColumnMappings.Add("PSEHx_OtherTypeOfHouse", "PSEHx_OtherTypeOfHouse");
            tableMapping.ColumnMappings.Add("PMHx_TraumaText", "PMHx_TraumaText");
            tableMapping.ColumnMappings.Add("PMHx_DMText", "PMHx_DMText");
            tableMapping.ColumnMappings.Add("PMHx_SurgeryText", "PMHx_SurgeryText");
            tableMapping.ColumnMappings.Add("PMHx_Hospitalization", "PMHx_Hospitalization");
            tableMapping.ColumnMappings.Add("PMHx_HospitalizationText", "PMHx_HospitalizationText");
            tableMapping.ColumnMappings.Add("PMHx_HospitalizationDate", "PMHx_HospitalizationDate");
            tableMapping.ColumnMappings.Add("PMHx_CardiovascularDiseaseText", "PMHx_CardiovascularDiseaseText");
            tableMapping.ColumnMappings.Add("PMHx_PulmonaryConditionText", "PMHx_PulmonaryConditionText");
            tableMapping.ColumnMappings.Add("PMHx_NeurologyConditionText", "PMHx_NeurologyConditionText");
            tableMapping.ColumnMappings.Add("PMHx_ArthritisText", "PMHx_ArthritisText");
            tableMapping.ColumnMappings.Add("PMHx_AsthmaDate", "PMHx_AsthmaDate");
            tableMapping.ColumnMappings.Add("PMHx_Asthma", "PMHx_Asthma");
            tableMapping.ColumnMappings.Add("RomFindings", "RomFindings");
            tableMapping.ColumnMappings.Add("RomSignificance", "RomSignificance");
            tableMapping.ColumnMappings.Add("MmtFindings", "MmtFindings");
            tableMapping.ColumnMappings.Add("MmtSignificance", "MmtSignificance");
            tableMapping.ColumnMappings.Add("SensoryFindings", "SensoryFindings");
            tableMapping.ColumnMappings.Add("SensorySignificance", "SensorySignificance");
            tableMapping.ColumnMappings.Add("CranialNerveAssmtFindings", "CranialNerveAssmtFindings");
            tableMapping.ColumnMappings.Add("CranialNerveAssmtSignificance", "CranialNerveAssmtSignificance");
            tableMapping.ColumnMappings.Add("CoordinationAssmtFindings", "CoordinationAssmtFindings");
            tableMapping.ColumnMappings.Add("CoordinationAssmtSignificance", "CoordinationAssmtSignificance");
            tableMapping.ColumnMappings.Add("MbmFindings", "MbmFindings");
            tableMapping.ColumnMappings.Add("MbmSignificance", "MbmSignificance");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_ChiefComplaint", "SubjectiveObjective_ChiefComplaint");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_PtTranslation", "SubjectiveObjective_PtTranslation");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_BPBefore", "SubjectiveObjective_BPBefore");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_BPAfter", "SubjectiveObjective_BPAfter");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_RRBefore", "SubjectiveObjective_RRBefore");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_RRAfter", "SubjectiveObjective_RRAfter");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_PRBefore", "SubjectiveObjective_PRBefore");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_PRAfter", "SubjectiveObjective_PRAfter");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_TBefore", "SubjectiveObjective_TBefore");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_TAfter", "SubjectiveObjective_TAfter");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_Findings", "SubjectiveObjective_Findings");
            tableMapping.ColumnMappings.Add("SubjectiveObjective_Significance", "SubjectiveObjective_Significance");
            tableMapping.ColumnMappings.Add("OcularInspection_Ambulation", "OcularInspection_Ambulation");
            tableMapping.ColumnMappings.Add("OcularInspection_TADWheelChair", "OcularInspection_TADWheelChair");
            tableMapping.ColumnMappings.Add("OcularInspection_TADCruches", "OcularInspection_TADCruches");
            tableMapping.ColumnMappings.Add("OcularInspection_TADCane", "OcularInspection_TADCane");
            tableMapping.ColumnMappings.Add("OcularInspection_TADWalker", "OcularInspection_TADWalker");
            tableMapping.ColumnMappings.Add("OcularInspection_Alert", "OcularInspection_Alert");
            tableMapping.ColumnMappings.Add("OcularInspection_Coherent", "OcularInspection_Coherent");
            tableMapping.ColumnMappings.Add("OcularInspection_Cooperative", "OcularInspection_Cooperative");
            tableMapping.ColumnMappings.Add("OcularInspection_BodyType", "OcularInspection_BodyType");
            tableMapping.ColumnMappings.Add("OcularInspection_Atrophy", "OcularInspection_Atrophy");
            tableMapping.ColumnMappings.Add("OcularInspection_Swelling", "OcularInspection_Swelling");
            tableMapping.ColumnMappings.Add("OcularInspection_Redness", "OcularInspection_Redness");
            tableMapping.ColumnMappings.Add("OcularInspection_Ecchymosis", "OcularInspection_Ecchymosis");
            tableMapping.ColumnMappings.Add("OcularInspection_Deformity", "OcularInspection_Deformity");
            tableMapping.ColumnMappings.Add("OcularInspection_Wounds", "OcularInspection_Wounds");
            tableMapping.ColumnMappings.Add("OcularInspection_Scar", "OcularInspection_Scar");
            tableMapping.ColumnMappings.Add("OcularInspection_PressureSore", "OcularInspection_PressureSore");
            tableMapping.ColumnMappings.Add("OcularInspection_GaitDeviation", "OcularInspection_GaitDeviation");
            tableMapping.ColumnMappings.Add("OcularInspection_Incision", "OcularInspection_Incision");
            tableMapping.ColumnMappings.Add("OcularInspection_ShortnessOfBreathing", "OcularInspection_ShortnessOfBreathing");
            tableMapping.ColumnMappings.Add("OcularInspection_Others", "OcularInspection_Others");
            tableMapping.ColumnMappings.Add("Palpation_BodyTemperature", "Palpation_BodyTemperature");
            tableMapping.ColumnMappings.Add("Palpation_MuscleTone", "Palpation_MuscleTone");
            tableMapping.ColumnMappings.Add("Palpation_Edema", "Palpation_Edema");
            tableMapping.ColumnMappings.Add("Palpation_Tenderness", "Palpation_Tenderness");
            tableMapping.ColumnMappings.Add("Palpation_Location", "Palpation_Location");
            tableMapping.ColumnMappings.Add("Palpation_Deformity", "Palpation_Deformity");
            tableMapping.ColumnMappings.Add("Palpation_MuscleGuarding", "Palpation_MuscleGuarding");
            tableMapping.ColumnMappings.Add("Palpation_MuscleSpasm", "Palpation_MuscleSpasm");
            tableMapping.ColumnMappings.Add("Palpation_Subluxation", "Palpation_Subluxation");
            tableMapping.ColumnMappings.Add("Palpation_Dislocation", "Palpation_Dislocation");
            tableMapping.ColumnMappings.Add("CognitiveAssmt_STQuestion", "CognitiveAssmt_STQuestion");
            tableMapping.ColumnMappings.Add("CognitiveAssmt_STResponse", "CognitiveAssmt_STResponse");
            tableMapping.ColumnMappings.Add("CognitiveAssmt_LTQuestion", "CognitiveAssmt_LTQuestion");
            tableMapping.ColumnMappings.Add("CognitiveAssmt_LTResponse", "CognitiveAssmt_LTResponse");
            tableMapping.ColumnMappings.Add("CognitiveAssmt_Findings", "CognitiveAssmt_Findings");
            tableMapping.ColumnMappings.Add("CognitiveAssmt_Significance", "CognitiveAssmt_Significance");
            tableMapping.ColumnMappings.Add("BalanceTolerance_SittingBalance", "BalanceTolerance_SittingBalance");
            tableMapping.ColumnMappings.Add("BalanceTolerance_SittingTolerance", "BalanceTolerance_SittingTolerance");
            tableMapping.ColumnMappings.Add("BalanceTolerance_StandingBalance", "BalanceTolerance_StandingBalance");
            tableMapping.ColumnMappings.Add("BalanceTolerance_StandingTolerance", "BalanceTolerance_StandingTolerance");
            tableMapping.ColumnMappings.Add("BalanceTolerance_Findings", "BalanceTolerance_Findings");
            tableMapping.ColumnMappings.Add("BalanceTolerance_Significance", "BalanceTolerance_Significance");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_LeftHand", "DeepTendonReflex_LeftHand");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_RightHand", "DeepTendonReflex_RightHand");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_LeftElbow", "DeepTendonReflex_LeftElbow");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_RightElbow", "DeepTendonReflex_RightElbow");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_LeftKnee", "DeepTendonReflex_LeftKnee");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_RightKnee", "DeepTendonReflex_RightKnee");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_LeftFoot", "DeepTendonReflex_LeftFoot");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_RightFoot", "DeepTendonReflex_RightFoot");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_Findings", "DeepTendonReflex_Findings");
            tableMapping.ColumnMappings.Add("DeepTendonReflex_Significance", "DeepTendonReflex_Significance");
            tableMapping.ColumnMappings.Add("PosturalAssmtFindings", "PosturalAssmtFindings");
            tableMapping.ColumnMappings.Add("PosturalAssmtSignificance", "PosturalAssmtSignificance");
            tableMapping.ColumnMappings.Add("HandGripStrength_T1RightHand", "HandGripStrength_T1RightHand");
            tableMapping.ColumnMappings.Add("HandGripStrength_T1LeftHand", "HandGripStrength_T1LeftHand");
            tableMapping.ColumnMappings.Add("HandGripStrength_T2RightHand", "HandGripStrength_T2RightHand");
            tableMapping.ColumnMappings.Add("HandGripStrength_T2LeftHand", "HandGripStrength_T2LeftHand");
            tableMapping.ColumnMappings.Add("HandGripStrength_T3RightHand", "HandGripStrength_T3RightHand");
            tableMapping.ColumnMappings.Add("HandGripStrength_T3LeftHand", "HandGripStrength_T3LeftHand");
            tableMapping.ColumnMappings.Add("HandGripStrength_AveRightHand", "HandGripStrength_AveRightHand");
            tableMapping.ColumnMappings.Add("HandGripStrength_AveLeftHand", "HandGripStrength_AveLeftHand");
            tableMapping.ColumnMappings.Add("HandGripStrength_Findings", "HandGripStrength_Findings");
            tableMapping.ColumnMappings.Add("HandGripStrength_Significance", "HandGripStrength_Significance");
            tableMapping.ColumnMappings.Add("VolumetricMeasurement_Right", "VolumetricMeasurement_Right");
            tableMapping.ColumnMappings.Add("VolumetricMeasurement_Left", "VolumetricMeasurement_Left");
            tableMapping.ColumnMappings.Add("VolumetricMeasurement_Difference", "VolumetricMeasurement_Difference");
            tableMapping.ColumnMappings.Add("VolumetricMeasurement_Findings", "VolumetricMeasurement_Findings");
            tableMapping.ColumnMappings.Add("VolumetricMeasurement_Significance", "VolumetricMeasurement_Significance");
            tableMapping.ColumnMappings.Add("AnteriorView_HeadInMidline", "AnteriorView_HeadInMidline");
            tableMapping.ColumnMappings.Add("AnteriorView_HeadInMidlineFindings", "AnteriorView_HeadInMidlineFindings");
            tableMapping.ColumnMappings.Add("AnteriorView_ShouldersInLevel", "AnteriorView_ShouldersInLevel");
            tableMapping.ColumnMappings.Add("AnteriorView_ShouldersInLevelFindings", "AnteriorView_ShouldersInLevelFindings");
            tableMapping.ColumnMappings.Add("AnteriorView_Protrusion", "AnteriorView_Protrusion");
            tableMapping.ColumnMappings.Add("AnteriorView_ProtrusionFindings", "AnteriorView_ProtrusionFindings");
            tableMapping.ColumnMappings.Add("AnteriorView_Lateralization", "AnteriorView_Lateralization");
            tableMapping.ColumnMappings.Add("AnteriorView_LateralizationFindings", "AnteriorView_LateralizationFindings");
            tableMapping.ColumnMappings.Add("AnteriorView_Depression", "AnteriorView_Depression");
            tableMapping.ColumnMappings.Add("AnteriorView_DepressionFindings", "AnteriorView_DepressionFindings");
            tableMapping.ColumnMappings.Add("AnteriorView_WaistAngle", "AnteriorView_WaistAngle");
            tableMapping.ColumnMappings.Add("AnteriorView_ArmPosition", "AnteriorView_ArmPosition");
            tableMapping.ColumnMappings.Add("AnteriorView_CarryingAngle", "AnteriorView_CarryingAngle");
            tableMapping.ColumnMappings.Add("AnteriorView_ASISLevel", "AnteriorView_ASISLevel");
            tableMapping.ColumnMappings.Add("AnteriorView_PatellaeAlignment", "AnteriorView_PatellaeAlignment");
            tableMapping.ColumnMappings.Add("AnteriorView_KneeAlignment", "AnteriorView_KneeAlignment");
            tableMapping.ColumnMappings.Add("AnteriorView_MalleoliLevel", "AnteriorView_MalleoliLevel");
            tableMapping.ColumnMappings.Add("AnteriorView_ArchesOfFeet", "AnteriorView_ArchesOfFeet");
            tableMapping.ColumnMappings.Add("AnteriorView_FeetAngle", "AnteriorView_FeetAngle");
            tableMapping.ColumnMappings.Add("AnteriorView_FeetAngleFindings", "AnteriorView_FeetAngleFindings");
            tableMapping.ColumnMappings.Add("PosteriorView_HeadInMidline", "PosteriorView_HeadInMidline");
            tableMapping.ColumnMappings.Add("PosteriorView_HeadInMidlineFindings", "PosteriorView_HeadInMidlineFindings");
            tableMapping.ColumnMappings.Add("PosteriorView_ShouldersInLevel", "PosteriorView_ShouldersInLevel");
            tableMapping.ColumnMappings.Add("PosteriorView_ShouldersInLevelFindings", "PosteriorView_ShouldersInLevelFindings");
            tableMapping.ColumnMappings.Add("PosteriorView_SpineScapularLevel", "PosteriorView_SpineScapularLevel");
            tableMapping.ColumnMappings.Add("PosteriorView_SpineScapularLevelFindings", "PosteriorView_SpineScapularLevelFindings");
            tableMapping.ColumnMappings.Add("PosteriorView_SpineInMidline", "PosteriorView_SpineInMidline");
            tableMapping.ColumnMappings.Add("PosteriorView_SpineInMidlineFindings", "PosteriorView_SpineInMidlineFindings");
            tableMapping.ColumnMappings.Add("PosteriorView_WaistLevelAngle", "PosteriorView_WaistLevelAngle");
            tableMapping.ColumnMappings.Add("PosteriorView_ArmPosition", "PosteriorView_ArmPosition");
            tableMapping.ColumnMappings.Add("PosteriorView_IliacCrestlevel", "PosteriorView_IliacCrestlevel");
            tableMapping.ColumnMappings.Add("PosteriorView_PSISLevel", "PosteriorView_PSISLevel");
            tableMapping.ColumnMappings.Add("PosteriorView_GlutealFoldsLevel", "PosteriorView_GlutealFoldsLevel");
            tableMapping.ColumnMappings.Add("PosteriorView_PoplitealFoassalevel", "PosteriorView_PoplitealFoassalevel");
            tableMapping.ColumnMappings.Add("PosteriorView_HeelsPosition", "PosteriorView_HeelsPosition");
            tableMapping.ColumnMappings.Add("LateralView_EarlobeShoulderAlignment", "LateralView_EarlobeShoulderAlignment");
            tableMapping.ColumnMappings.Add("LateralView_EarlobeShoulderAlignmentFindings", "LateralView_EarlobeShoulderAlignmentFindings");
            tableMapping.ColumnMappings.Add("LateralView_AcromioIliacAlignment", "LateralView_AcromioIliacAlignment");
            tableMapping.ColumnMappings.Add("LateralView_AcromioIliacAlignmentFindings", "LateralView_AcromioIliacAlignmentFindings");
            tableMapping.ColumnMappings.Add("LateralView_SpinalSegments", "LateralView_SpinalSegments");
            tableMapping.ColumnMappings.Add("LateralView_ShoulderAlignment", "LateralView_ShoulderAlignment");
            tableMapping.ColumnMappings.Add("LateralView_PelvicAngle", "LateralView_PelvicAngle");
            tableMapping.ColumnMappings.Add("LateralView_KneeAlignment", "LateralView_KneeAlignment");
            tableMapping.ColumnMappings.Add("LateralView_PlumblineAlignment", "LateralView_PlumblineAlignment");
            tableMapping.ColumnMappings.Add("LateralView_PlumblineAlignmentFindings", "LateralView_PlumblineAlignmentFindings");
            tableMapping.ColumnMappings.Add("LateralView_ArchesOfFeet", "LateralView_ArchesOfFeet");
            tableMapping.ColumnMappings.Add("GaitAssessment_Asssessment", "GaitAssessment_Asssessment");
            tableMapping.ColumnMappings.Add("GaitAssessment_RInitialLoading", "GaitAssessment_RInitialLoading");
            tableMapping.ColumnMappings.Add("GaitAssessment_LInitialLoading", "GaitAssessment_LInitialLoading");
            tableMapping.ColumnMappings.Add("GaitAssessment_RLoadingResponse", "GaitAssessment_RLoadingResponse");
            tableMapping.ColumnMappings.Add("GaitAssessment_LLoadingResponse", "GaitAssessment_LLoadingResponse");
            tableMapping.ColumnMappings.Add("GaitAssessment_RMidStance", "GaitAssessment_RMidStance");
            tableMapping.ColumnMappings.Add("GaitAssessment_LMidStance", "GaitAssessment_LMidStance");
            tableMapping.ColumnMappings.Add("GaitAssessment_RTerminalStance", "GaitAssessment_RTerminalStance");
            tableMapping.ColumnMappings.Add("GaitAssessment_LTerminalStance", "GaitAssessment_LTerminalStance");
            tableMapping.ColumnMappings.Add("GaitAssessment_RPreSwing", "GaitAssessment_RPreSwing");
            tableMapping.ColumnMappings.Add("GaitAssessment_LPreSwing", "GaitAssessment_LPreSwing");
            tableMapping.ColumnMappings.Add("GaitAssessment_RInitialSwing", "GaitAssessment_RInitialSwing");
            tableMapping.ColumnMappings.Add("GaitAssessment_LInitialPreSwing", "GaitAssessment_LInitialPreSwing");
            tableMapping.ColumnMappings.Add("GaitAssessment_RMidSwing", "GaitAssessment_RMidSwing");
            tableMapping.ColumnMappings.Add("GaitAssessment_LMidPreSwing", "GaitAssessment_LMidPreSwing");
            tableMapping.ColumnMappings.Add("GaitAssessment_RTerminalSwing", "GaitAssessment_RTerminalSwing");
            tableMapping.ColumnMappings.Add("GaitAssessment_LTerminalSwing", "GaitAssessment_LTerminalSwing");
            tableMapping.ColumnMappings.Add("GaitAssessment_Findings", "GaitAssessment_Findings");
            tableMapping.ColumnMappings.Add("GaitAssessment_Significance", "GaitAssessment_Significance");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxWriting", "FunctionalAnalysis_AdlsAxWriting");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxCleaningHouse", "FunctionalAnalysis_AdlsAxCleaningHouse");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxCooking", "FunctionalAnalysis_AdlsAxCooking");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxEating", "FunctionalAnalysis_AdlsAxEating");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxTurningDoorKnob", "FunctionalAnalysis_AdlsAxTurningDoorKnob");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxUsingKeys", "FunctionalAnalysis_AdlsAxUsingKeys");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxOpeningBottle", "FunctionalAnalysis_AdlsAxOpeningBottle");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxBrushingTeeth", "FunctionalAnalysis_AdlsAxBrushingTeeth");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxTyingShoeLace", "FunctionalAnalysis_AdlsAxTyingShoeLace");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxWashingDishes", "FunctionalAnalysis_AdlsAxWashingDishes");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxSweepingFloor", "FunctionalAnalysis_AdlsAxSweepingFloor");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxOthers", "FunctionalAnalysis_AdlsAxOthers");
            tableMapping.ColumnMappings.Add("Assessment_Diagnosis", "Assessment_Diagnosis");
            tableMapping.ColumnMappings.Add("Assessment_PTImpression", "Assessment_PTImpression");
            tableMapping.ColumnMappings.Add("Assessment_ProblemList", "Assessment_ProblemList");
            tableMapping.ColumnMappings.Add("Assessment_LongTermGoals", "Assessment_LongTermGoals");
            tableMapping.ColumnMappings.Add("Assessment_ShortTermGoals", "Assessment_ShortTermGoals");
            tableMapping.ColumnMappings.Add("Plan_PTManagement", "Plan_PTManagement");
            tableMapping.ColumnMappings.Add("Plan_HomeInstruction", "Plan_HomeInstruction");
            tableMapping.ColumnMappings.Add("FunctionalAnalysis_AdlsAxOthersText", "FunctionalAnalysis_AdlsAxOthersText");
            tableMapping.ColumnMappings.Add("CardioPulmonaryAssmt_BodyType", "CardioPulmonaryAssmt_BodyType");
            tableMapping.ColumnMappings.Add("CardioPulmonaryAssmt_ChestShape", "CardioPulmonaryAssmt_ChestShape");
            tableMapping.ColumnMappings.Add("CardioPulmonaryAssmt_ChestShapeOthers", "CardioPulmonaryAssmt_ChestShapeOthers");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SpmMucoid", "PulmonaryAssmt_SpmMucoid");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SpmFrothy", "PulmonaryAssmt_SpmFrothy");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SpmMucopurulent", "PulmonaryAssmt_SpmMucopurulent");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SpmHemoptysis", "PulmonaryAssmt_SpmHemoptysis");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SpmPurulent", "PulmonaryAssmt_SpmPurulent");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SpmOthers", "PulmonaryAssmt_SpmOthers");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SpmOthersText", "PulmonaryAssmt_SpmOthersText");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_MdShift", "PulmonaryAssmt_MdShift");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_MdShiftFindings", "PulmonaryAssmt_MdShiftFindings");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_MdShiftSignificance", "PulmonaryAssmt_MdShiftSignificance");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_Fremitus", "PulmonaryAssmt_Fremitus");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_FremitusFindings", "PulmonaryAssmt_FremitusFindings");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_FremitusSignificance", "PulmonaryAssmt_FremitusSignificance");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_ChstExpULE", "PulmonaryAssmt_ChstExpULE");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_ChstExpMLE", "PulmonaryAssmt_ChstExpMLE");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_ChstExpLLE", "PulmonaryAssmt_ChstExpLLE");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_ChstExpSig", "PulmonaryAssmt_ChstExpSig");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_Percussion", "PulmonaryAssmt_Percussion");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_PercussionOthers", "PulmonaryAssmt_PercussionOthers");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SixMinWalk", "PulmonaryAssmt_SixMinWalk");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_SixMinWalkFindings", "PulmonaryAssmt_SixMinWalkFindings");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_StairClimbing", "PulmonaryAssmt_StairClimbing");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_StairClimbingFindings", "PulmonaryAssmt_StairClimbingFindings");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_ShuttleTest", "PulmonaryAssmt_ShuttleTest");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_ShuttleTestFindings", "PulmonaryAssmt_ShuttleTestFindings");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_OtherTest", "PulmonaryAssmt_OtherTest");
            tableMapping.ColumnMappings.Add("PulmonaryAssmt_OtherTestFindings", "PulmonaryAssmt_OtherTestFindings");
            tableMapping.ColumnMappings.Add("CMAxilla_MaxInsT1", "CMAxilla_MaxInsT1");
            tableMapping.ColumnMappings.Add("CMAxilla_MaxInsT2", "CMAxilla_MaxInsT2");
            tableMapping.ColumnMappings.Add("CMAxilla_MaxInsT3", "CMAxilla_MaxInsT3");
            tableMapping.ColumnMappings.Add("CMAxilla_MaxInsAve", "CMAxilla_MaxInsAve");
            tableMapping.ColumnMappings.Add("CMAxilla_MaxExpT1", "CMAxilla_MaxExpT1");
            tableMapping.ColumnMappings.Add("CMAxilla_MaxExpT2", "CMAxilla_MaxExpT2");
            tableMapping.ColumnMappings.Add("CMAxilla_MaxExpT3", "CMAxilla_MaxExpT3");
            tableMapping.ColumnMappings.Add("CMAxilla_MaxExpAve", "CMAxilla_MaxExpAve");
            tableMapping.ColumnMappings.Add("CMAxilla_DiffT1", "CMAxilla_DiffT1");
            tableMapping.ColumnMappings.Add("CMAxilla_DiffT2", "CMAxilla_DiffT2");
            tableMapping.ColumnMappings.Add("CMAxilla_DiffT3", "CMAxilla_DiffT3");
            tableMapping.ColumnMappings.Add("CMAxilla_DiffAve", "CMAxilla_DiffAve");
            tableMapping.ColumnMappings.Add("CMXiphoid_MaxInsT1", "CMXiphoid_MaxInsT1");
            tableMapping.ColumnMappings.Add("CMXiphoid_MaxInsT2", "CMXiphoid_MaxInsT2");
            tableMapping.ColumnMappings.Add("CMXiphoid_MaxInsT3", "CMXiphoid_MaxInsT3");
            tableMapping.ColumnMappings.Add("CMXiphoid_MaxInsAve", "CMXiphoid_MaxInsAve");
            tableMapping.ColumnMappings.Add("CMXiphoid_MaxExpT1", "CMXiphoid_MaxExpT1");
            tableMapping.ColumnMappings.Add("CMXiphoid_MaxExpT2", "CMXiphoid_MaxExpT2");
            tableMapping.ColumnMappings.Add("CMXiphoid_MaxExpT3", "CMXiphoid_MaxExpT3");
            tableMapping.ColumnMappings.Add("CMXiphoid_MaxExpAve", "CMXiphoid_MaxExpAve");
            tableMapping.ColumnMappings.Add("CMXiphoid_DiffT1", "CMXiphoid_DiffT1");
            tableMapping.ColumnMappings.Add("CMXiphoid_DiffT2", "CMXiphoid_DiffT2");
            tableMapping.ColumnMappings.Add("CMXiphoid_DiffT3", "CMXiphoid_DiffT3");
            tableMapping.ColumnMappings.Add("CMXiphoid_DiffAve", "CMXiphoid_DiffAve");
            tableMapping.ColumnMappings.Add("CMLowerCostal_MaxInsT1", "CMLowerCostal_MaxInsT1");
            tableMapping.ColumnMappings.Add("CMLowerCostal_MaxInsT2", "CMLowerCostal_MaxInsT2");
            tableMapping.ColumnMappings.Add("CMLowerCostal_MaxInsT3", "CMLowerCostal_MaxInsT3");
            tableMapping.ColumnMappings.Add("CMLowerCostal_MaxInsAve", "CMLowerCostal_MaxInsAve");
            tableMapping.ColumnMappings.Add("CMLowerCostal_MaxExpT1", "CMLowerCostal_MaxExpT1");
            tableMapping.ColumnMappings.Add("CMLowerCostal_MaxExpT2", "CMLowerCostal_MaxExpT2");
            tableMapping.ColumnMappings.Add("CMLowerCostal_MaxExpT3", "CMLowerCostal_MaxExpT3");
            tableMapping.ColumnMappings.Add("CMLowerCostal_MaxExpAve", "CMLowerCostal_MaxExpAve");
            tableMapping.ColumnMappings.Add("CMLowerCostal_DiffT1", "CMLowerCostal_DiffT1");
            tableMapping.ColumnMappings.Add("CMLowerCostal_DiffT2", "CMLowerCostal_DiffT2");
            tableMapping.ColumnMappings.Add("CMLowerCostal_DiffT3", "CMLowerCostal_DiffT3");
            tableMapping.ColumnMappings.Add("CMLowerCostal_DiffAve", "CMLowerCostal_DiffAve");
            tableMapping.ColumnMappings.Add("Auscultation_Trachael", "Auscultation_Trachael");
            tableMapping.ColumnMappings.Add("Auscultation_Bronchial", "Auscultation_Bronchial");
            tableMapping.ColumnMappings.Add("Auscultation_Bronchiovesicular", "Auscultation_Bronchiovesicular");
            tableMapping.ColumnMappings.Add("Auscultation_Vesicular", "Auscultation_Vesicular");
            tableMapping.ColumnMappings.Add("Auscultation_Crackles", "Auscultation_Crackles");
            tableMapping.ColumnMappings.Add("Auscultation_DiminishedBreathSounds", "Auscultation_DiminishedBreathSounds");
            tableMapping.ColumnMappings.Add("Auscultation_HighPitchedBronchialBreathing", "Auscultation_HighPitchedBronchialBreathing");
            tableMapping.ColumnMappings.Add("Auscultation_LowPitchedBronchialBreathing", "Auscultation_LowPitchedBronchialBreathing");
            tableMapping.ColumnMappings.Add("Auscultation_PleuralRub", "Auscultation_PleuralRub");
            tableMapping.ColumnMappings.Add("Auscultation_Rhonchi", "Auscultation_Rhonchi");
            tableMapping.ColumnMappings.Add("Auscultation_Stridor", "Auscultation_Stridor");
            tableMapping.ColumnMappings.Add("Auscultation_Wheeze", "Auscultation_Wheeze");
            tableMapping.ColumnMappings.Add("Auscultation_Others", "Auscultation_Others");
            tableMapping.ColumnMappings.Add("Auscultation_OthersText", "Auscultation_OthersText");
            tableMapping.ColumnMappings.Add("FigureOfEight_Right", "FigureOfEight_Right");
            tableMapping.ColumnMappings.Add("FigureOfEight_Left", "FigureOfEight_Left");
            tableMapping.ColumnMappings.Add("FigureOfEight_Difference", "FigureOfEight_Difference");
            tableMapping.ColumnMappings.Add("FigureOfEight_Findings", "FigureOfEight_Findings");
            tableMapping.ColumnMappings.Add("FigureOfEight_Significance", "FigureOfEight_Significance");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [PatientVisits] WHERE (([PatientVisitId] = @Original_PatientVisitId))" +
                "";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [PatientVisits] ([FirstName], [LastName], [Age], [CivilStatus], [Hand" +
                "edNess], [Occupation], [Address], [Religion], [DateOfConsultation], [PatientType" +
                "], [GeneralPhysician], [DateOfReferral], [Neurologist], [HPI], [PatientId], [Sex" +
                "], [CityTown], [Province], [DateOfAdmission], [Surgeon], [DateOfSurgery], [Ortho" +
                "pedic], [Cardiologist], [Opthalmologoist], [Pulmonologist], [OtherDoctor], [Refe" +
                "rringDoctor], [DateOfInitialEvaluation], [Diagnosis], [PMHx_Trauma], [PMHx_Arthr" +
                "itis], [PMHx_HPN], [PMHx_DM], [PMHx_Allergies], [PMHx_Surgery], [PMHx_SurgeryDat" +
                "e], [PMHx_CardiovascularDisease], [PMHx_PulmonaryCondition], [PMHx_NeurologyCond" +
                "ition], [PMHx_Cancer], [PMHx_Others], [FMHx_HypertensionF], [FMHx_HypertensionM]" +
                ", [FMHx_ArthritisF], [FMHx_ArthritisM], [FMHx_DiabetesMellitusF], [FMHx_Diabetes" +
                "MellitusM], [FMHx_CancerF], [FMHx_CancerM], [FMHx_AsthmaF], [FMHx_AsthmaM], [FMH" +
                "x_AllergiesF], [FMHx_AllergiesM], [FMHx_NeurologicConditionF], [FMHx_NeurologicC" +
                "onditionM], [FMHx_Others], [FMHx_OthersF], [FMHx_OthersM], [PSEHx_FinancialStatu" +
                "s], [PSEHx_PersonalityType], [PSEHx_LifeStyle], [PSEHx_EducationalAttainment], [" +
                "PSEHx_LivesWith], [PSEHx_NumberOfOffspring], [PSEHx_Relatives], [PSEHx_OtherLive" +
                "sWith], [PSEHx_Hobbies], [PSEHx_Sports], [PSEHx_OtherHobbies], [PSEHx_CigaretteS" +
                "moker], [PSEHx_AlcoholDrinker], [PSEHx_TypeOfHouse], [PSEHx_OtherTypeOfHouse], [" +
                "PMHx_TraumaText], [PMHx_DMText], [PMHx_SurgeryText], [PMHx_Hospitalization], [PM" +
                "Hx_HospitalizationText], [PMHx_HospitalizationDate], [PMHx_CardiovascularDisease" +
                "Text], [PMHx_PulmonaryConditionText], [PMHx_NeurologyConditionText], [PMHx_Arthr" +
                "itisText], [PMHx_AsthmaDate], [PMHx_Asthma], [RomFindings], [RomSignificance], [" +
                "MmtFindings], [MmtSignificance], [SensoryFindings], [SensorySignificance], [Cran" +
                "ialNerveAssmtFindings], [CranialNerveAssmtSignificance], [CoordinationAssmtFindi" +
                "ngs], [CoordinationAssmtSignificance], [MbmFindings], [MbmSignificance], [Subjec" +
                "tiveObjective_ChiefComplaint], [SubjectiveObjective_PtTranslation], [SubjectiveO" +
                "bjective_BPBefore], [SubjectiveObjective_BPAfter], [SubjectiveObjective_RRBefore" +
                "], [SubjectiveObjective_RRAfter], [SubjectiveObjective_PRBefore], [SubjectiveObj" +
                "ective_PRAfter], [SubjectiveObjective_TBefore], [SubjectiveObjective_TAfter], [S" +
                "ubjectiveObjective_Findings], [SubjectiveObjective_Significance], [OcularInspect" +
                "ion_Ambulation], [OcularInspection_TADWheelChair], [OcularInspection_TADCruches]" +
                ", [OcularInspection_TADCane], [OcularInspection_TADWalker], [OcularInspection_Al" +
                "ert], [OcularInspection_Coherent], [OcularInspection_Cooperative], [OcularInspec" +
                "tion_BodyType], [OcularInspection_Atrophy], [OcularInspection_Swelling], [Ocular" +
                "Inspection_Redness], [OcularInspection_Ecchymosis], [OcularInspection_Deformity]" +
                ", [OcularInspection_Wounds], [OcularInspection_Scar], [OcularInspection_Pressure" +
                "Sore], [OcularInspection_GaitDeviation], [OcularInspection_Incision], [OcularIns" +
                "pection_ShortnessOfBreathing], [OcularInspection_Others], [Palpation_BodyTempera" +
                "ture], [Palpation_MuscleTone], [Palpation_Edema], [Palpation_Tenderness], [Palpa" +
                "tion_Location], [Palpation_Deformity], [Palpation_MuscleGuarding], [Palpation_Mu" +
                "scleSpasm], [Palpation_Subluxation], [Palpation_Dislocation], [CognitiveAssmt_ST" +
                "Question], [CognitiveAssmt_STResponse], [CognitiveAssmt_LTQuestion], [CognitiveA" +
                "ssmt_LTResponse], [CognitiveAssmt_Findings], [CognitiveAssmt_Significance], [Bal" +
                "anceTolerance_SittingBalance], [BalanceTolerance_SittingTolerance], [BalanceTole" +
                "rance_StandingBalance], [BalanceTolerance_StandingTolerance], [BalanceTolerance_" +
                "Findings], [BalanceTolerance_Significance], [DeepTendonReflex_LeftHand], [DeepTe" +
                "ndonReflex_RightHand], [DeepTendonReflex_LeftElbow], [DeepTendonReflex_RightElbo" +
                "w], [DeepTendonReflex_LeftKnee], [DeepTendonReflex_RightKnee], [DeepTendonReflex" +
                "_LeftFoot], [DeepTendonReflex_RightFoot], [DeepTendonReflex_Findings], [DeepTend" +
                "onReflex_Significance], [PosturalAssmtFindings], [PosturalAssmtSignificance], [H" +
                "andGripStrength_T1RightHand], [HandGripStrength_T1LeftHand], [HandGripStrength_T" +
                "2RightHand], [HandGripStrength_T2LeftHand], [HandGripStrength_T3RightHand], [Han" +
                "dGripStrength_T3LeftHand], [HandGripStrength_AveRightHand], [HandGripStrength_Av" +
                "eLeftHand], [HandGripStrength_Findings], [HandGripStrength_Significance], [Volum" +
                "etricMeasurement_Right], [VolumetricMeasurement_Left], [VolumetricMeasurement_Di" +
                "fference], [VolumetricMeasurement_Findings], [VolumetricMeasurement_Significance" +
                "], [AnteriorView_HeadInMidline], [AnteriorView_HeadInMidlineFindings], [Anterior" +
                "View_ShouldersInLevel], [AnteriorView_ShouldersInLevelFindings], [AnteriorView_P" +
                "rotrusion], [AnteriorView_ProtrusionFindings], [AnteriorView_Lateralization], [A" +
                "nteriorView_LateralizationFindings], [AnteriorView_Depression], [AnteriorView_De" +
                "pressionFindings], [AnteriorView_WaistAngle], [AnteriorView_ArmPosition], [Anter" +
                "iorView_CarryingAngle], [AnteriorView_ASISLevel], [AnteriorView_PatellaeAlignmen" +
                "t], [AnteriorView_KneeAlignment], [AnteriorView_MalleoliLevel], [AnteriorView_Ar" +
                "chesOfFeet], [AnteriorView_FeetAngle], [AnteriorView_FeetAngleFindings], [Poster" +
                "iorView_HeadInMidline], [PosteriorView_HeadInMidlineFindings], [PosteriorView_Sh" +
                "ouldersInLevel], [PosteriorView_ShouldersInLevelFindings], [PosteriorView_SpineS" +
                "capularLevel], [PosteriorView_SpineScapularLevelFindings], [PosteriorView_SpineI" +
                "nMidline], [PosteriorView_SpineInMidlineFindings], [PosteriorView_WaistLevelAngl" +
                "e], [PosteriorView_ArmPosition], [PosteriorView_IliacCrestlevel], [PosteriorView" +
                "_PSISLevel], [PosteriorView_GlutealFoldsLevel], [PosteriorView_PoplitealFoassale" +
                "vel], [PosteriorView_HeelsPosition], [LateralView_EarlobeShoulderAlignment], [La" +
                "teralView_EarlobeShoulderAlignmentFindings], [LateralView_AcromioIliacAlignment]" +
                ", [LateralView_AcromioIliacAlignmentFindings], [LateralView_SpinalSegments], [La" +
                "teralView_ShoulderAlignment], [LateralView_PelvicAngle], [LateralView_KneeAlignm" +
                "ent], [LateralView_PlumblineAlignment], [LateralView_PlumblineAlignmentFindings]" +
                ", [LateralView_ArchesOfFeet], [GaitAssessment_Asssessment], [GaitAssessment_RIni" +
                "tialLoading], [GaitAssessment_LInitialLoading], [GaitAssessment_RLoadingResponse" +
                "], [GaitAssessment_LLoadingResponse], [GaitAssessment_RMidStance], [GaitAssessme" +
                "nt_LMidStance], [GaitAssessment_RTerminalStance], [GaitAssessment_LTerminalStanc" +
                "e], [GaitAssessment_RPreSwing], [GaitAssessment_LPreSwing], [GaitAssessment_RIni" +
                "tialSwing], [GaitAssessment_LInitialPreSwing], [GaitAssessment_RMidSwing], [Gait" +
                "Assessment_LMidPreSwing], [GaitAssessment_RTerminalSwing], [GaitAssessment_LTerm" +
                "inalSwing], [GaitAssessment_Findings], [GaitAssessment_Significance], [Functiona" +
                "lAnalysis_AdlsAxWriting], [FunctionalAnalysis_AdlsAxCleaningHouse], [FunctionalA" +
                "nalysis_AdlsAxCooking], [FunctionalAnalysis_AdlsAxEating], [FunctionalAnalysis_A" +
                "dlsAxTurningDoorKnob], [FunctionalAnalysis_AdlsAxUsingKeys], [FunctionalAnalysis" +
                "_AdlsAxOpeningBottle], [FunctionalAnalysis_AdlsAxBrushingTeeth], [FunctionalAnal" +
                "ysis_AdlsAxTyingShoeLace], [FunctionalAnalysis_AdlsAxWashingDishes], [Functional" +
                "Analysis_AdlsAxSweepingFloor], [FunctionalAnalysis_AdlsAxOthers], [Assessment_Di" +
                "agnosis], [Assessment_PTImpression], [Assessment_ProblemList], [Assessment_LongT" +
                "ermGoals], [Assessment_ShortTermGoals], [Plan_PTManagement], [Plan_HomeInstructi" +
                "on], [FunctionalAnalysis_AdlsAxOthersText], [CardioPulmonaryAssmt_BodyType], [Ca" +
                "rdioPulmonaryAssmt_ChestShape], [CardioPulmonaryAssmt_ChestShapeOthers], [Pulmon" +
                "aryAssmt_SpmMucoid], [PulmonaryAssmt_SpmFrothy], [PulmonaryAssmt_SpmMucopurulent" +
                "], [PulmonaryAssmt_SpmHemoptysis], [PulmonaryAssmt_SpmPurulent], [PulmonaryAssmt" +
                "_SpmOthers], [PulmonaryAssmt_SpmOthersText], [PulmonaryAssmt_MdShift], [Pulmonar" +
                "yAssmt_MdShiftFindings], [PulmonaryAssmt_MdShiftSignificance], [PulmonaryAssmt_F" +
                "remitus], [PulmonaryAssmt_FremitusFindings], [PulmonaryAssmt_FremitusSignificanc" +
                "e], [PulmonaryAssmt_ChstExpULE], [PulmonaryAssmt_ChstExpMLE], [PulmonaryAssmt_Ch" +
                "stExpLLE], [PulmonaryAssmt_ChstExpSig], [PulmonaryAssmt_Percussion], [PulmonaryA" +
                "ssmt_PercussionOthers], [PulmonaryAssmt_SixMinWalk], [PulmonaryAssmt_SixMinWalkF" +
                "indings], [PulmonaryAssmt_StairClimbing], [PulmonaryAssmt_StairClimbingFindings]" +
                ", [PulmonaryAssmt_ShuttleTest], [PulmonaryAssmt_ShuttleTestFindings], [Pulmonary" +
                "Assmt_OtherTest], [PulmonaryAssmt_OtherTestFindings], [CMAxilla_MaxInsT1], [CMAx" +
                "illa_MaxInsT2], [CMAxilla_MaxInsT3], [CMAxilla_MaxInsAve], [CMAxilla_MaxExpT1], " +
                "[CMAxilla_MaxExpT2], [CMAxilla_MaxExpT3], [CMAxilla_MaxExpAve], [CMAxilla_DiffT1" +
                "], [CMAxilla_DiffT2], [CMAxilla_DiffT3], [CMAxilla_DiffAve], [CMXiphoid_MaxInsT1" +
                "], [CMXiphoid_MaxInsT2], [CMXiphoid_MaxInsT3], [CMXiphoid_MaxInsAve], [CMXiphoid" +
                "_MaxExpT1], [CMXiphoid_MaxExpT2], [CMXiphoid_MaxExpT3], [CMXiphoid_MaxExpAve], [" +
                "CMXiphoid_DiffT1], [CMXiphoid_DiffT2], [CMXiphoid_DiffT3], [CMXiphoid_DiffAve], " +
                "[CMLowerCostal_MaxInsT1], [CMLowerCostal_MaxInsT2], [CMLowerCostal_MaxInsT3], [C" +
                "MLowerCostal_MaxInsAve], [CMLowerCostal_MaxExpT1], [CMLowerCostal_MaxExpT2], [CM" +
                "LowerCostal_MaxExpT3], [CMLowerCostal_MaxExpAve], [CMLowerCostal_DiffT1], [CMLow" +
                "erCostal_DiffT2], [CMLowerCostal_DiffT3], [CMLowerCostal_DiffAve], [Auscultation" +
                "_Trachael], [Auscultation_Bronchial], [Auscultation_Bronchiovesicular], [Auscult" +
                "ation_Vesicular], [Auscultation_Crackles], [Auscultation_DiminishedBreathSounds]" +
                ", [Auscultation_HighPitchedBronchialBreathing], [Auscultation_LowPitchedBronchia" +
                "lBreathing], [Auscultation_PleuralRub], [Auscultation_Rhonchi], [Auscultation_St" +
                "ridor], [Auscultation_Wheeze], [Auscultation_Others], [Auscultation_OthersText]," +
                " [FigureOfEight_Right], [FigureOfEight_Left], [FigureOfEight_Difference], [Figur" +
                "eOfEight_Findings], [FigureOfEight_Significance]) VALUES (@FirstName, @LastName," +
                " @Age, @CivilStatus, @HandedNess, @Occupation, @Address, @Religion, @DateOfConsu" +
                "ltation, @PatientType, @GeneralPhysician, @DateOfReferral, @Neurologist, @HPI, @" +
                "PatientId, @Sex, @CityTown, @Province, @DateOfAdmission, @Surgeon, @DateOfSurger" +
                "y, @Orthopedic, @Cardiologist, @Opthalmologoist, @Pulmonologist, @OtherDoctor, @" +
                "ReferringDoctor, @DateOfInitialEvaluation, @Diagnosis, @PMHx_Trauma, @PMHx_Arthr" +
                "itis, @PMHx_HPN, @PMHx_DM, @PMHx_Allergies, @PMHx_Surgery, @PMHx_SurgeryDate, @P" +
                "MHx_CardiovascularDisease, @PMHx_PulmonaryCondition, @PMHx_NeurologyCondition, @" +
                "PMHx_Cancer, @PMHx_Others, @FMHx_HypertensionF, @FMHx_HypertensionM, @FMHx_Arthr" +
                "itisF, @FMHx_ArthritisM, @FMHx_DiabetesMellitusF, @FMHx_DiabetesMellitusM, @FMHx" +
                "_CancerF, @FMHx_CancerM, @FMHx_AsthmaF, @FMHx_AsthmaM, @FMHx_AllergiesF, @FMHx_A" +
                "llergiesM, @FMHx_NeurologicConditionF, @FMHx_NeurologicConditionM, @FMHx_Others," +
                " @FMHx_OthersF, @FMHx_OthersM, @PSEHx_FinancialStatus, @PSEHx_PersonalityType, @" +
                "PSEHx_LifeStyle, @PSEHx_EducationalAttainment, @PSEHx_LivesWith, @PSEHx_NumberOf" +
                "Offspring, @PSEHx_Relatives, @PSEHx_OtherLivesWith, @PSEHx_Hobbies, @PSEHx_Sport" +
                "s, @PSEHx_OtherHobbies, @PSEHx_CigaretteSmoker, @PSEHx_AlcoholDrinker, @PSEHx_Ty" +
                "peOfHouse, @PSEHx_OtherTypeOfHouse, @PMHx_TraumaText, @PMHx_DMText, @PMHx_Surger" +
                "yText, @PMHx_Hospitalization, @PMHx_HospitalizationText, @PMHx_HospitalizationDa" +
                "te, @PMHx_CardiovascularDiseaseText, @PMHx_PulmonaryConditionText, @PMHx_Neurolo" +
                "gyConditionText, @PMHx_ArthritisText, @PMHx_AsthmaDate, @PMHx_Asthma, @RomFindin" +
                "gs, @RomSignificance, @MmtFindings, @MmtSignificance, @SensoryFindings, @Sensory" +
                "Significance, @CranialNerveAssmtFindings, @CranialNerveAssmtSignificance, @Coord" +
                "inationAssmtFindings, @CoordinationAssmtSignificance, @MbmFindings, @MbmSignific" +
                "ance, @SubjectiveObjective_ChiefComplaint, @SubjectiveObjective_PtTranslation, @" +
                "SubjectiveObjective_BPBefore, @SubjectiveObjective_BPAfter, @SubjectiveObjective" +
                "_RRBefore, @SubjectiveObjective_RRAfter, @SubjectiveObjective_PRBefore, @Subject" +
                "iveObjective_PRAfter, @SubjectiveObjective_TBefore, @SubjectiveObjective_TAfter," +
                " @SubjectiveObjective_Findings, @SubjectiveObjective_Significance, @OcularInspec" +
                "tion_Ambulation, @OcularInspection_TADWheelChair, @OcularInspection_TADCruches, " +
                "@OcularInspection_TADCane, @OcularInspection_TADWalker, @OcularInspection_Alert," +
                " @OcularInspection_Coherent, @OcularInspection_Cooperative, @OcularInspection_Bo" +
                "dyType, @OcularInspection_Atrophy, @OcularInspection_Swelling, @OcularInspection" +
                "_Redness, @OcularInspection_Ecchymosis, @OcularInspection_Deformity, @OcularInsp" +
                "ection_Wounds, @OcularInspection_Scar, @OcularInspection_PressureSore, @OcularIn" +
                "spection_GaitDeviation, @OcularInspection_Incision, @OcularInspection_ShortnessO" +
                "fBreathing, @OcularInspection_Others, @Palpation_BodyTemperature, @Palpation_Mus" +
                "cleTone, @Palpation_Edema, @Palpation_Tenderness, @Palpation_Location, @Palpatio" +
                "n_Deformity, @Palpation_MuscleGuarding, @Palpation_MuscleSpasm, @Palpation_Sublu" +
                "xation, @Palpation_Dislocation, @CognitiveAssmt_STQuestion, @CognitiveAssmt_STRe" +
                "sponse, @CognitiveAssmt_LTQuestion, @CognitiveAssmt_LTResponse, @CognitiveAssmt_" +
                "Findings, @CognitiveAssmt_Significance, @BalanceTolerance_SittingBalance, @Balan" +
                "ceTolerance_SittingTolerance, @BalanceTolerance_StandingBalance, @BalanceToleran" +
                "ce_StandingTolerance, @BalanceTolerance_Findings, @BalanceTolerance_Significance" +
                ", @DeepTendonReflex_LeftHand, @DeepTendonReflex_RightHand, @DeepTendonReflex_Lef" +
                "tElbow, @DeepTendonReflex_RightElbow, @DeepTendonReflex_LeftKnee, @DeepTendonRef" +
                "lex_RightKnee, @DeepTendonReflex_LeftFoot, @DeepTendonReflex_RightFoot, @DeepTen" +
                "donReflex_Findings, @DeepTendonReflex_Significance, @PosturalAssmtFindings, @Pos" +
                "turalAssmtSignificance, @HandGripStrength_T1RightHand, @HandGripStrength_T1LeftH" +
                "and, @HandGripStrength_T2RightHand, @HandGripStrength_T2LeftHand, @HandGripStren" +
                "gth_T3RightHand, @HandGripStrength_T3LeftHand, @HandGripStrength_AveRightHand, @" +
                "HandGripStrength_AveLeftHand, @HandGripStrength_Findings, @HandGripStrength_Sign" +
                "ificance, @VolumetricMeasurement_Right, @VolumetricMeasurement_Left, @Volumetric" +
                "Measurement_Difference, @VolumetricMeasurement_Findings, @VolumetricMeasurement_" +
                "Significance, @AnteriorView_HeadInMidline, @AnteriorView_HeadInMidlineFindings, " +
                "@AnteriorView_ShouldersInLevel, @AnteriorView_ShouldersInLevelFindings, @Anterio" +
                "rView_Protrusion, @AnteriorView_ProtrusionFindings, @AnteriorView_Lateralization" +
                ", @AnteriorView_LateralizationFindings, @AnteriorView_Depression, @AnteriorView_" +
                "DepressionFindings, @AnteriorView_WaistAngle, @AnteriorView_ArmPosition, @Anteri" +
                "orView_CarryingAngle, @AnteriorView_ASISLevel, @AnteriorView_PatellaeAlignment, " +
                "@AnteriorView_KneeAlignment, @AnteriorView_MalleoliLevel, @AnteriorView_ArchesOf" +
                "Feet, @AnteriorView_FeetAngle, @AnteriorView_FeetAngleFindings, @PosteriorView_H" +
                "eadInMidline, @PosteriorView_HeadInMidlineFindings, @PosteriorView_ShouldersInLe" +
                "vel, @PosteriorView_ShouldersInLevelFindings, @PosteriorView_SpineScapularLevel," +
                " @PosteriorView_SpineScapularLevelFindings, @PosteriorView_SpineInMidline, @Post" +
                "eriorView_SpineInMidlineFindings, @PosteriorView_WaistLevelAngle, @PosteriorView" +
                "_ArmPosition, @PosteriorView_IliacCrestlevel, @PosteriorView_PSISLevel, @Posteri" +
                "orView_GlutealFoldsLevel, @PosteriorView_PoplitealFoassalevel, @PosteriorView_He" +
                "elsPosition, @LateralView_EarlobeShoulderAlignment, @LateralView_EarlobeShoulder" +
                "AlignmentFindings, @LateralView_AcromioIliacAlignment, @LateralView_AcromioIliac" +
                "AlignmentFindings, @LateralView_SpinalSegments, @LateralView_ShoulderAlignment, " +
                "@LateralView_PelvicAngle, @LateralView_KneeAlignment, @LateralView_PlumblineAlig" +
                "nment, @LateralView_PlumblineAlignmentFindings, @LateralView_ArchesOfFeet, @Gait" +
                "Assessment_Asssessment, @GaitAssessment_RInitialLoading, @GaitAssessment_LInitia" +
                "lLoading, @GaitAssessment_RLoadingResponse, @GaitAssessment_LLoadingResponse, @G" +
                "aitAssessment_RMidStance, @GaitAssessment_LMidStance, @GaitAssessment_RTerminalS" +
                "tance, @GaitAssessment_LTerminalStance, @GaitAssessment_RPreSwing, @GaitAssessme" +
                "nt_LPreSwing, @GaitAssessment_RInitialSwing, @GaitAssessment_LInitialPreSwing, @" +
                "GaitAssessment_RMidSwing, @GaitAssessment_LMidPreSwing, @GaitAssessment_RTermina" +
                "lSwing, @GaitAssessment_LTerminalSwing, @GaitAssessment_Findings, @GaitAssessmen" +
                "t_Significance, @FunctionalAnalysis_AdlsAxWriting, @FunctionalAnalysis_AdlsAxCle" +
                "aningHouse, @FunctionalAnalysis_AdlsAxCooking, @FunctionalAnalysis_AdlsAxEating," +
                " @FunctionalAnalysis_AdlsAxTurningDoorKnob, @FunctionalAnalysis_AdlsAxUsingKeys," +
                " @FunctionalAnalysis_AdlsAxOpeningBottle, @FunctionalAnalysis_AdlsAxBrushingTeet" +
                "h, @FunctionalAnalysis_AdlsAxTyingShoeLace, @FunctionalAnalysis_AdlsAxWashingDis" +
                "hes, @FunctionalAnalysis_AdlsAxSweepingFloor, @FunctionalAnalysis_AdlsAxOthers, " +
                "@Assessment_Diagnosis, @Assessment_PTImpression, @Assessment_ProblemList, @Asses" +
                "sment_LongTermGoals, @Assessment_ShortTermGoals, @Plan_PTManagement, @Plan_HomeI" +
                "nstruction, @FunctionalAnalysis_AdlsAxOthersText, @CardioPulmonaryAssmt_BodyType" +
                ", @CardioPulmonaryAssmt_ChestShape, @CardioPulmonaryAssmt_ChestShapeOthers, @Pul" +
                "monaryAssmt_SpmMucoid, @PulmonaryAssmt_SpmFrothy, @PulmonaryAssmt_SpmMucopurulen" +
                "t, @PulmonaryAssmt_SpmHemoptysis, @PulmonaryAssmt_SpmPurulent, @PulmonaryAssmt_S" +
                "pmOthers, @PulmonaryAssmt_SpmOthersText, @PulmonaryAssmt_MdShift, @PulmonaryAssm" +
                "t_MdShiftFindings, @PulmonaryAssmt_MdShiftSignificance, @PulmonaryAssmt_Fremitus" +
                ", @PulmonaryAssmt_FremitusFindings, @PulmonaryAssmt_FremitusSignificance, @Pulmo" +
                "naryAssmt_ChstExpULE, @PulmonaryAssmt_ChstExpMLE, @PulmonaryAssmt_ChstExpLLE, @P" +
                "ulmonaryAssmt_ChstExpSig, @PulmonaryAssmt_Percussion, @PulmonaryAssmt_Percussion" +
                "Others, @PulmonaryAssmt_SixMinWalk, @PulmonaryAssmt_SixMinWalkFindings, @Pulmona" +
                "ryAssmt_StairClimbing, @PulmonaryAssmt_StairClimbingFindings, @PulmonaryAssmt_Sh" +
                "uttleTest, @PulmonaryAssmt_ShuttleTestFindings, @PulmonaryAssmt_OtherTest, @Pulm" +
                "onaryAssmt_OtherTestFindings, @CMAxilla_MaxInsT1, @CMAxilla_MaxInsT2, @CMAxilla_" +
                "MaxInsT3, @CMAxilla_MaxInsAve, @CMAxilla_MaxExpT1, @CMAxilla_MaxExpT2, @CMAxilla" +
                "_MaxExpT3, @CMAxilla_MaxExpAve, @CMAxilla_DiffT1, @CMAxilla_DiffT2, @CMAxilla_Di" +
                "ffT3, @CMAxilla_DiffAve, @CMXiphoid_MaxInsT1, @CMXiphoid_MaxInsT2, @CMXiphoid_Ma" +
                "xInsT3, @CMXiphoid_MaxInsAve, @CMXiphoid_MaxExpT1, @CMXiphoid_MaxExpT2, @CMXipho" +
                "id_MaxExpT3, @CMXiphoid_MaxExpAve, @CMXiphoid_DiffT1, @CMXiphoid_DiffT2, @CMXiph" +
                "oid_DiffT3, @CMXiphoid_DiffAve, @CMLowerCostal_MaxInsT1, @CMLowerCostal_MaxInsT2" +
                ", @CMLowerCostal_MaxInsT3, @CMLowerCostal_MaxInsAve, @CMLowerCostal_MaxExpT1, @C" +
                "MLowerCostal_MaxExpT2, @CMLowerCostal_MaxExpT3, @CMLowerCostal_MaxExpAve, @CMLow" +
                "erCostal_DiffT1, @CMLowerCostal_DiffT2, @CMLowerCostal_DiffT3, @CMLowerCostal_Di" +
                "ffAve, @Auscultation_Trachael, @Auscultation_Bronchial, @Auscultation_Bronchiove" +
                "sicular, @Auscultation_Vesicular, @Auscultation_Crackles, @Auscultation_Diminish" +
                "edBreathSounds, @Auscultation_HighPitchedBronchialBreathing, @Auscultation_LowPi" +
                "tchedBronchialBreathing, @Auscultation_PleuralRub, @Auscultation_Rhonchi, @Auscu" +
                "ltation_Stridor, @Auscultation_Wheeze, @Auscultation_Others, @Auscultation_Other" +
                "sText, @FigureOfEight_Right, @FigureOfEight_Left, @FigureOfEight_Difference, @Fi" +
                "gureOfEight_Findings, @FigureOfEight_Significance)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CivilStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CivilStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandedNess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandedNess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Occupation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Occupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Religion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Religion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfConsultation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfConsultation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralPhysician", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralPhysician", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfReferral", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfReferral", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Neurologist", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Neurologist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HPI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CityTown", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CityTown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Province", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Province", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfAdmission", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfAdmission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surgeon", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surgeon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfSurgery", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfSurgery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orthopedic", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orthopedic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cardiologist", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cardiologist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opthalmologoist", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opthalmologoist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pulmonologist", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pulmonologist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferringDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferringDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfInitialEvaluation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfInitialEvaluation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diagnosis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diagnosis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Trauma", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Trauma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Arthritis", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Arthritis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_HPN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_HPN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_DM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_DM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Allergies", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Allergies", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Surgery", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Surgery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_SurgeryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_SurgeryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_CardiovascularDisease", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_CardiovascularDisease", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_PulmonaryCondition", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_PulmonaryCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_NeurologyCondition", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_NeurologyCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Cancer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Cancer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Others", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_HypertensionF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_HypertensionF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_HypertensionM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_HypertensionM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_ArthritisF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_ArthritisF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_ArthritisM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_ArthritisM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_DiabetesMellitusF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_DiabetesMellitusF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_DiabetesMellitusM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_DiabetesMellitusM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_CancerF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_CancerF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_CancerM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_CancerM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_AsthmaF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_AsthmaF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_AsthmaM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_AsthmaM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_AllergiesF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_AllergiesF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_AllergiesM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_AllergiesM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_NeurologicConditionF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_NeurologicConditionF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_NeurologicConditionM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_NeurologicConditionM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_Others", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_OthersF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_OthersF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_OthersM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_OthersM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_FinancialStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_FinancialStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_PersonalityType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_PersonalityType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_LifeStyle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_LifeStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_EducationalAttainment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_EducationalAttainment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_LivesWith", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_LivesWith", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_NumberOfOffspring", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_NumberOfOffspring", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_Relatives", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_Relatives", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_OtherLivesWith", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_OtherLivesWith", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_Hobbies", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_Hobbies", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_Sports", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_Sports", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_OtherHobbies", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_OtherHobbies", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_CigaretteSmoker", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_CigaretteSmoker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_AlcoholDrinker", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_AlcoholDrinker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_TypeOfHouse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_TypeOfHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_OtherTypeOfHouse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_OtherTypeOfHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_TraumaText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_TraumaText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_DMText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_DMText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_SurgeryText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_SurgeryText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Hospitalization", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Hospitalization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_HospitalizationText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_HospitalizationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_HospitalizationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_HospitalizationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_CardiovascularDiseaseText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_CardiovascularDiseaseText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_PulmonaryConditionText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_PulmonaryConditionText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_NeurologyConditionText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_NeurologyConditionText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_ArthritisText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_ArthritisText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_AsthmaDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_AsthmaDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Asthma", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Asthma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RomFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RomFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RomSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RomSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MmtFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MmtFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MmtSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MmtSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SensoryFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SensoryFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SensorySignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SensorySignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CranialNerveAssmtFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CranialNerveAssmtFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CranialNerveAssmtSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CranialNerveAssmtSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoordinationAssmtFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoordinationAssmtFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoordinationAssmtSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoordinationAssmtSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MbmFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MbmFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MbmSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MbmSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_ChiefComplaint", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_ChiefComplaint", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_PtTranslation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_PtTranslation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_BPBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_BPBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_BPAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_BPAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_RRBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_RRBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_RRAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_RRAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_PRBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_PRBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_PRAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_PRAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_TBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_TBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_TAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_TAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Ambulation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Ambulation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_TADWheelChair", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_TADWheelChair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_TADCruches", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_TADCruches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_TADCane", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_TADCane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_TADWalker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_TADWalker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Alert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Alert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Coherent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Coherent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Cooperative", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Cooperative", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_BodyType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_BodyType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Atrophy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Atrophy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Swelling", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Swelling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Redness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Redness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Ecchymosis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Ecchymosis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Deformity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Deformity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Wounds", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Wounds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Scar", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Scar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_PressureSore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_PressureSore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_GaitDeviation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_GaitDeviation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Incision", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Incision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_ShortnessOfBreathing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_ShortnessOfBreathing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Others", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_BodyTemperature", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_BodyTemperature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_MuscleTone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_MuscleTone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Edema", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Edema", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Tenderness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Tenderness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Location", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Location", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Deformity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Deformity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_MuscleGuarding", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_MuscleGuarding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_MuscleSpasm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_MuscleSpasm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Subluxation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Subluxation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Dislocation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Dislocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_STQuestion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_STQuestion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_STResponse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_STResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_LTQuestion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_LTQuestion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_LTResponse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_LTResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_SittingBalance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_SittingBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_SittingTolerance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_SittingTolerance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_StandingBalance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_StandingBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_StandingTolerance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_StandingTolerance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_LeftHand", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_LeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_RightHand", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_RightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_LeftElbow", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_LeftElbow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_RightElbow", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_RightElbow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_LeftKnee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_LeftKnee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_RightKnee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_RightKnee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_LeftFoot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_LeftFoot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_RightFoot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_RightFoot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosturalAssmtFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosturalAssmtFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosturalAssmtSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosturalAssmtSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T1RightHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T1RightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T1LeftHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T1LeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T2RightHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T2RightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T2LeftHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T2LeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T3RightHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T3RightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T3LeftHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T3LeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_AveRightHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_AveRightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_AveLeftHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_AveLeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandGripStrength_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandGripStrength_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Right", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VolumetricMeasurement_Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Left", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VolumetricMeasurement_Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Difference", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VolumetricMeasurement_Difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolumetricMeasurement_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolumetricMeasurement_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_HeadInMidline", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_HeadInMidline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_HeadInMidlineFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_HeadInMidlineFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ShouldersInLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ShouldersInLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ShouldersInLevelFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ShouldersInLevelFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_Protrusion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_Protrusion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ProtrusionFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ProtrusionFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_Lateralization", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_Lateralization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_LateralizationFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_LateralizationFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_Depression", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_Depression", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_DepressionFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_DepressionFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_WaistAngle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AnteriorView_WaistAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ArmPosition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ArmPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_CarryingAngle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AnteriorView_CarryingAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ASISLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ASISLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_PatellaeAlignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_PatellaeAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_KneeAlignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_KneeAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_MalleoliLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_MalleoliLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ArchesOfFeet", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ArchesOfFeet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_FeetAngle", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_FeetAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_FeetAngleFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_FeetAngleFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_HeadInMidline", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_HeadInMidline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_HeadInMidlineFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_HeadInMidlineFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_ShouldersInLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_ShouldersInLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_ShouldersInLevelFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_ShouldersInLevelFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_SpineScapularLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_SpineScapularLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_SpineScapularLevelFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_SpineScapularLevelFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_SpineInMidline", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_SpineInMidline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_SpineInMidlineFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_SpineInMidlineFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_WaistLevelAngle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PosteriorView_WaistLevelAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_ArmPosition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_ArmPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_IliacCrestlevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_IliacCrestlevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_PSISLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_PSISLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_GlutealFoldsLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_GlutealFoldsLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_PoplitealFoassalevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_PoplitealFoassalevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_HeelsPosition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_HeelsPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_EarlobeShoulderAlignment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_EarlobeShoulderAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_EarlobeShoulderAlignmentFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_EarlobeShoulderAlignmentFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_AcromioIliacAlignment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_AcromioIliacAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_AcromioIliacAlignmentFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_AcromioIliacAlignmentFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_SpinalSegments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_SpinalSegments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_ShoulderAlignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_ShoulderAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_PelvicAngle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LateralView_PelvicAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_KneeAlignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_KneeAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_PlumblineAlignment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_PlumblineAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_PlumblineAlignmentFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_PlumblineAlignmentFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_ArchesOfFeet", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_ArchesOfFeet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_Asssessment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_Asssessment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RInitialLoading", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RInitialLoading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LInitialLoading", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LInitialLoading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RLoadingResponse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RLoadingResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LLoadingResponse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LLoadingResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RMidStance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RMidStance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LMidStance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LMidStance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RTerminalStance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RTerminalStance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LTerminalStance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LTerminalStance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RPreSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RPreSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LPreSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LPreSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RInitialSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RInitialSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LInitialPreSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LInitialPreSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RMidSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RMidSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LMidPreSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LMidPreSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RTerminalSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RTerminalSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LTerminalSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LTerminalSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxWriting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxWriting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxCleaningHouse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxCleaningHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxCooking", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxCooking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxEating", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxEating", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxTurningDoorKnob", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxTurningDoorKnob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxUsingKeys", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxUsingKeys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxOpeningBottle", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxOpeningBottle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxBrushingTeeth", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxBrushingTeeth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxTyingShoeLace", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxTyingShoeLace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxWashingDishes", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxWashingDishes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxSweepingFloor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxSweepingFloor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxOthers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxOthers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_Diagnosis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_Diagnosis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_PTImpression", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_PTImpression", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_ProblemList", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_ProblemList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_LongTermGoals", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_LongTermGoals", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_ShortTermGoals", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_ShortTermGoals", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plan_PTManagement", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plan_PTManagement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plan_HomeInstruction", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plan_HomeInstruction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxOthersText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxOthersText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardioPulmonaryAssmt_BodyType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardioPulmonaryAssmt_BodyType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardioPulmonaryAssmt_ChestShape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardioPulmonaryAssmt_ChestShape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardioPulmonaryAssmt_ChestShapeOthers", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardioPulmonaryAssmt_ChestShapeOthers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmMucoid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmMucoid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmFrothy", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmFrothy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmMucopurulent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmMucopurulent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmHemoptysis", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmHemoptysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmPurulent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmPurulent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmOthers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmOthers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmOthersText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmOthersText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_MdShift", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_MdShift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_MdShiftFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_MdShiftFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_MdShiftSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_MdShiftSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_Fremitus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_Fremitus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_FremitusFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_FremitusFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_FremitusSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_FremitusSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ChstExpULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ChstExpULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ChstExpMLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ChstExpMLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ChstExpLLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ChstExpLLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ChstExpSig", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ChstExpSig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_Percussion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_Percussion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_PercussionOthers", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_PercussionOthers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SixMinWalk", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SixMinWalk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SixMinWalkFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SixMinWalkFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_StairClimbing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_StairClimbing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_StairClimbingFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_StairClimbingFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ShuttleTest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ShuttleTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ShuttleTestFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ShuttleTestFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_OtherTest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_OtherTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_OtherTestFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_OtherTestFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxInsT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxInsT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxInsT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxInsT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxInsT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxInsT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxInsAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxInsAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxExpT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxExpT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxExpT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxExpT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxExpT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxExpT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxExpAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxExpAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_DiffT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_DiffT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_DiffT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_DiffT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_DiffT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_DiffT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_DiffAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_DiffAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxInsT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxInsT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxInsT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxInsT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxInsT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxInsT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxInsAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxInsAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxExpT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxExpT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxExpT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxExpT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxExpT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxExpT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxExpAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxExpAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_DiffT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_DiffT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_DiffT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_DiffT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_DiffT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_DiffT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_DiffAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_DiffAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxInsT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxInsT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxInsT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxInsT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxInsT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxInsT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxInsAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxInsAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxExpT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxExpT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxExpT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxExpT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxExpT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxExpT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxExpAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxExpAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_DiffT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_DiffT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_DiffT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_DiffT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_DiffT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_DiffT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_DiffAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_DiffAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Trachael", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Trachael", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Bronchial", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Bronchial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Bronchiovesicular", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Bronchiovesicular", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Vesicular", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Vesicular", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Crackles", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Crackles", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_DiminishedBreathSounds", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_DiminishedBreathSounds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_HighPitchedBronchialBreathing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_HighPitchedBronchialBreathing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_LowPitchedBronchialBreathing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_LowPitchedBronchialBreathing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_PleuralRub", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_PleuralRub", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Rhonchi", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Rhonchi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Stridor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Stridor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Wheeze", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Wheeze", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Others", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_OthersText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_OthersText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Right", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FigureOfEight_Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Left", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FigureOfEight_Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Difference", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FigureOfEight_Difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FigureOfEight_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FigureOfEight_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [PatientVisits] SET [FirstName] = @FirstName, [LastName] = @LastName, [Age" +
                "] = @Age, [CivilStatus] = @CivilStatus, [HandedNess] = @HandedNess, [Occupation]" +
                " = @Occupation, [Address] = @Address, [Religion] = @Religion, [DateOfConsultatio" +
                "n] = @DateOfConsultation, [PatientType] = @PatientType, [GeneralPhysician] = @Ge" +
                "neralPhysician, [DateOfReferral] = @DateOfReferral, [Neurologist] = @Neurologist" +
                ", [HPI] = @HPI, [PatientId] = @PatientId, [Sex] = @Sex, [CityTown] = @CityTown, " +
                "[Province] = @Province, [DateOfAdmission] = @DateOfAdmission, [Surgeon] = @Surge" +
                "on, [DateOfSurgery] = @DateOfSurgery, [Orthopedic] = @Orthopedic, [Cardiologist]" +
                " = @Cardiologist, [Opthalmologoist] = @Opthalmologoist, [Pulmonologist] = @Pulmo" +
                "nologist, [OtherDoctor] = @OtherDoctor, [ReferringDoctor] = @ReferringDoctor, [D" +
                "ateOfInitialEvaluation] = @DateOfInitialEvaluation, [Diagnosis] = @Diagnosis, [P" +
                "MHx_Trauma] = @PMHx_Trauma, [PMHx_Arthritis] = @PMHx_Arthritis, [PMHx_HPN] = @PM" +
                "Hx_HPN, [PMHx_DM] = @PMHx_DM, [PMHx_Allergies] = @PMHx_Allergies, [PMHx_Surgery]" +
                " = @PMHx_Surgery, [PMHx_SurgeryDate] = @PMHx_SurgeryDate, [PMHx_CardiovascularDi" +
                "sease] = @PMHx_CardiovascularDisease, [PMHx_PulmonaryCondition] = @PMHx_Pulmonar" +
                "yCondition, [PMHx_NeurologyCondition] = @PMHx_NeurologyCondition, [PMHx_Cancer] " +
                "= @PMHx_Cancer, [PMHx_Others] = @PMHx_Others, [FMHx_HypertensionF] = @FMHx_Hyper" +
                "tensionF, [FMHx_HypertensionM] = @FMHx_HypertensionM, [FMHx_ArthritisF] = @FMHx_" +
                "ArthritisF, [FMHx_ArthritisM] = @FMHx_ArthritisM, [FMHx_DiabetesMellitusF] = @FM" +
                "Hx_DiabetesMellitusF, [FMHx_DiabetesMellitusM] = @FMHx_DiabetesMellitusM, [FMHx_" +
                "CancerF] = @FMHx_CancerF, [FMHx_CancerM] = @FMHx_CancerM, [FMHx_AsthmaF] = @FMHx" +
                "_AsthmaF, [FMHx_AsthmaM] = @FMHx_AsthmaM, [FMHx_AllergiesF] = @FMHx_AllergiesF, " +
                "[FMHx_AllergiesM] = @FMHx_AllergiesM, [FMHx_NeurologicConditionF] = @FMHx_Neurol" +
                "ogicConditionF, [FMHx_NeurologicConditionM] = @FMHx_NeurologicConditionM, [FMHx_" +
                "Others] = @FMHx_Others, [FMHx_OthersF] = @FMHx_OthersF, [FMHx_OthersM] = @FMHx_O" +
                "thersM, [PSEHx_FinancialStatus] = @PSEHx_FinancialStatus, [PSEHx_PersonalityType" +
                "] = @PSEHx_PersonalityType, [PSEHx_LifeStyle] = @PSEHx_LifeStyle, [PSEHx_Educati" +
                "onalAttainment] = @PSEHx_EducationalAttainment, [PSEHx_LivesWith] = @PSEHx_Lives" +
                "With, [PSEHx_NumberOfOffspring] = @PSEHx_NumberOfOffspring, [PSEHx_Relatives] = " +
                "@PSEHx_Relatives, [PSEHx_OtherLivesWith] = @PSEHx_OtherLivesWith, [PSEHx_Hobbies" +
                "] = @PSEHx_Hobbies, [PSEHx_Sports] = @PSEHx_Sports, [PSEHx_OtherHobbies] = @PSEH" +
                "x_OtherHobbies, [PSEHx_CigaretteSmoker] = @PSEHx_CigaretteSmoker, [PSEHx_Alcohol" +
                "Drinker] = @PSEHx_AlcoholDrinker, [PSEHx_TypeOfHouse] = @PSEHx_TypeOfHouse, [PSE" +
                "Hx_OtherTypeOfHouse] = @PSEHx_OtherTypeOfHouse, [PMHx_TraumaText] = @PMHx_Trauma" +
                "Text, [PMHx_DMText] = @PMHx_DMText, [PMHx_SurgeryText] = @PMHx_SurgeryText, [PMH" +
                "x_Hospitalization] = @PMHx_Hospitalization, [PMHx_HospitalizationText] = @PMHx_H" +
                "ospitalizationText, [PMHx_HospitalizationDate] = @PMHx_HospitalizationDate, [PMH" +
                "x_CardiovascularDiseaseText] = @PMHx_CardiovascularDiseaseText, [PMHx_PulmonaryC" +
                "onditionText] = @PMHx_PulmonaryConditionText, [PMHx_NeurologyConditionText] = @P" +
                "MHx_NeurologyConditionText, [PMHx_ArthritisText] = @PMHx_ArthritisText, [PMHx_As" +
                "thmaDate] = @PMHx_AsthmaDate, [PMHx_Asthma] = @PMHx_Asthma, [RomFindings] = @Rom" +
                "Findings, [RomSignificance] = @RomSignificance, [MmtFindings] = @MmtFindings, [M" +
                "mtSignificance] = @MmtSignificance, [SensoryFindings] = @SensoryFindings, [Senso" +
                "rySignificance] = @SensorySignificance, [CranialNerveAssmtFindings] = @CranialNe" +
                "rveAssmtFindings, [CranialNerveAssmtSignificance] = @CranialNerveAssmtSignifican" +
                "ce, [CoordinationAssmtFindings] = @CoordinationAssmtFindings, [CoordinationAssmt" +
                "Significance] = @CoordinationAssmtSignificance, [MbmFindings] = @MbmFindings, [M" +
                "bmSignificance] = @MbmSignificance, [SubjectiveObjective_ChiefComplaint] = @Subj" +
                "ectiveObjective_ChiefComplaint, [SubjectiveObjective_PtTranslation] = @Subjectiv" +
                "eObjective_PtTranslation, [SubjectiveObjective_BPBefore] = @SubjectiveObjective_" +
                "BPBefore, [SubjectiveObjective_BPAfter] = @SubjectiveObjective_BPAfter, [Subject" +
                "iveObjective_RRBefore] = @SubjectiveObjective_RRBefore, [SubjectiveObjective_RRA" +
                "fter] = @SubjectiveObjective_RRAfter, [SubjectiveObjective_PRBefore] = @Subjecti" +
                "veObjective_PRBefore, [SubjectiveObjective_PRAfter] = @SubjectiveObjective_PRAft" +
                "er, [SubjectiveObjective_TBefore] = @SubjectiveObjective_TBefore, [SubjectiveObj" +
                "ective_TAfter] = @SubjectiveObjective_TAfter, [SubjectiveObjective_Findings] = @" +
                "SubjectiveObjective_Findings, [SubjectiveObjective_Significance] = @SubjectiveOb" +
                "jective_Significance, [OcularInspection_Ambulation] = @OcularInspection_Ambulati" +
                "on, [OcularInspection_TADWheelChair] = @OcularInspection_TADWheelChair, [OcularI" +
                "nspection_TADCruches] = @OcularInspection_TADCruches, [OcularInspection_TADCane]" +
                " = @OcularInspection_TADCane, [OcularInspection_TADWalker] = @OcularInspection_T" +
                "ADWalker, [OcularInspection_Alert] = @OcularInspection_Alert, [OcularInspection_" +
                "Coherent] = @OcularInspection_Coherent, [OcularInspection_Cooperative] = @Ocular" +
                "Inspection_Cooperative, [OcularInspection_BodyType] = @OcularInspection_BodyType" +
                ", [OcularInspection_Atrophy] = @OcularInspection_Atrophy, [OcularInspection_Swel" +
                "ling] = @OcularInspection_Swelling, [OcularInspection_Redness] = @OcularInspecti" +
                "on_Redness, [OcularInspection_Ecchymosis] = @OcularInspection_Ecchymosis, [Ocula" +
                "rInspection_Deformity] = @OcularInspection_Deformity, [OcularInspection_Wounds] " +
                "= @OcularInspection_Wounds, [OcularInspection_Scar] = @OcularInspection_Scar, [O" +
                "cularInspection_PressureSore] = @OcularInspection_PressureSore, [OcularInspectio" +
                "n_GaitDeviation] = @OcularInspection_GaitDeviation, [OcularInspection_Incision] " +
                "= @OcularInspection_Incision, [OcularInspection_ShortnessOfBreathing] = @OcularI" +
                "nspection_ShortnessOfBreathing, [OcularInspection_Others] = @OcularInspection_Ot" +
                "hers, [Palpation_BodyTemperature] = @Palpation_BodyTemperature, [Palpation_Muscl" +
                "eTone] = @Palpation_MuscleTone, [Palpation_Edema] = @Palpation_Edema, [Palpation" +
                "_Tenderness] = @Palpation_Tenderness, [Palpation_Location] = @Palpation_Location" +
                ", [Palpation_Deformity] = @Palpation_Deformity, [Palpation_MuscleGuarding] = @Pa" +
                "lpation_MuscleGuarding, [Palpation_MuscleSpasm] = @Palpation_MuscleSpasm, [Palpa" +
                "tion_Subluxation] = @Palpation_Subluxation, [Palpation_Dislocation] = @Palpation" +
                "_Dislocation, [CognitiveAssmt_STQuestion] = @CognitiveAssmt_STQuestion, [Cogniti" +
                "veAssmt_STResponse] = @CognitiveAssmt_STResponse, [CognitiveAssmt_LTQuestion] = " +
                "@CognitiveAssmt_LTQuestion, [CognitiveAssmt_LTResponse] = @CognitiveAssmt_LTResp" +
                "onse, [CognitiveAssmt_Findings] = @CognitiveAssmt_Findings, [CognitiveAssmt_Sign" +
                "ificance] = @CognitiveAssmt_Significance, [BalanceTolerance_SittingBalance] = @B" +
                "alanceTolerance_SittingBalance, [BalanceTolerance_SittingTolerance] = @BalanceTo" +
                "lerance_SittingTolerance, [BalanceTolerance_StandingBalance] = @BalanceTolerance" +
                "_StandingBalance, [BalanceTolerance_StandingTolerance] = @BalanceTolerance_Stand" +
                "ingTolerance, [BalanceTolerance_Findings] = @BalanceTolerance_Findings, [Balance" +
                "Tolerance_Significance] = @BalanceTolerance_Significance, [DeepTendonReflex_Left" +
                "Hand] = @DeepTendonReflex_LeftHand, [DeepTendonReflex_RightHand] = @DeepTendonRe" +
                "flex_RightHand, [DeepTendonReflex_LeftElbow] = @DeepTendonReflex_LeftElbow, [Dee" +
                "pTendonReflex_RightElbow] = @DeepTendonReflex_RightElbow, [DeepTendonReflex_Left" +
                "Knee] = @DeepTendonReflex_LeftKnee, [DeepTendonReflex_RightKnee] = @DeepTendonRe" +
                "flex_RightKnee, [DeepTendonReflex_LeftFoot] = @DeepTendonReflex_LeftFoot, [DeepT" +
                "endonReflex_RightFoot] = @DeepTendonReflex_RightFoot, [DeepTendonReflex_Findings" +
                "] = @DeepTendonReflex_Findings, [DeepTendonReflex_Significance] = @DeepTendonRef" +
                "lex_Significance, [PosturalAssmtFindings] = @PosturalAssmtFindings, [PosturalAss" +
                "mtSignificance] = @PosturalAssmtSignificance, [HandGripStrength_T1RightHand] = @" +
                "HandGripStrength_T1RightHand, [HandGripStrength_T1LeftHand] = @HandGripStrength_" +
                "T1LeftHand, [HandGripStrength_T2RightHand] = @HandGripStrength_T2RightHand, [Han" +
                "dGripStrength_T2LeftHand] = @HandGripStrength_T2LeftHand, [HandGripStrength_T3Ri" +
                "ghtHand] = @HandGripStrength_T3RightHand, [HandGripStrength_T3LeftHand] = @HandG" +
                "ripStrength_T3LeftHand, [HandGripStrength_AveRightHand] = @HandGripStrength_AveR" +
                "ightHand, [HandGripStrength_AveLeftHand] = @HandGripStrength_AveLeftHand, [HandG" +
                "ripStrength_Findings] = @HandGripStrength_Findings, [HandGripStrength_Significan" +
                "ce] = @HandGripStrength_Significance, [VolumetricMeasurement_Right] = @Volumetri" +
                "cMeasurement_Right, [VolumetricMeasurement_Left] = @VolumetricMeasurement_Left, " +
                "[VolumetricMeasurement_Difference] = @VolumetricMeasurement_Difference, [Volumet" +
                "ricMeasurement_Findings] = @VolumetricMeasurement_Findings, [VolumetricMeasureme" +
                "nt_Significance] = @VolumetricMeasurement_Significance, [AnteriorView_HeadInMidl" +
                "ine] = @AnteriorView_HeadInMidline, [AnteriorView_HeadInMidlineFindings] = @Ante" +
                "riorView_HeadInMidlineFindings, [AnteriorView_ShouldersInLevel] = @AnteriorView_" +
                "ShouldersInLevel, [AnteriorView_ShouldersInLevelFindings] = @AnteriorView_Should" +
                "ersInLevelFindings, [AnteriorView_Protrusion] = @AnteriorView_Protrusion, [Anter" +
                "iorView_ProtrusionFindings] = @AnteriorView_ProtrusionFindings, [AnteriorView_La" +
                "teralization] = @AnteriorView_Lateralization, [AnteriorView_LateralizationFindin" +
                "gs] = @AnteriorView_LateralizationFindings, [AnteriorView_Depression] = @Anterio" +
                "rView_Depression, [AnteriorView_DepressionFindings] = @AnteriorView_DepressionFi" +
                "ndings, [AnteriorView_WaistAngle] = @AnteriorView_WaistAngle, [AnteriorView_ArmP" +
                "osition] = @AnteriorView_ArmPosition, [AnteriorView_CarryingAngle] = @AnteriorVi" +
                "ew_CarryingAngle, [AnteriorView_ASISLevel] = @AnteriorView_ASISLevel, [AnteriorV" +
                "iew_PatellaeAlignment] = @AnteriorView_PatellaeAlignment, [AnteriorView_KneeAlig" +
                "nment] = @AnteriorView_KneeAlignment, [AnteriorView_MalleoliLevel] = @AnteriorVi" +
                "ew_MalleoliLevel, [AnteriorView_ArchesOfFeet] = @AnteriorView_ArchesOfFeet, [Ant" +
                "eriorView_FeetAngle] = @AnteriorView_FeetAngle, [AnteriorView_FeetAngleFindings]" +
                " = @AnteriorView_FeetAngleFindings, [PosteriorView_HeadInMidline] = @PosteriorVi" +
                "ew_HeadInMidline, [PosteriorView_HeadInMidlineFindings] = @PosteriorView_HeadInM" +
                "idlineFindings, [PosteriorView_ShouldersInLevel] = @PosteriorView_ShouldersInLev" +
                "el, [PosteriorView_ShouldersInLevelFindings] = @PosteriorView_ShouldersInLevelFi" +
                "ndings, [PosteriorView_SpineScapularLevel] = @PosteriorView_SpineScapularLevel, " +
                "[PosteriorView_SpineScapularLevelFindings] = @PosteriorView_SpineScapularLevelFi" +
                "ndings, [PosteriorView_SpineInMidline] = @PosteriorView_SpineInMidline, [Posteri" +
                "orView_SpineInMidlineFindings] = @PosteriorView_SpineInMidlineFindings, [Posteri" +
                "orView_WaistLevelAngle] = @PosteriorView_WaistLevelAngle, [PosteriorView_ArmPosi" +
                "tion] = @PosteriorView_ArmPosition, [PosteriorView_IliacCrestlevel] = @Posterior" +
                "View_IliacCrestlevel, [PosteriorView_PSISLevel] = @PosteriorView_PSISLevel, [Pos" +
                "teriorView_GlutealFoldsLevel] = @PosteriorView_GlutealFoldsLevel, [PosteriorView" +
                "_PoplitealFoassalevel] = @PosteriorView_PoplitealFoassalevel, [PosteriorView_Hee" +
                "lsPosition] = @PosteriorView_HeelsPosition, [LateralView_EarlobeShoulderAlignmen" +
                "t] = @LateralView_EarlobeShoulderAlignment, [LateralView_EarlobeShoulderAlignmen" +
                "tFindings] = @LateralView_EarlobeShoulderAlignmentFindings, [LateralView_Acromio" +
                "IliacAlignment] = @LateralView_AcromioIliacAlignment, [LateralView_AcromioIliacA" +
                "lignmentFindings] = @LateralView_AcromioIliacAlignmentFindings, [LateralView_Spi" +
                "nalSegments] = @LateralView_SpinalSegments, [LateralView_ShoulderAlignment] = @L" +
                "ateralView_ShoulderAlignment, [LateralView_PelvicAngle] = @LateralView_PelvicAng" +
                "le, [LateralView_KneeAlignment] = @LateralView_KneeAlignment, [LateralView_Plumb" +
                "lineAlignment] = @LateralView_PlumblineAlignment, [LateralView_PlumblineAlignmen" +
                "tFindings] = @LateralView_PlumblineAlignmentFindings, [LateralView_ArchesOfFeet]" +
                " = @LateralView_ArchesOfFeet, [GaitAssessment_Asssessment] = @GaitAssessment_Ass" +
                "sessment, [GaitAssessment_RInitialLoading] = @GaitAssessment_RInitialLoading, [G" +
                "aitAssessment_LInitialLoading] = @GaitAssessment_LInitialLoading, [GaitAssessmen" +
                "t_RLoadingResponse] = @GaitAssessment_RLoadingResponse, [GaitAssessment_LLoading" +
                "Response] = @GaitAssessment_LLoadingResponse, [GaitAssessment_RMidStance] = @Gai" +
                "tAssessment_RMidStance, [GaitAssessment_LMidStance] = @GaitAssessment_LMidStance" +
                ", [GaitAssessment_RTerminalStance] = @GaitAssessment_RTerminalStance, [GaitAsses" +
                "sment_LTerminalStance] = @GaitAssessment_LTerminalStance, [GaitAssessment_RPreSw" +
                "ing] = @GaitAssessment_RPreSwing, [GaitAssessment_LPreSwing] = @GaitAssessment_L" +
                "PreSwing, [GaitAssessment_RInitialSwing] = @GaitAssessment_RInitialSwing, [GaitA" +
                "ssessment_LInitialPreSwing] = @GaitAssessment_LInitialPreSwing, [GaitAssessment_" +
                "RMidSwing] = @GaitAssessment_RMidSwing, [GaitAssessment_LMidPreSwing] = @GaitAss" +
                "essment_LMidPreSwing, [GaitAssessment_RTerminalSwing] = @GaitAssessment_RTermina" +
                "lSwing, [GaitAssessment_LTerminalSwing] = @GaitAssessment_LTerminalSwing, [GaitA" +
                "ssessment_Findings] = @GaitAssessment_Findings, [GaitAssessment_Significance] = " +
                "@GaitAssessment_Significance, [FunctionalAnalysis_AdlsAxWriting] = @FunctionalAn" +
                "alysis_AdlsAxWriting, [FunctionalAnalysis_AdlsAxCleaningHouse] = @FunctionalAnal" +
                "ysis_AdlsAxCleaningHouse, [FunctionalAnalysis_AdlsAxCooking] = @FunctionalAnalys" +
                "is_AdlsAxCooking, [FunctionalAnalysis_AdlsAxEating] = @FunctionalAnalysis_AdlsAx" +
                "Eating, [FunctionalAnalysis_AdlsAxTurningDoorKnob] = @FunctionalAnalysis_AdlsAxT" +
                "urningDoorKnob, [FunctionalAnalysis_AdlsAxUsingKeys] = @FunctionalAnalysis_AdlsA" +
                "xUsingKeys, [FunctionalAnalysis_AdlsAxOpeningBottle] = @FunctionalAnalysis_AdlsA" +
                "xOpeningBottle, [FunctionalAnalysis_AdlsAxBrushingTeeth] = @FunctionalAnalysis_A" +
                "dlsAxBrushingTeeth, [FunctionalAnalysis_AdlsAxTyingShoeLace] = @FunctionalAnalys" +
                "is_AdlsAxTyingShoeLace, [FunctionalAnalysis_AdlsAxWashingDishes] = @FunctionalAn" +
                "alysis_AdlsAxWashingDishes, [FunctionalAnalysis_AdlsAxSweepingFloor] = @Function" +
                "alAnalysis_AdlsAxSweepingFloor, [FunctionalAnalysis_AdlsAxOthers] = @FunctionalA" +
                "nalysis_AdlsAxOthers, [Assessment_Diagnosis] = @Assessment_Diagnosis, [Assessmen" +
                "t_PTImpression] = @Assessment_PTImpression, [Assessment_ProblemList] = @Assessme" +
                "nt_ProblemList, [Assessment_LongTermGoals] = @Assessment_LongTermGoals, [Assessm" +
                "ent_ShortTermGoals] = @Assessment_ShortTermGoals, [Plan_PTManagement] = @Plan_PT" +
                "Management, [Plan_HomeInstruction] = @Plan_HomeInstruction, [FunctionalAnalysis_" +
                "AdlsAxOthersText] = @FunctionalAnalysis_AdlsAxOthersText, [CardioPulmonaryAssmt_" +
                "BodyType] = @CardioPulmonaryAssmt_BodyType, [CardioPulmonaryAssmt_ChestShape] = " +
                "@CardioPulmonaryAssmt_ChestShape, [CardioPulmonaryAssmt_ChestShapeOthers] = @Car" +
                "dioPulmonaryAssmt_ChestShapeOthers, [PulmonaryAssmt_SpmMucoid] = @PulmonaryAssmt" +
                "_SpmMucoid, [PulmonaryAssmt_SpmFrothy] = @PulmonaryAssmt_SpmFrothy, [PulmonaryAs" +
                "smt_SpmMucopurulent] = @PulmonaryAssmt_SpmMucopurulent, [PulmonaryAssmt_SpmHemop" +
                "tysis] = @PulmonaryAssmt_SpmHemoptysis, [PulmonaryAssmt_SpmPurulent] = @Pulmonar" +
                "yAssmt_SpmPurulent, [PulmonaryAssmt_SpmOthers] = @PulmonaryAssmt_SpmOthers, [Pul" +
                "monaryAssmt_SpmOthersText] = @PulmonaryAssmt_SpmOthersText, [PulmonaryAssmt_MdSh" +
                "ift] = @PulmonaryAssmt_MdShift, [PulmonaryAssmt_MdShiftFindings] = @PulmonaryAss" +
                "mt_MdShiftFindings, [PulmonaryAssmt_MdShiftSignificance] = @PulmonaryAssmt_MdShi" +
                "ftSignificance, [PulmonaryAssmt_Fremitus] = @PulmonaryAssmt_Fremitus, [Pulmonary" +
                "Assmt_FremitusFindings] = @PulmonaryAssmt_FremitusFindings, [PulmonaryAssmt_Frem" +
                "itusSignificance] = @PulmonaryAssmt_FremitusSignificance, [PulmonaryAssmt_ChstEx" +
                "pULE] = @PulmonaryAssmt_ChstExpULE, [PulmonaryAssmt_ChstExpMLE] = @PulmonaryAssm" +
                "t_ChstExpMLE, [PulmonaryAssmt_ChstExpLLE] = @PulmonaryAssmt_ChstExpLLE, [Pulmona" +
                "ryAssmt_ChstExpSig] = @PulmonaryAssmt_ChstExpSig, [PulmonaryAssmt_Percussion] = " +
                "@PulmonaryAssmt_Percussion, [PulmonaryAssmt_PercussionOthers] = @PulmonaryAssmt_" +
                "PercussionOthers, [PulmonaryAssmt_SixMinWalk] = @PulmonaryAssmt_SixMinWalk, [Pul" +
                "monaryAssmt_SixMinWalkFindings] = @PulmonaryAssmt_SixMinWalkFindings, [Pulmonary" +
                "Assmt_StairClimbing] = @PulmonaryAssmt_StairClimbing, [PulmonaryAssmt_StairClimb" +
                "ingFindings] = @PulmonaryAssmt_StairClimbingFindings, [PulmonaryAssmt_ShuttleTes" +
                "t] = @PulmonaryAssmt_ShuttleTest, [PulmonaryAssmt_ShuttleTestFindings] = @Pulmon" +
                "aryAssmt_ShuttleTestFindings, [PulmonaryAssmt_OtherTest] = @PulmonaryAssmt_Other" +
                "Test, [PulmonaryAssmt_OtherTestFindings] = @PulmonaryAssmt_OtherTestFindings, [C" +
                "MAxilla_MaxInsT1] = @CMAxilla_MaxInsT1, [CMAxilla_MaxInsT2] = @CMAxilla_MaxInsT2" +
                ", [CMAxilla_MaxInsT3] = @CMAxilla_MaxInsT3, [CMAxilla_MaxInsAve] = @CMAxilla_Max" +
                "InsAve, [CMAxilla_MaxExpT1] = @CMAxilla_MaxExpT1, [CMAxilla_MaxExpT2] = @CMAxill" +
                "a_MaxExpT2, [CMAxilla_MaxExpT3] = @CMAxilla_MaxExpT3, [CMAxilla_MaxExpAve] = @CM" +
                "Axilla_MaxExpAve, [CMAxilla_DiffT1] = @CMAxilla_DiffT1, [CMAxilla_DiffT2] = @CMA" +
                "xilla_DiffT2, [CMAxilla_DiffT3] = @CMAxilla_DiffT3, [CMAxilla_DiffAve] = @CMAxil" +
                "la_DiffAve, [CMXiphoid_MaxInsT1] = @CMXiphoid_MaxInsT1, [CMXiphoid_MaxInsT2] = @" +
                "CMXiphoid_MaxInsT2, [CMXiphoid_MaxInsT3] = @CMXiphoid_MaxInsT3, [CMXiphoid_MaxIn" +
                "sAve] = @CMXiphoid_MaxInsAve, [CMXiphoid_MaxExpT1] = @CMXiphoid_MaxExpT1, [CMXip" +
                "hoid_MaxExpT2] = @CMXiphoid_MaxExpT2, [CMXiphoid_MaxExpT3] = @CMXiphoid_MaxExpT3" +
                ", [CMXiphoid_MaxExpAve] = @CMXiphoid_MaxExpAve, [CMXiphoid_DiffT1] = @CMXiphoid_" +
                "DiffT1, [CMXiphoid_DiffT2] = @CMXiphoid_DiffT2, [CMXiphoid_DiffT3] = @CMXiphoid_" +
                "DiffT3, [CMXiphoid_DiffAve] = @CMXiphoid_DiffAve, [CMLowerCostal_MaxInsT1] = @CM" +
                "LowerCostal_MaxInsT1, [CMLowerCostal_MaxInsT2] = @CMLowerCostal_MaxInsT2, [CMLow" +
                "erCostal_MaxInsT3] = @CMLowerCostal_MaxInsT3, [CMLowerCostal_MaxInsAve] = @CMLow" +
                "erCostal_MaxInsAve, [CMLowerCostal_MaxExpT1] = @CMLowerCostal_MaxExpT1, [CMLower" +
                "Costal_MaxExpT2] = @CMLowerCostal_MaxExpT2, [CMLowerCostal_MaxExpT3] = @CMLowerC" +
                "ostal_MaxExpT3, [CMLowerCostal_MaxExpAve] = @CMLowerCostal_MaxExpAve, [CMLowerCo" +
                "stal_DiffT1] = @CMLowerCostal_DiffT1, [CMLowerCostal_DiffT2] = @CMLowerCostal_Di" +
                "ffT2, [CMLowerCostal_DiffT3] = @CMLowerCostal_DiffT3, [CMLowerCostal_DiffAve] = " +
                "@CMLowerCostal_DiffAve, [Auscultation_Trachael] = @Auscultation_Trachael, [Auscu" +
                "ltation_Bronchial] = @Auscultation_Bronchial, [Auscultation_Bronchiovesicular] =" +
                " @Auscultation_Bronchiovesicular, [Auscultation_Vesicular] = @Auscultation_Vesic" +
                "ular, [Auscultation_Crackles] = @Auscultation_Crackles, [Auscultation_Diminished" +
                "BreathSounds] = @Auscultation_DiminishedBreathSounds, [Auscultation_HighPitchedB" +
                "ronchialBreathing] = @Auscultation_HighPitchedBronchialBreathing, [Auscultation_" +
                "LowPitchedBronchialBreathing] = @Auscultation_LowPitchedBronchialBreathing, [Aus" +
                "cultation_PleuralRub] = @Auscultation_PleuralRub, [Auscultation_Rhonchi] = @Ausc" +
                "ultation_Rhonchi, [Auscultation_Stridor] = @Auscultation_Stridor, [Auscultation_" +
                "Wheeze] = @Auscultation_Wheeze, [Auscultation_Others] = @Auscultation_Others, [A" +
                "uscultation_OthersText] = @Auscultation_OthersText, [FigureOfEight_Right] = @Fig" +
                "ureOfEight_Right, [FigureOfEight_Left] = @FigureOfEight_Left, [FigureOfEight_Dif" +
                "ference] = @FigureOfEight_Difference, [FigureOfEight_Findings] = @FigureOfEight_" +
                "Findings, [FigureOfEight_Significance] = @FigureOfEight_Significance WHERE (([Pa" +
                "tientVisitId] = @Original_PatientVisitId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CivilStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CivilStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandedNess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandedNess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Occupation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Occupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Religion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Religion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfConsultation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfConsultation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralPhysician", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralPhysician", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfReferral", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfReferral", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Neurologist", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Neurologist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HPI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CityTown", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CityTown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Province", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Province", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfAdmission", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfAdmission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surgeon", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surgeon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfSurgery", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfSurgery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orthopedic", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orthopedic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cardiologist", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cardiologist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Opthalmologoist", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Opthalmologoist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pulmonologist", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pulmonologist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferringDoctor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferringDoctor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfInitialEvaluation", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfInitialEvaluation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diagnosis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diagnosis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Trauma", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Trauma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Arthritis", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Arthritis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_HPN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_HPN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_DM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_DM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Allergies", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Allergies", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Surgery", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Surgery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_SurgeryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_SurgeryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_CardiovascularDisease", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_CardiovascularDisease", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_PulmonaryCondition", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_PulmonaryCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_NeurologyCondition", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_NeurologyCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Cancer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Cancer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Others", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_HypertensionF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_HypertensionF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_HypertensionM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_HypertensionM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_ArthritisF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_ArthritisF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_ArthritisM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_ArthritisM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_DiabetesMellitusF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_DiabetesMellitusF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_DiabetesMellitusM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_DiabetesMellitusM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_CancerF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_CancerF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_CancerM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_CancerM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_AsthmaF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_AsthmaF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_AsthmaM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_AsthmaM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_AllergiesF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_AllergiesF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_AllergiesM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_AllergiesM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_NeurologicConditionF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_NeurologicConditionF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_NeurologicConditionM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_NeurologicConditionM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_Others", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_OthersF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_OthersF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMHx_OthersM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FMHx_OthersM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_FinancialStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_FinancialStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_PersonalityType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_PersonalityType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_LifeStyle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_LifeStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_EducationalAttainment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_EducationalAttainment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_LivesWith", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_LivesWith", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_NumberOfOffspring", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_NumberOfOffspring", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_Relatives", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_Relatives", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_OtherLivesWith", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_OtherLivesWith", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_Hobbies", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_Hobbies", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_Sports", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_Sports", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_OtherHobbies", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_OtherHobbies", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_CigaretteSmoker", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_CigaretteSmoker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_AlcoholDrinker", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_AlcoholDrinker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_TypeOfHouse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_TypeOfHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSEHx_OtherTypeOfHouse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PSEHx_OtherTypeOfHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_TraumaText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_TraumaText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_DMText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_DMText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_SurgeryText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_SurgeryText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Hospitalization", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Hospitalization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_HospitalizationText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_HospitalizationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_HospitalizationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_HospitalizationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_CardiovascularDiseaseText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_CardiovascularDiseaseText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_PulmonaryConditionText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_PulmonaryConditionText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_NeurologyConditionText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_NeurologyConditionText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_ArthritisText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_ArthritisText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_AsthmaDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_AsthmaDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMHx_Asthma", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMHx_Asthma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RomFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RomFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RomSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RomSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MmtFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MmtFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MmtSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MmtSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SensoryFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SensoryFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SensorySignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SensorySignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CranialNerveAssmtFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CranialNerveAssmtFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CranialNerveAssmtSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CranialNerveAssmtSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoordinationAssmtFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoordinationAssmtFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoordinationAssmtSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoordinationAssmtSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MbmFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MbmFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MbmSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MbmSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_ChiefComplaint", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_ChiefComplaint", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_PtTranslation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_PtTranslation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_BPBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_BPBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_BPAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_BPAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_RRBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_RRBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_RRAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_RRAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_PRBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_PRBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_PRAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_PRAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_TBefore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_TBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_TAfter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_TAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectiveObjective_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectiveObjective_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Ambulation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Ambulation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_TADWheelChair", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_TADWheelChair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_TADCruches", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_TADCruches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_TADCane", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_TADCane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_TADWalker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_TADWalker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Alert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Alert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Coherent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Coherent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Cooperative", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Cooperative", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_BodyType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_BodyType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Atrophy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Atrophy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Swelling", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Swelling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Redness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Redness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Ecchymosis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Ecchymosis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Deformity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Deformity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Wounds", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Wounds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Scar", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Scar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_PressureSore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_PressureSore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_GaitDeviation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_GaitDeviation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Incision", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Incision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_ShortnessOfBreathing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_ShortnessOfBreathing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OcularInspection_Others", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OcularInspection_Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_BodyTemperature", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_BodyTemperature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_MuscleTone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_MuscleTone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Edema", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Edema", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Tenderness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Tenderness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Location", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Location", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Deformity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Deformity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_MuscleGuarding", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_MuscleGuarding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_MuscleSpasm", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_MuscleSpasm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Subluxation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Subluxation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Palpation_Dislocation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Palpation_Dislocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_STQuestion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_STQuestion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_STResponse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_STResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_LTQuestion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_LTQuestion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_LTResponse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_LTResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CognitiveAssmt_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CognitiveAssmt_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_SittingBalance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_SittingBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_SittingTolerance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_SittingTolerance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_StandingBalance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_StandingBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_StandingTolerance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_StandingTolerance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BalanceTolerance_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BalanceTolerance_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_LeftHand", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_LeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_RightHand", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_RightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_LeftElbow", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_LeftElbow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_RightElbow", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_RightElbow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_LeftKnee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_LeftKnee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_RightKnee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_RightKnee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_LeftFoot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_LeftFoot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_RightFoot", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_RightFoot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeepTendonReflex_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeepTendonReflex_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosturalAssmtFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosturalAssmtFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosturalAssmtSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosturalAssmtSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T1RightHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T1RightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T1LeftHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T1LeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T2RightHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T2RightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T2LeftHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T2LeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T3RightHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T3RightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_T3LeftHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_T3LeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_AveRightHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_AveRightHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_AveLeftHand", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HandGripStrength_AveLeftHand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandGripStrength_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandGripStrength_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandGripStrength_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Right", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VolumetricMeasurement_Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Left", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VolumetricMeasurement_Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Difference", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VolumetricMeasurement_Difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolumetricMeasurement_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumetricMeasurement_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolumetricMeasurement_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_HeadInMidline", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_HeadInMidline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_HeadInMidlineFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_HeadInMidlineFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ShouldersInLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ShouldersInLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ShouldersInLevelFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ShouldersInLevelFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_Protrusion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_Protrusion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ProtrusionFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ProtrusionFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_Lateralization", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_Lateralization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_LateralizationFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_LateralizationFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_Depression", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_Depression", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_DepressionFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_DepressionFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_WaistAngle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AnteriorView_WaistAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ArmPosition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ArmPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_CarryingAngle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AnteriorView_CarryingAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ASISLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ASISLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_PatellaeAlignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_PatellaeAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_KneeAlignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_KneeAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_MalleoliLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_MalleoliLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_ArchesOfFeet", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_ArchesOfFeet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_FeetAngle", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_FeetAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnteriorView_FeetAngleFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnteriorView_FeetAngleFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_HeadInMidline", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_HeadInMidline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_HeadInMidlineFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_HeadInMidlineFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_ShouldersInLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_ShouldersInLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_ShouldersInLevelFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_ShouldersInLevelFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_SpineScapularLevel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_SpineScapularLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_SpineScapularLevelFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_SpineScapularLevelFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_SpineInMidline", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_SpineInMidline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_SpineInMidlineFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_SpineInMidlineFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_WaistLevelAngle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PosteriorView_WaistLevelAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_ArmPosition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_ArmPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_IliacCrestlevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_IliacCrestlevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_PSISLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_PSISLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_GlutealFoldsLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_GlutealFoldsLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_PoplitealFoassalevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_PoplitealFoassalevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PosteriorView_HeelsPosition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PosteriorView_HeelsPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_EarlobeShoulderAlignment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_EarlobeShoulderAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_EarlobeShoulderAlignmentFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_EarlobeShoulderAlignmentFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_AcromioIliacAlignment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_AcromioIliacAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_AcromioIliacAlignmentFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_AcromioIliacAlignmentFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_SpinalSegments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_SpinalSegments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_ShoulderAlignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_ShoulderAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_PelvicAngle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LateralView_PelvicAngle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_KneeAlignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_KneeAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_PlumblineAlignment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_PlumblineAlignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_PlumblineAlignmentFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_PlumblineAlignmentFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateralView_ArchesOfFeet", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateralView_ArchesOfFeet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_Asssessment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_Asssessment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RInitialLoading", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RInitialLoading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LInitialLoading", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LInitialLoading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RLoadingResponse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RLoadingResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LLoadingResponse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LLoadingResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RMidStance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RMidStance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LMidStance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LMidStance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RTerminalStance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RTerminalStance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LTerminalStance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LTerminalStance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RPreSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RPreSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LPreSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LPreSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RInitialSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RInitialSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LInitialPreSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LInitialPreSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RMidSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RMidSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LMidPreSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LMidPreSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_RTerminalSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_RTerminalSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_LTerminalSwing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_LTerminalSwing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaitAssessment_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaitAssessment_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxWriting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxWriting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxCleaningHouse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxCleaningHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxCooking", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxCooking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxEating", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxEating", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxTurningDoorKnob", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxTurningDoorKnob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxUsingKeys", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxUsingKeys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxOpeningBottle", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxOpeningBottle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxBrushingTeeth", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxBrushingTeeth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxTyingShoeLace", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxTyingShoeLace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxWashingDishes", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxWashingDishes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxSweepingFloor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxSweepingFloor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxOthers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxOthers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_Diagnosis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_Diagnosis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_PTImpression", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_PTImpression", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_ProblemList", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_ProblemList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_LongTermGoals", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_LongTermGoals", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Assessment_ShortTermGoals", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Assessment_ShortTermGoals", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plan_PTManagement", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plan_PTManagement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plan_HomeInstruction", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plan_HomeInstruction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FunctionalAnalysis_AdlsAxOthersText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FunctionalAnalysis_AdlsAxOthersText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardioPulmonaryAssmt_BodyType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardioPulmonaryAssmt_BodyType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardioPulmonaryAssmt_ChestShape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardioPulmonaryAssmt_ChestShape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardioPulmonaryAssmt_ChestShapeOthers", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardioPulmonaryAssmt_ChestShapeOthers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmMucoid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmMucoid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmFrothy", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmFrothy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmMucopurulent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmMucopurulent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmHemoptysis", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmHemoptysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmPurulent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmPurulent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmOthers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmOthers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SpmOthersText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SpmOthersText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_MdShift", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_MdShift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_MdShiftFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_MdShiftFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_MdShiftSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_MdShiftSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_Fremitus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_Fremitus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_FremitusFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_FremitusFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_FremitusSignificance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_FremitusSignificance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ChstExpULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ChstExpULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ChstExpMLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ChstExpMLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ChstExpLLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ChstExpLLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ChstExpSig", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ChstExpSig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_Percussion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_Percussion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_PercussionOthers", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_PercussionOthers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SixMinWalk", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SixMinWalk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_SixMinWalkFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_SixMinWalkFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_StairClimbing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_StairClimbing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_StairClimbingFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_StairClimbingFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ShuttleTest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ShuttleTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_ShuttleTestFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_ShuttleTestFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_OtherTest", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_OtherTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PulmonaryAssmt_OtherTestFindings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PulmonaryAssmt_OtherTestFindings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxInsT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxInsT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxInsT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxInsT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxInsT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxInsT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxInsAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxInsAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxExpT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxExpT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxExpT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxExpT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxExpT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxExpT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_MaxExpAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_MaxExpAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_DiffT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_DiffT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_DiffT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_DiffT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_DiffT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_DiffT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMAxilla_DiffAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMAxilla_DiffAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxInsT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxInsT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxInsT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxInsT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxInsT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxInsT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxInsAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxInsAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxExpT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxExpT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxExpT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxExpT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxExpT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxExpT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_MaxExpAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_MaxExpAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_DiffT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_DiffT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_DiffT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_DiffT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_DiffT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_DiffT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMXiphoid_DiffAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMXiphoid_DiffAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxInsT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxInsT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxInsT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxInsT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxInsT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxInsT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxInsAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxInsAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxExpT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxExpT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxExpT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxExpT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxExpT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxExpT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_MaxExpAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_MaxExpAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_DiffT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_DiffT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_DiffT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_DiffT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_DiffT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_DiffT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMLowerCostal_DiffAve", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CMLowerCostal_DiffAve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Trachael", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Trachael", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Bronchial", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Bronchial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Bronchiovesicular", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Bronchiovesicular", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Vesicular", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Vesicular", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Crackles", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Crackles", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_DiminishedBreathSounds", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_DiminishedBreathSounds", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_HighPitchedBronchialBreathing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_HighPitchedBronchialBreathing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_LowPitchedBronchialBreathing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_LowPitchedBronchialBreathing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_PleuralRub", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_PleuralRub", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Rhonchi", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Rhonchi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Stridor", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Stridor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Wheeze", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Wheeze", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_Others", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auscultation_OthersText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auscultation_OthersText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Right", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FigureOfEight_Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Left", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FigureOfEight_Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Difference", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FigureOfEight_Difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Findings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FigureOfEight_Findings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FigureOfEight_Significance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FigureOfEight_Significance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        PatientVisitId, FirstName, LastName, Age, CivilStatus, HandedNess, " +
                "Occupation, Address, Religion, DateOfConsultation, PatientType, GeneralPhysician" +
                ", \r\n                         DateOfReferral, Neurologist, HPI, PatientId, Sex, C" +
                "ityTown, Province, DateOfAdmission, Surgeon, DateOfSurgery, Orthopedic, Cardiolo" +
                "gist, Opthalmologoist, \r\n                         Pulmonologist, OtherDoctor, Re" +
                "ferringDoctor, DateOfInitialEvaluation, Diagnosis, PMHx_Trauma, PMHx_Arthritis, " +
                "PMHx_HPN, PMHx_DM, PMHx_Allergies, \r\n                         PMHx_Surgery, PMHx" +
                "_SurgeryDate, PMHx_CardiovascularDisease, PMHx_PulmonaryCondition, PMHx_Neurolog" +
                "yCondition, PMHx_Cancer, PMHx_Others, \r\n                         FMHx_Hypertensi" +
                "onF, FMHx_HypertensionM, FMHx_ArthritisF, FMHx_ArthritisM, FMHx_DiabetesMellitus" +
                "F, FMHx_DiabetesMellitusM, FMHx_CancerF, \r\n                         FMHx_CancerM" +
                ", FMHx_AsthmaF, FMHx_AsthmaM, FMHx_AllergiesF, FMHx_AllergiesM, FMHx_NeurologicC" +
                "onditionF, FMHx_NeurologicConditionM, FMHx_Others, \r\n                         FM" +
                "Hx_OthersF, FMHx_OthersM, PSEHx_FinancialStatus, PSEHx_PersonalityType, PSEHx_Li" +
                "feStyle, PSEHx_EducationalAttainment, PSEHx_LivesWith, \r\n                       " +
                "  PSEHx_NumberOfOffspring, PSEHx_Relatives, PSEHx_OtherLivesWith, PSEHx_Hobbies," +
                " PSEHx_Sports, PSEHx_OtherHobbies, PSEHx_CigaretteSmoker, \r\n                    " +
                "     PSEHx_AlcoholDrinker, PSEHx_TypeOfHouse, PSEHx_OtherTypeOfHouse, PMHx_Traum" +
                "aText, PMHx_DMText, PMHx_SurgeryText, PMHx_Hospitalization, \r\n                  " +
                "       PMHx_HospitalizationText, PMHx_HospitalizationDate, PMHx_CardiovascularDi" +
                "seaseText, PMHx_PulmonaryConditionText, PMHx_NeurologyConditionText, \r\n         " +
                "                PMHx_ArthritisText, PMHx_AsthmaDate, PMHx_Asthma, RomFindings, R" +
                "omSignificance, MmtFindings, MmtSignificance, SensoryFindings, SensorySignifican" +
                "ce, \r\n                         CranialNerveAssmtFindings, CranialNerveAssmtSigni" +
                "ficance, CoordinationAssmtFindings, CoordinationAssmtSignificance, MbmFindings, " +
                "MbmSignificance, \r\n                         SubjectiveObjective_ChiefComplaint, " +
                "SubjectiveObjective_PtTranslation, SubjectiveObjective_BPBefore, SubjectiveObjec" +
                "tive_BPAfter, \r\n                         SubjectiveObjective_RRBefore, Subjectiv" +
                "eObjective_RRAfter, SubjectiveObjective_PRBefore, SubjectiveObjective_PRAfter, S" +
                "ubjectiveObjective_TBefore, \r\n                         SubjectiveObjective_TAfte" +
                "r, SubjectiveObjective_Findings, SubjectiveObjective_Significance, OcularInspect" +
                "ion_Ambulation, OcularInspection_TADWheelChair, \r\n                         Ocula" +
                "rInspection_TADCruches, OcularInspection_TADCane, OcularInspection_TADWalker, Oc" +
                "ularInspection_Alert, OcularInspection_Coherent, \r\n                         Ocul" +
                "arInspection_Cooperative, OcularInspection_BodyType, OcularInspection_Atrophy, O" +
                "cularInspection_Swelling, OcularInspection_Redness, \r\n                         O" +
                "cularInspection_Ecchymosis, OcularInspection_Deformity, OcularInspection_Wounds," +
                " OcularInspection_Scar, OcularInspection_PressureSore, \r\n                       " +
                "  OcularInspection_GaitDeviation, OcularInspection_Incision, OcularInspection_Sh" +
                "ortnessOfBreathing, OcularInspection_Others, Palpation_BodyTemperature, \r\n      " +
                "                   Palpation_MuscleTone, Palpation_Edema, Palpation_Tenderness, " +
                "Palpation_Location, Palpation_Deformity, Palpation_MuscleGuarding, Palpation_Mus" +
                "cleSpasm, \r\n                         Palpation_Subluxation, Palpation_Dislocatio" +
                "n, CognitiveAssmt_STQuestion, CognitiveAssmt_STResponse, CognitiveAssmt_LTQuesti" +
                "on, \r\n                         CognitiveAssmt_LTResponse, CognitiveAssmt_Finding" +
                "s, CognitiveAssmt_Significance, BalanceTolerance_SittingBalance, BalanceToleranc" +
                "e_SittingTolerance, \r\n                         BalanceTolerance_StandingBalance," +
                " BalanceTolerance_StandingTolerance, BalanceTolerance_Findings, BalanceTolerance" +
                "_Significance, \r\n                         DeepTendonReflex_LeftHand, DeepTendonR" +
                "eflex_RightHand, DeepTendonReflex_LeftElbow, DeepTendonReflex_RightElbow, DeepTe" +
                "ndonReflex_LeftKnee, \r\n                         DeepTendonReflex_RightKnee, Deep" +
                "TendonReflex_LeftFoot, DeepTendonReflex_RightFoot, DeepTendonReflex_Findings, De" +
                "epTendonReflex_Significance, \r\n                         PosturalAssmtFindings, P" +
                "osturalAssmtSignificance, HandGripStrength_T1RightHand, HandGripStrength_T1LeftH" +
                "and, HandGripStrength_T2RightHand, \r\n                         HandGripStrength_T" +
                "2LeftHand, HandGripStrength_T3RightHand, HandGripStrength_T3LeftHand, HandGripSt" +
                "rength_AveRightHand, HandGripStrength_AveLeftHand, \r\n                         Ha" +
                "ndGripStrength_Findings, HandGripStrength_Significance, VolumetricMeasurement_Ri" +
                "ght, VolumetricMeasurement_Left, VolumetricMeasurement_Difference, \r\n           " +
                "              VolumetricMeasurement_Findings, VolumetricMeasurement_Significance" +
                ", AnteriorView_HeadInMidline, AnteriorView_HeadInMidlineFindings, \r\n            " +
                "             AnteriorView_ShouldersInLevel, AnteriorView_ShouldersInLevelFinding" +
                "s, AnteriorView_Protrusion, AnteriorView_ProtrusionFindings, AnteriorView_Latera" +
                "lization, \r\n                         AnteriorView_LateralizationFindings, Anteri" +
                "orView_Depression, AnteriorView_DepressionFindings, AnteriorView_WaistAngle, Ant" +
                "eriorView_ArmPosition, \r\n                         AnteriorView_CarryingAngle, An" +
                "teriorView_ASISLevel, AnteriorView_PatellaeAlignment, AnteriorView_KneeAlignment" +
                ", AnteriorView_MalleoliLevel, \r\n                         AnteriorView_ArchesOfFe" +
                "et, AnteriorView_FeetAngle, AnteriorView_FeetAngleFindings, PosteriorView_HeadIn" +
                "Midline, PosteriorView_HeadInMidlineFindings, \r\n                         Posteri" +
                "orView_ShouldersInLevel, PosteriorView_ShouldersInLevelFindings, PosteriorView_S" +
                "pineScapularLevel, PosteriorView_SpineScapularLevelFindings, \r\n                 " +
                "        PosteriorView_SpineInMidline, PosteriorView_SpineInMidlineFindings, Post" +
                "eriorView_WaistLevelAngle, PosteriorView_ArmPosition, PosteriorView_IliacCrestle" +
                "vel, \r\n                         PosteriorView_PSISLevel, PosteriorView_GlutealFo" +
                "ldsLevel, PosteriorView_PoplitealFoassalevel, PosteriorView_HeelsPosition, \r\n   " +
                "                      LateralView_EarlobeShoulderAlignment, LateralView_EarlobeS" +
                "houlderAlignmentFindings, LateralView_AcromioIliacAlignment, \r\n                 " +
                "        LateralView_AcromioIliacAlignmentFindings, LateralView_SpinalSegments, L" +
                "ateralView_ShoulderAlignment, LateralView_PelvicAngle, LateralView_KneeAlignment" +
                ", \r\n                         LateralView_PlumblineAlignment, LateralView_Plumbli" +
                "neAlignmentFindings, LateralView_ArchesOfFeet, GaitAssessment_Asssessment, \r\n   " +
                "                      GaitAssessment_RInitialLoading, GaitAssessment_LInitialLoa" +
                "ding, GaitAssessment_RLoadingResponse, GaitAssessment_LLoadingResponse, \r\n      " +
                "                   GaitAssessment_RMidStance, GaitAssessment_LMidStance, GaitAss" +
                "essment_RTerminalStance, GaitAssessment_LTerminalStance, GaitAssessment_RPreSwin" +
                "g, \r\n                         GaitAssessment_LPreSwing, GaitAssessment_RInitialS" +
                "wing, GaitAssessment_LInitialPreSwing, GaitAssessment_RMidSwing, GaitAssessment_" +
                "LMidPreSwing, \r\n                         GaitAssessment_RTerminalSwing, GaitAsse" +
                "ssment_LTerminalSwing, GaitAssessment_Findings, GaitAssessment_Significance, Fun" +
                "ctionalAnalysis_AdlsAxWriting, \r\n                         FunctionalAnalysis_Adl" +
                "sAxCleaningHouse, FunctionalAnalysis_AdlsAxCooking, FunctionalAnalysis_AdlsAxEat" +
                "ing, FunctionalAnalysis_AdlsAxTurningDoorKnob, \r\n                         Functi" +
                "onalAnalysis_AdlsAxUsingKeys, FunctionalAnalysis_AdlsAxOpeningBottle, Functional" +
                "Analysis_AdlsAxBrushingTeeth, \r\n                         FunctionalAnalysis_Adls" +
                "AxTyingShoeLace, FunctionalAnalysis_AdlsAxWashingDishes, FunctionalAnalysis_Adls" +
                "AxSweepingFloor, FunctionalAnalysis_AdlsAxOthers, \r\n                         Ass" +
                "essment_Diagnosis, Assessment_PTImpression, Assessment_ProblemList, Assessment_L" +
                "ongTermGoals, Assessment_ShortTermGoals, Plan_PTManagement, \r\n                  " +
                "       Plan_HomeInstruction, FunctionalAnalysis_AdlsAxOthersText, CardioPulmonar" +
                "yAssmt_BodyType, CardioPulmonaryAssmt_ChestShape, \r\n                         Car" +
                "dioPulmonaryAssmt_ChestShapeOthers, PulmonaryAssmt_SpmMucoid, PulmonaryAssmt_Spm" +
                "Frothy, PulmonaryAssmt_SpmMucopurulent, \r\n                         PulmonaryAssm" +
                "t_SpmHemoptysis, PulmonaryAssmt_SpmPurulent, PulmonaryAssmt_SpmOthers, Pulmonary" +
                "Assmt_SpmOthersText, PulmonaryAssmt_MdShift, \r\n                         Pulmonar" +
                "yAssmt_MdShiftFindings, PulmonaryAssmt_MdShiftSignificance, PulmonaryAssmt_Fremi" +
                "tus, PulmonaryAssmt_FremitusFindings, \r\n                         PulmonaryAssmt_" +
                "FremitusSignificance, PulmonaryAssmt_ChstExpULE, PulmonaryAssmt_ChstExpMLE, Pulm" +
                "onaryAssmt_ChstExpLLE, \r\n                         PulmonaryAssmt_ChstExpSig, Pul" +
                "monaryAssmt_Percussion, PulmonaryAssmt_PercussionOthers, PulmonaryAssmt_SixMinWa" +
                "lk, \r\n                         PulmonaryAssmt_SixMinWalkFindings, PulmonaryAssmt" +
                "_StairClimbing, PulmonaryAssmt_StairClimbingFindings, PulmonaryAssmt_ShuttleTest" +
                ", \r\n                         PulmonaryAssmt_ShuttleTestFindings, PulmonaryAssmt_" +
                "OtherTest, PulmonaryAssmt_OtherTestFindings, CMAxilla_MaxInsT1, CMAxilla_MaxInsT" +
                "2, \r\n                         CMAxilla_MaxInsT3, CMAxilla_MaxInsAve, CMAxilla_Ma" +
                "xExpT1, CMAxilla_MaxExpT2, CMAxilla_MaxExpT3, CMAxilla_MaxExpAve, CMAxilla_DiffT" +
                "1, \r\n                         CMAxilla_DiffT2, CMAxilla_DiffT3, CMAxilla_DiffAve" +
                ", CMXiphoid_MaxInsT1, CMXiphoid_MaxInsT2, CMXiphoid_MaxInsT3, CMXiphoid_MaxInsAv" +
                "e, \r\n                         CMXiphoid_MaxExpT1, CMXiphoid_MaxExpT2, CMXiphoid_" +
                "MaxExpT3, CMXiphoid_MaxExpAve, CMXiphoid_DiffT1, CMXiphoid_DiffT2, CMXiphoid_Dif" +
                "fT3, \r\n                         CMXiphoid_DiffAve, CMLowerCostal_MaxInsT1, CMLow" +
                "erCostal_MaxInsT2, CMLowerCostal_MaxInsT3, CMLowerCostal_MaxInsAve, CMLowerCosta" +
                "l_MaxExpT1, \r\n                         CMLowerCostal_MaxExpT2, CMLowerCostal_Max" +
                "ExpT3, CMLowerCostal_MaxExpAve, CMLowerCostal_DiffT1, CMLowerCostal_DiffT2, CMLo" +
                "werCostal_DiffT3, \r\n                         CMLowerCostal_DiffAve, Auscultation" +
                "_Trachael, Auscultation_Bronchial, Auscultation_Bronchiovesicular, Auscultation_" +
                "Vesicular, Auscultation_Crackles, \r\n                         Auscultation_Dimini" +
                "shedBreathSounds, Auscultation_HighPitchedBronchialBreathing, Auscultation_LowPi" +
                "tchedBronchialBreathing, Auscultation_PleuralRub, \r\n                         Aus" +
                "cultation_Rhonchi, Auscultation_Stridor, Auscultation_Wheeze, Auscultation_Other" +
                "s, Auscultation_OthersText, FigureOfEight_Right, FigureOfEight_Left, \r\n         " +
                "                FigureOfEight_Difference, FigureOfEight_Findings, FigureOfEight_" +
                "Significance\r\nFROM            PatientVisits\r\nWHERE        (PatientVisitId = @id)" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.PatientVisitsDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.PatientVisitsDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.PatientVisitsDataTable dataTable = new SoapDataSet.PatientVisitsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.PatientVisitsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PatientVisits");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PatientVisitId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FirstName, 
                    string LastName, 
                    int Age, 
                    string CivilStatus, 
                    string HandedNess, 
                    string Occupation, 
                    string Address, 
                    string Religion, 
                    global::System.Nullable<global::System.DateTime> DateOfConsultation, 
                    string PatientType, 
                    string GeneralPhysician, 
                    global::System.Nullable<global::System.DateTime> DateOfReferral, 
                    string Neurologist, 
                    string HPI, 
                    int PatientId, 
                    string Sex, 
                    string CityTown, 
                    string Province, 
                    global::System.Nullable<global::System.DateTime> DateOfAdmission, 
                    string Surgeon, 
                    global::System.Nullable<global::System.DateTime> DateOfSurgery, 
                    string Orthopedic, 
                    string Cardiologist, 
                    string Opthalmologoist, 
                    string Pulmonologist, 
                    string OtherDoctor, 
                    string ReferringDoctor, 
                    global::System.Nullable<global::System.DateTime> DateOfInitialEvaluation, 
                    string Diagnosis, 
                    bool PMHx_Trauma, 
                    bool PMHx_Arthritis, 
                    bool PMHx_HPN, 
                    bool PMHx_DM, 
                    bool PMHx_Allergies, 
                    bool PMHx_Surgery, 
                    global::System.Nullable<global::System.DateTime> PMHx_SurgeryDate, 
                    bool PMHx_CardiovascularDisease, 
                    bool PMHx_PulmonaryCondition, 
                    bool PMHx_NeurologyCondition, 
                    bool PMHx_Cancer, 
                    string PMHx_Others, 
                    bool FMHx_HypertensionF, 
                    bool FMHx_HypertensionM, 
                    bool FMHx_ArthritisF, 
                    bool FMHx_ArthritisM, 
                    bool FMHx_DiabetesMellitusF, 
                    bool FMHx_DiabetesMellitusM, 
                    bool FMHx_CancerF, 
                    bool FMHx_CancerM, 
                    bool FMHx_AsthmaF, 
                    bool FMHx_AsthmaM, 
                    bool FMHx_AllergiesF, 
                    bool FMHx_AllergiesM, 
                    bool FMHx_NeurologicConditionF, 
                    bool FMHx_NeurologicConditionM, 
                    string FMHx_Others, 
                    bool FMHx_OthersF, 
                    bool FMHx_OthersM, 
                    string PSEHx_FinancialStatus, 
                    string PSEHx_PersonalityType, 
                    string PSEHx_LifeStyle, 
                    string PSEHx_EducationalAttainment, 
                    string PSEHx_LivesWith, 
                    int PSEHx_NumberOfOffspring, 
                    string PSEHx_Relatives, 
                    string PSEHx_OtherLivesWith, 
                    string PSEHx_Hobbies, 
                    string PSEHx_Sports, 
                    string PSEHx_OtherHobbies, 
                    bool PSEHx_CigaretteSmoker, 
                    bool PSEHx_AlcoholDrinker, 
                    string PSEHx_TypeOfHouse, 
                    string PSEHx_OtherTypeOfHouse, 
                    string PMHx_TraumaText, 
                    string PMHx_DMText, 
                    string PMHx_SurgeryText, 
                    bool PMHx_Hospitalization, 
                    string PMHx_HospitalizationText, 
                    global::System.Nullable<global::System.DateTime> PMHx_HospitalizationDate, 
                    string PMHx_CardiovascularDiseaseText, 
                    string PMHx_PulmonaryConditionText, 
                    string PMHx_NeurologyConditionText, 
                    string PMHx_ArthritisText, 
                    global::System.Nullable<global::System.DateTime> PMHx_AsthmaDate, 
                    global::System.Nullable<bool> PMHx_Asthma, 
                    string RomFindings, 
                    string RomSignificance, 
                    string MmtFindings, 
                    string MmtSignificance, 
                    string SensoryFindings, 
                    string SensorySignificance, 
                    string CranialNerveAssmtFindings, 
                    string CranialNerveAssmtSignificance, 
                    string CoordinationAssmtFindings, 
                    string CoordinationAssmtSignificance, 
                    string MbmFindings, 
                    string MbmSignificance, 
                    string SubjectiveObjective_ChiefComplaint, 
                    string SubjectiveObjective_PtTranslation, 
                    string SubjectiveObjective_BPBefore, 
                    string SubjectiveObjective_BPAfter, 
                    string SubjectiveObjective_RRBefore, 
                    string SubjectiveObjective_RRAfter, 
                    string SubjectiveObjective_PRBefore, 
                    string SubjectiveObjective_PRAfter, 
                    string SubjectiveObjective_TBefore, 
                    string SubjectiveObjective_TAfter, 
                    string SubjectiveObjective_Findings, 
                    string SubjectiveObjective_Significance, 
                    bool OcularInspection_Ambulation, 
                    bool OcularInspection_TADWheelChair, 
                    string OcularInspection_TADCruches, 
                    string OcularInspection_TADCane, 
                    string OcularInspection_TADWalker, 
                    bool OcularInspection_Alert, 
                    bool OcularInspection_Coherent, 
                    bool OcularInspection_Cooperative, 
                    string OcularInspection_BodyType, 
                    string OcularInspection_Atrophy, 
                    string OcularInspection_Swelling, 
                    string OcularInspection_Redness, 
                    string OcularInspection_Ecchymosis, 
                    string OcularInspection_Deformity, 
                    string OcularInspection_Wounds, 
                    string OcularInspection_Scar, 
                    string OcularInspection_PressureSore, 
                    bool OcularInspection_GaitDeviation, 
                    string OcularInspection_Incision, 
                    bool OcularInspection_ShortnessOfBreathing, 
                    string OcularInspection_Others, 
                    string Palpation_BodyTemperature, 
                    string Palpation_MuscleTone, 
                    string Palpation_Edema, 
                    string Palpation_Tenderness, 
                    string Palpation_Location, 
                    string Palpation_Deformity, 
                    bool Palpation_MuscleGuarding, 
                    bool Palpation_MuscleSpasm, 
                    bool Palpation_Subluxation, 
                    bool Palpation_Dislocation, 
                    string CognitiveAssmt_STQuestion, 
                    string CognitiveAssmt_STResponse, 
                    string CognitiveAssmt_LTQuestion, 
                    string CognitiveAssmt_LTResponse, 
                    string CognitiveAssmt_Findings, 
                    string CognitiveAssmt_Significance, 
                    string BalanceTolerance_SittingBalance, 
                    string BalanceTolerance_SittingTolerance, 
                    string BalanceTolerance_StandingBalance, 
                    string BalanceTolerance_StandingTolerance, 
                    string BalanceTolerance_Findings, 
                    string BalanceTolerance_Significance, 
                    string DeepTendonReflex_LeftHand, 
                    string DeepTendonReflex_RightHand, 
                    string DeepTendonReflex_LeftElbow, 
                    string DeepTendonReflex_RightElbow, 
                    string DeepTendonReflex_LeftKnee, 
                    string DeepTendonReflex_RightKnee, 
                    string DeepTendonReflex_LeftFoot, 
                    string DeepTendonReflex_RightFoot, 
                    string DeepTendonReflex_Findings, 
                    string DeepTendonReflex_Significance, 
                    string PosturalAssmtFindings, 
                    string PosturalAssmtSignificance, 
                    decimal HandGripStrength_T1RightHand, 
                    decimal HandGripStrength_T1LeftHand, 
                    decimal HandGripStrength_T2RightHand, 
                    decimal HandGripStrength_T2LeftHand, 
                    decimal HandGripStrength_T3RightHand, 
                    decimal HandGripStrength_T3LeftHand, 
                    decimal HandGripStrength_AveRightHand, 
                    decimal HandGripStrength_AveLeftHand, 
                    string HandGripStrength_Findings, 
                    string HandGripStrength_Significance, 
                    decimal VolumetricMeasurement_Right, 
                    decimal VolumetricMeasurement_Left, 
                    decimal VolumetricMeasurement_Difference, 
                    string VolumetricMeasurement_Findings, 
                    string VolumetricMeasurement_Significance, 
                    bool AnteriorView_HeadInMidline, 
                    string AnteriorView_HeadInMidlineFindings, 
                    bool AnteriorView_ShouldersInLevel, 
                    string AnteriorView_ShouldersInLevelFindings, 
                    bool AnteriorView_Protrusion, 
                    string AnteriorView_ProtrusionFindings, 
                    bool AnteriorView_Lateralization, 
                    string AnteriorView_LateralizationFindings, 
                    bool AnteriorView_Depression, 
                    string AnteriorView_DepressionFindings, 
                    decimal AnteriorView_WaistAngle, 
                    string AnteriorView_ArmPosition, 
                    decimal AnteriorView_CarryingAngle, 
                    string AnteriorView_ASISLevel, 
                    string AnteriorView_PatellaeAlignment, 
                    string AnteriorView_KneeAlignment, 
                    string AnteriorView_MalleoliLevel, 
                    string AnteriorView_ArchesOfFeet, 
                    bool AnteriorView_FeetAngle, 
                    string AnteriorView_FeetAngleFindings, 
                    bool PosteriorView_HeadInMidline, 
                    string PosteriorView_HeadInMidlineFindings, 
                    bool PosteriorView_ShouldersInLevel, 
                    string PosteriorView_ShouldersInLevelFindings, 
                    bool PosteriorView_SpineScapularLevel, 
                    string PosteriorView_SpineScapularLevelFindings, 
                    bool PosteriorView_SpineInMidline, 
                    string PosteriorView_SpineInMidlineFindings, 
                    decimal PosteriorView_WaistLevelAngle, 
                    string PosteriorView_ArmPosition, 
                    string PosteriorView_IliacCrestlevel, 
                    string PosteriorView_PSISLevel, 
                    string PosteriorView_GlutealFoldsLevel, 
                    string PosteriorView_PoplitealFoassalevel, 
                    string PosteriorView_HeelsPosition, 
                    bool LateralView_EarlobeShoulderAlignment, 
                    string LateralView_EarlobeShoulderAlignmentFindings, 
                    bool LateralView_AcromioIliacAlignment, 
                    string LateralView_AcromioIliacAlignmentFindings, 
                    string LateralView_SpinalSegments, 
                    string LateralView_ShoulderAlignment, 
                    decimal LateralView_PelvicAngle, 
                    string LateralView_KneeAlignment, 
                    bool LateralView_PlumblineAlignment, 
                    string LateralView_PlumblineAlignmentFindings, 
                    string LateralView_ArchesOfFeet, 
                    string GaitAssessment_Asssessment, 
                    bool GaitAssessment_RInitialLoading, 
                    bool GaitAssessment_LInitialLoading, 
                    bool GaitAssessment_RLoadingResponse, 
                    bool GaitAssessment_LLoadingResponse, 
                    bool GaitAssessment_RMidStance, 
                    bool GaitAssessment_LMidStance, 
                    bool GaitAssessment_RTerminalStance, 
                    bool GaitAssessment_LTerminalStance, 
                    bool GaitAssessment_RPreSwing, 
                    bool GaitAssessment_LPreSwing, 
                    bool GaitAssessment_RInitialSwing, 
                    bool GaitAssessment_LInitialPreSwing, 
                    bool GaitAssessment_RMidSwing, 
                    bool GaitAssessment_LMidPreSwing, 
                    bool GaitAssessment_RTerminalSwing, 
                    bool GaitAssessment_LTerminalSwing, 
                    string GaitAssessment_Findings, 
                    string GaitAssessment_Significance, 
                    bool FunctionalAnalysis_AdlsAxWriting, 
                    bool FunctionalAnalysis_AdlsAxCleaningHouse, 
                    bool FunctionalAnalysis_AdlsAxCooking, 
                    bool FunctionalAnalysis_AdlsAxEating, 
                    bool FunctionalAnalysis_AdlsAxTurningDoorKnob, 
                    bool FunctionalAnalysis_AdlsAxUsingKeys, 
                    bool FunctionalAnalysis_AdlsAxOpeningBottle, 
                    bool FunctionalAnalysis_AdlsAxBrushingTeeth, 
                    bool FunctionalAnalysis_AdlsAxTyingShoeLace, 
                    bool FunctionalAnalysis_AdlsAxWashingDishes, 
                    bool FunctionalAnalysis_AdlsAxSweepingFloor, 
                    bool FunctionalAnalysis_AdlsAxOthers, 
                    string Assessment_Diagnosis, 
                    string Assessment_PTImpression, 
                    string Assessment_ProblemList, 
                    string Assessment_LongTermGoals, 
                    string Assessment_ShortTermGoals, 
                    string Plan_PTManagement, 
                    string Plan_HomeInstruction, 
                    string FunctionalAnalysis_AdlsAxOthersText, 
                    string CardioPulmonaryAssmt_BodyType, 
                    string CardioPulmonaryAssmt_ChestShape, 
                    string CardioPulmonaryAssmt_ChestShapeOthers, 
                    bool PulmonaryAssmt_SpmMucoid, 
                    bool PulmonaryAssmt_SpmFrothy, 
                    bool PulmonaryAssmt_SpmMucopurulent, 
                    bool PulmonaryAssmt_SpmHemoptysis, 
                    bool PulmonaryAssmt_SpmPurulent, 
                    bool PulmonaryAssmt_SpmOthers, 
                    string PulmonaryAssmt_SpmOthersText, 
                    string PulmonaryAssmt_MdShift, 
                    string PulmonaryAssmt_MdShiftFindings, 
                    string PulmonaryAssmt_MdShiftSignificance, 
                    string PulmonaryAssmt_Fremitus, 
                    string PulmonaryAssmt_FremitusFindings, 
                    string PulmonaryAssmt_FremitusSignificance, 
                    string PulmonaryAssmt_ChstExpULE, 
                    string PulmonaryAssmt_ChstExpMLE, 
                    string PulmonaryAssmt_ChstExpLLE, 
                    string PulmonaryAssmt_ChstExpSig, 
                    string PulmonaryAssmt_Percussion, 
                    string PulmonaryAssmt_PercussionOthers, 
                    bool PulmonaryAssmt_SixMinWalk, 
                    string PulmonaryAssmt_SixMinWalkFindings, 
                    bool PulmonaryAssmt_StairClimbing, 
                    string PulmonaryAssmt_StairClimbingFindings, 
                    bool PulmonaryAssmt_ShuttleTest, 
                    string PulmonaryAssmt_ShuttleTestFindings, 
                    bool PulmonaryAssmt_OtherTest, 
                    string PulmonaryAssmt_OtherTestFindings, 
                    decimal CMAxilla_MaxInsT1, 
                    decimal CMAxilla_MaxInsT2, 
                    decimal CMAxilla_MaxInsT3, 
                    decimal CMAxilla_MaxInsAve, 
                    decimal CMAxilla_MaxExpT1, 
                    decimal CMAxilla_MaxExpT2, 
                    decimal CMAxilla_MaxExpT3, 
                    decimal CMAxilla_MaxExpAve, 
                    decimal CMAxilla_DiffT1, 
                    decimal CMAxilla_DiffT2, 
                    decimal CMAxilla_DiffT3, 
                    decimal CMAxilla_DiffAve, 
                    decimal CMXiphoid_MaxInsT1, 
                    decimal CMXiphoid_MaxInsT2, 
                    decimal CMXiphoid_MaxInsT3, 
                    decimal CMXiphoid_MaxInsAve, 
                    decimal CMXiphoid_MaxExpT1, 
                    decimal CMXiphoid_MaxExpT2, 
                    decimal CMXiphoid_MaxExpT3, 
                    decimal CMXiphoid_MaxExpAve, 
                    decimal CMXiphoid_DiffT1, 
                    decimal CMXiphoid_DiffT2, 
                    decimal CMXiphoid_DiffT3, 
                    decimal CMXiphoid_DiffAve, 
                    decimal CMLowerCostal_MaxInsT1, 
                    decimal CMLowerCostal_MaxInsT2, 
                    decimal CMLowerCostal_MaxInsT3, 
                    decimal CMLowerCostal_MaxInsAve, 
                    decimal CMLowerCostal_MaxExpT1, 
                    decimal CMLowerCostal_MaxExpT2, 
                    decimal CMLowerCostal_MaxExpT3, 
                    decimal CMLowerCostal_MaxExpAve, 
                    decimal CMLowerCostal_DiffT1, 
                    decimal CMLowerCostal_DiffT2, 
                    decimal CMLowerCostal_DiffT3, 
                    decimal CMLowerCostal_DiffAve, 
                    bool Auscultation_Trachael, 
                    bool Auscultation_Bronchial, 
                    bool Auscultation_Bronchiovesicular, 
                    bool Auscultation_Vesicular, 
                    bool Auscultation_Crackles, 
                    bool Auscultation_DiminishedBreathSounds, 
                    bool Auscultation_HighPitchedBronchialBreathing, 
                    bool Auscultation_LowPitchedBronchialBreathing, 
                    bool Auscultation_PleuralRub, 
                    bool Auscultation_Rhonchi, 
                    bool Auscultation_Stridor, 
                    bool Auscultation_Wheeze, 
                    bool Auscultation_Others, 
                    string Auscultation_OthersText, 
                    decimal FigureOfEight_Right, 
                    decimal FigureOfEight_Left, 
                    decimal FigureOfEight_Difference, 
                    string FigureOfEight_Findings, 
                    string FigureOfEight_Significance) {
            if ((FirstName == null)) {
                throw new global::System.ArgumentNullException("FirstName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                throw new global::System.ArgumentNullException("LastName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LastName));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Age));
            if ((CivilStatus == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CivilStatus));
            }
            if ((HandedNess == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(HandedNess));
            }
            if ((Occupation == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Occupation));
            }
            if ((Address == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Address));
            }
            if ((Religion == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Religion));
            }
            if ((DateOfConsultation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(DateOfConsultation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PatientType == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(PatientType));
            }
            if ((GeneralPhysician == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(GeneralPhysician));
            }
            if ((DateOfReferral.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(DateOfReferral.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Neurologist == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Neurologist));
            }
            if ((HPI == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(HPI));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(PatientId));
            if ((Sex == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Sex));
            }
            if ((CityTown == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(CityTown));
            }
            if ((Province == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Province));
            }
            if ((DateOfAdmission.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(DateOfAdmission.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Surgeon == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Surgeon));
            }
            if ((DateOfSurgery.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(DateOfSurgery.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Orthopedic == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Orthopedic));
            }
            if ((Cardiologist == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Cardiologist));
            }
            if ((Opthalmologoist == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Opthalmologoist));
            }
            if ((Pulmonologist == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Pulmonologist));
            }
            if ((OtherDoctor == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(OtherDoctor));
            }
            if ((ReferringDoctor == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(ReferringDoctor));
            }
            if ((DateOfInitialEvaluation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(DateOfInitialEvaluation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Diagnosis == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Diagnosis));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(PMHx_Trauma));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(PMHx_Arthritis));
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(PMHx_HPN));
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(PMHx_DM));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(PMHx_Allergies));
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(PMHx_Surgery));
            if ((PMHx_SurgeryDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(PMHx_SurgeryDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(PMHx_CardiovascularDisease));
            this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(PMHx_PulmonaryCondition));
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(PMHx_NeurologyCondition));
            this.Adapter.InsertCommand.Parameters[39].Value = ((bool)(PMHx_Cancer));
            if ((PMHx_Others == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(PMHx_Others));
            }
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(FMHx_HypertensionF));
            this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(FMHx_HypertensionM));
            this.Adapter.InsertCommand.Parameters[43].Value = ((bool)(FMHx_ArthritisF));
            this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(FMHx_ArthritisM));
            this.Adapter.InsertCommand.Parameters[45].Value = ((bool)(FMHx_DiabetesMellitusF));
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(FMHx_DiabetesMellitusM));
            this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(FMHx_CancerF));
            this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(FMHx_CancerM));
            this.Adapter.InsertCommand.Parameters[49].Value = ((bool)(FMHx_AsthmaF));
            this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(FMHx_AsthmaM));
            this.Adapter.InsertCommand.Parameters[51].Value = ((bool)(FMHx_AllergiesF));
            this.Adapter.InsertCommand.Parameters[52].Value = ((bool)(FMHx_AllergiesM));
            this.Adapter.InsertCommand.Parameters[53].Value = ((bool)(FMHx_NeurologicConditionF));
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(FMHx_NeurologicConditionM));
            if ((FMHx_Others == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(FMHx_Others));
            }
            this.Adapter.InsertCommand.Parameters[56].Value = ((bool)(FMHx_OthersF));
            this.Adapter.InsertCommand.Parameters[57].Value = ((bool)(FMHx_OthersM));
            if ((PSEHx_FinancialStatus == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(PSEHx_FinancialStatus));
            }
            if ((PSEHx_PersonalityType == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(PSEHx_PersonalityType));
            }
            if ((PSEHx_LifeStyle == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(PSEHx_LifeStyle));
            }
            if ((PSEHx_EducationalAttainment == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(PSEHx_EducationalAttainment));
            }
            if ((PSEHx_LivesWith == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(PSEHx_LivesWith));
            }
            this.Adapter.InsertCommand.Parameters[63].Value = ((int)(PSEHx_NumberOfOffspring));
            if ((PSEHx_Relatives == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(PSEHx_Relatives));
            }
            if ((PSEHx_OtherLivesWith == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(PSEHx_OtherLivesWith));
            }
            if ((PSEHx_Hobbies == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(PSEHx_Hobbies));
            }
            if ((PSEHx_Sports == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(PSEHx_Sports));
            }
            if ((PSEHx_OtherHobbies == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(PSEHx_OtherHobbies));
            }
            this.Adapter.InsertCommand.Parameters[69].Value = ((bool)(PSEHx_CigaretteSmoker));
            this.Adapter.InsertCommand.Parameters[70].Value = ((bool)(PSEHx_AlcoholDrinker));
            if ((PSEHx_TypeOfHouse == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(PSEHx_TypeOfHouse));
            }
            if ((PSEHx_OtherTypeOfHouse == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(PSEHx_OtherTypeOfHouse));
            }
            if ((PMHx_TraumaText == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(PMHx_TraumaText));
            }
            if ((PMHx_DMText == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(PMHx_DMText));
            }
            if ((PMHx_SurgeryText == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(PMHx_SurgeryText));
            }
            this.Adapter.InsertCommand.Parameters[76].Value = ((bool)(PMHx_Hospitalization));
            if ((PMHx_HospitalizationText == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(PMHx_HospitalizationText));
            }
            if ((PMHx_HospitalizationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((System.DateTime)(PMHx_HospitalizationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((PMHx_CardiovascularDiseaseText == null)) {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = ((string)(PMHx_CardiovascularDiseaseText));
            }
            if ((PMHx_PulmonaryConditionText == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(PMHx_PulmonaryConditionText));
            }
            if ((PMHx_NeurologyConditionText == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(PMHx_NeurologyConditionText));
            }
            if ((PMHx_ArthritisText == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(PMHx_ArthritisText));
            }
            if ((PMHx_AsthmaDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((System.DateTime)(PMHx_AsthmaDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((PMHx_Asthma.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((bool)(PMHx_Asthma.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((RomFindings == null)) {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = ((string)(RomFindings));
            }
            if ((RomSignificance == null)) {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = ((string)(RomSignificance));
            }
            if ((MmtFindings == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(MmtFindings));
            }
            if ((MmtSignificance == null)) {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(MmtSignificance));
            }
            if ((SensoryFindings == null)) {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = ((string)(SensoryFindings));
            }
            if ((SensorySignificance == null)) {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = ((string)(SensorySignificance));
            }
            if ((CranialNerveAssmtFindings == null)) {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = ((string)(CranialNerveAssmtFindings));
            }
            if ((CranialNerveAssmtSignificance == null)) {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = ((string)(CranialNerveAssmtSignificance));
            }
            if ((CoordinationAssmtFindings == null)) {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = ((string)(CoordinationAssmtFindings));
            }
            if ((CoordinationAssmtSignificance == null)) {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = ((string)(CoordinationAssmtSignificance));
            }
            if ((MbmFindings == null)) {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = ((string)(MbmFindings));
            }
            if ((MbmSignificance == null)) {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = ((string)(MbmSignificance));
            }
            if ((SubjectiveObjective_ChiefComplaint == null)) {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = ((string)(SubjectiveObjective_ChiefComplaint));
            }
            if ((SubjectiveObjective_PtTranslation == null)) {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = ((string)(SubjectiveObjective_PtTranslation));
            }
            if ((SubjectiveObjective_BPBefore == null)) {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = ((string)(SubjectiveObjective_BPBefore));
            }
            if ((SubjectiveObjective_BPAfter == null)) {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = ((string)(SubjectiveObjective_BPAfter));
            }
            if ((SubjectiveObjective_RRBefore == null)) {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = ((string)(SubjectiveObjective_RRBefore));
            }
            if ((SubjectiveObjective_RRAfter == null)) {
                this.Adapter.InsertCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[102].Value = ((string)(SubjectiveObjective_RRAfter));
            }
            if ((SubjectiveObjective_PRBefore == null)) {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = ((string)(SubjectiveObjective_PRBefore));
            }
            if ((SubjectiveObjective_PRAfter == null)) {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = ((string)(SubjectiveObjective_PRAfter));
            }
            if ((SubjectiveObjective_TBefore == null)) {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = ((string)(SubjectiveObjective_TBefore));
            }
            if ((SubjectiveObjective_TAfter == null)) {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = ((string)(SubjectiveObjective_TAfter));
            }
            if ((SubjectiveObjective_Findings == null)) {
                this.Adapter.InsertCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = ((string)(SubjectiveObjective_Findings));
            }
            if ((SubjectiveObjective_Significance == null)) {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = ((string)(SubjectiveObjective_Significance));
            }
            this.Adapter.InsertCommand.Parameters[109].Value = ((bool)(OcularInspection_Ambulation));
            this.Adapter.InsertCommand.Parameters[110].Value = ((bool)(OcularInspection_TADWheelChair));
            if ((OcularInspection_TADCruches == null)) {
                this.Adapter.InsertCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[111].Value = ((string)(OcularInspection_TADCruches));
            }
            if ((OcularInspection_TADCane == null)) {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = ((string)(OcularInspection_TADCane));
            }
            if ((OcularInspection_TADWalker == null)) {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = ((string)(OcularInspection_TADWalker));
            }
            this.Adapter.InsertCommand.Parameters[114].Value = ((bool)(OcularInspection_Alert));
            this.Adapter.InsertCommand.Parameters[115].Value = ((bool)(OcularInspection_Coherent));
            this.Adapter.InsertCommand.Parameters[116].Value = ((bool)(OcularInspection_Cooperative));
            if ((OcularInspection_BodyType == null)) {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = ((string)(OcularInspection_BodyType));
            }
            if ((OcularInspection_Atrophy == null)) {
                this.Adapter.InsertCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = ((string)(OcularInspection_Atrophy));
            }
            if ((OcularInspection_Swelling == null)) {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = ((string)(OcularInspection_Swelling));
            }
            if ((OcularInspection_Redness == null)) {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = ((string)(OcularInspection_Redness));
            }
            if ((OcularInspection_Ecchymosis == null)) {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((string)(OcularInspection_Ecchymosis));
            }
            if ((OcularInspection_Deformity == null)) {
                this.Adapter.InsertCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[122].Value = ((string)(OcularInspection_Deformity));
            }
            if ((OcularInspection_Wounds == null)) {
                this.Adapter.InsertCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[123].Value = ((string)(OcularInspection_Wounds));
            }
            if ((OcularInspection_Scar == null)) {
                this.Adapter.InsertCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[124].Value = ((string)(OcularInspection_Scar));
            }
            if ((OcularInspection_PressureSore == null)) {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = ((string)(OcularInspection_PressureSore));
            }
            this.Adapter.InsertCommand.Parameters[126].Value = ((bool)(OcularInspection_GaitDeviation));
            if ((OcularInspection_Incision == null)) {
                this.Adapter.InsertCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[127].Value = ((string)(OcularInspection_Incision));
            }
            this.Adapter.InsertCommand.Parameters[128].Value = ((bool)(OcularInspection_ShortnessOfBreathing));
            if ((OcularInspection_Others == null)) {
                this.Adapter.InsertCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[129].Value = ((string)(OcularInspection_Others));
            }
            if ((Palpation_BodyTemperature == null)) {
                this.Adapter.InsertCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[130].Value = ((string)(Palpation_BodyTemperature));
            }
            if ((Palpation_MuscleTone == null)) {
                this.Adapter.InsertCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[131].Value = ((string)(Palpation_MuscleTone));
            }
            if ((Palpation_Edema == null)) {
                this.Adapter.InsertCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[132].Value = ((string)(Palpation_Edema));
            }
            if ((Palpation_Tenderness == null)) {
                this.Adapter.InsertCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[133].Value = ((string)(Palpation_Tenderness));
            }
            if ((Palpation_Location == null)) {
                this.Adapter.InsertCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[134].Value = ((string)(Palpation_Location));
            }
            if ((Palpation_Deformity == null)) {
                this.Adapter.InsertCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[135].Value = ((string)(Palpation_Deformity));
            }
            this.Adapter.InsertCommand.Parameters[136].Value = ((bool)(Palpation_MuscleGuarding));
            this.Adapter.InsertCommand.Parameters[137].Value = ((bool)(Palpation_MuscleSpasm));
            this.Adapter.InsertCommand.Parameters[138].Value = ((bool)(Palpation_Subluxation));
            this.Adapter.InsertCommand.Parameters[139].Value = ((bool)(Palpation_Dislocation));
            if ((CognitiveAssmt_STQuestion == null)) {
                this.Adapter.InsertCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[140].Value = ((string)(CognitiveAssmt_STQuestion));
            }
            if ((CognitiveAssmt_STResponse == null)) {
                this.Adapter.InsertCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[141].Value = ((string)(CognitiveAssmt_STResponse));
            }
            if ((CognitiveAssmt_LTQuestion == null)) {
                this.Adapter.InsertCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[142].Value = ((string)(CognitiveAssmt_LTQuestion));
            }
            if ((CognitiveAssmt_LTResponse == null)) {
                this.Adapter.InsertCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[143].Value = ((string)(CognitiveAssmt_LTResponse));
            }
            if ((CognitiveAssmt_Findings == null)) {
                this.Adapter.InsertCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[144].Value = ((string)(CognitiveAssmt_Findings));
            }
            if ((CognitiveAssmt_Significance == null)) {
                this.Adapter.InsertCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[145].Value = ((string)(CognitiveAssmt_Significance));
            }
            if ((BalanceTolerance_SittingBalance == null)) {
                this.Adapter.InsertCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[146].Value = ((string)(BalanceTolerance_SittingBalance));
            }
            if ((BalanceTolerance_SittingTolerance == null)) {
                this.Adapter.InsertCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[147].Value = ((string)(BalanceTolerance_SittingTolerance));
            }
            if ((BalanceTolerance_StandingBalance == null)) {
                this.Adapter.InsertCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[148].Value = ((string)(BalanceTolerance_StandingBalance));
            }
            if ((BalanceTolerance_StandingTolerance == null)) {
                this.Adapter.InsertCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[149].Value = ((string)(BalanceTolerance_StandingTolerance));
            }
            if ((BalanceTolerance_Findings == null)) {
                this.Adapter.InsertCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[150].Value = ((string)(BalanceTolerance_Findings));
            }
            if ((BalanceTolerance_Significance == null)) {
                this.Adapter.InsertCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[151].Value = ((string)(BalanceTolerance_Significance));
            }
            if ((DeepTendonReflex_LeftHand == null)) {
                this.Adapter.InsertCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[152].Value = ((string)(DeepTendonReflex_LeftHand));
            }
            if ((DeepTendonReflex_RightHand == null)) {
                this.Adapter.InsertCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[153].Value = ((string)(DeepTendonReflex_RightHand));
            }
            if ((DeepTendonReflex_LeftElbow == null)) {
                this.Adapter.InsertCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[154].Value = ((string)(DeepTendonReflex_LeftElbow));
            }
            if ((DeepTendonReflex_RightElbow == null)) {
                this.Adapter.InsertCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[155].Value = ((string)(DeepTendonReflex_RightElbow));
            }
            if ((DeepTendonReflex_LeftKnee == null)) {
                this.Adapter.InsertCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[156].Value = ((string)(DeepTendonReflex_LeftKnee));
            }
            if ((DeepTendonReflex_RightKnee == null)) {
                this.Adapter.InsertCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[157].Value = ((string)(DeepTendonReflex_RightKnee));
            }
            if ((DeepTendonReflex_LeftFoot == null)) {
                this.Adapter.InsertCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[158].Value = ((string)(DeepTendonReflex_LeftFoot));
            }
            if ((DeepTendonReflex_RightFoot == null)) {
                this.Adapter.InsertCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[159].Value = ((string)(DeepTendonReflex_RightFoot));
            }
            if ((DeepTendonReflex_Findings == null)) {
                this.Adapter.InsertCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[160].Value = ((string)(DeepTendonReflex_Findings));
            }
            if ((DeepTendonReflex_Significance == null)) {
                this.Adapter.InsertCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[161].Value = ((string)(DeepTendonReflex_Significance));
            }
            if ((PosturalAssmtFindings == null)) {
                this.Adapter.InsertCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[162].Value = ((string)(PosturalAssmtFindings));
            }
            if ((PosturalAssmtSignificance == null)) {
                this.Adapter.InsertCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[163].Value = ((string)(PosturalAssmtSignificance));
            }
            this.Adapter.InsertCommand.Parameters[164].Value = ((decimal)(HandGripStrength_T1RightHand));
            this.Adapter.InsertCommand.Parameters[165].Value = ((decimal)(HandGripStrength_T1LeftHand));
            this.Adapter.InsertCommand.Parameters[166].Value = ((decimal)(HandGripStrength_T2RightHand));
            this.Adapter.InsertCommand.Parameters[167].Value = ((decimal)(HandGripStrength_T2LeftHand));
            this.Adapter.InsertCommand.Parameters[168].Value = ((decimal)(HandGripStrength_T3RightHand));
            this.Adapter.InsertCommand.Parameters[169].Value = ((decimal)(HandGripStrength_T3LeftHand));
            this.Adapter.InsertCommand.Parameters[170].Value = ((decimal)(HandGripStrength_AveRightHand));
            this.Adapter.InsertCommand.Parameters[171].Value = ((decimal)(HandGripStrength_AveLeftHand));
            if ((HandGripStrength_Findings == null)) {
                this.Adapter.InsertCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[172].Value = ((string)(HandGripStrength_Findings));
            }
            if ((HandGripStrength_Significance == null)) {
                this.Adapter.InsertCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[173].Value = ((string)(HandGripStrength_Significance));
            }
            this.Adapter.InsertCommand.Parameters[174].Value = ((decimal)(VolumetricMeasurement_Right));
            this.Adapter.InsertCommand.Parameters[175].Value = ((decimal)(VolumetricMeasurement_Left));
            this.Adapter.InsertCommand.Parameters[176].Value = ((decimal)(VolumetricMeasurement_Difference));
            if ((VolumetricMeasurement_Findings == null)) {
                this.Adapter.InsertCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[177].Value = ((string)(VolumetricMeasurement_Findings));
            }
            if ((VolumetricMeasurement_Significance == null)) {
                this.Adapter.InsertCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[178].Value = ((string)(VolumetricMeasurement_Significance));
            }
            this.Adapter.InsertCommand.Parameters[179].Value = ((bool)(AnteriorView_HeadInMidline));
            if ((AnteriorView_HeadInMidlineFindings == null)) {
                this.Adapter.InsertCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[180].Value = ((string)(AnteriorView_HeadInMidlineFindings));
            }
            this.Adapter.InsertCommand.Parameters[181].Value = ((bool)(AnteriorView_ShouldersInLevel));
            if ((AnteriorView_ShouldersInLevelFindings == null)) {
                this.Adapter.InsertCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[182].Value = ((string)(AnteriorView_ShouldersInLevelFindings));
            }
            this.Adapter.InsertCommand.Parameters[183].Value = ((bool)(AnteriorView_Protrusion));
            if ((AnteriorView_ProtrusionFindings == null)) {
                this.Adapter.InsertCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[184].Value = ((string)(AnteriorView_ProtrusionFindings));
            }
            this.Adapter.InsertCommand.Parameters[185].Value = ((bool)(AnteriorView_Lateralization));
            if ((AnteriorView_LateralizationFindings == null)) {
                this.Adapter.InsertCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[186].Value = ((string)(AnteriorView_LateralizationFindings));
            }
            this.Adapter.InsertCommand.Parameters[187].Value = ((bool)(AnteriorView_Depression));
            if ((AnteriorView_DepressionFindings == null)) {
                this.Adapter.InsertCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[188].Value = ((string)(AnteriorView_DepressionFindings));
            }
            this.Adapter.InsertCommand.Parameters[189].Value = ((decimal)(AnteriorView_WaistAngle));
            if ((AnteriorView_ArmPosition == null)) {
                this.Adapter.InsertCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[190].Value = ((string)(AnteriorView_ArmPosition));
            }
            this.Adapter.InsertCommand.Parameters[191].Value = ((decimal)(AnteriorView_CarryingAngle));
            if ((AnteriorView_ASISLevel == null)) {
                this.Adapter.InsertCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[192].Value = ((string)(AnteriorView_ASISLevel));
            }
            if ((AnteriorView_PatellaeAlignment == null)) {
                this.Adapter.InsertCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[193].Value = ((string)(AnteriorView_PatellaeAlignment));
            }
            if ((AnteriorView_KneeAlignment == null)) {
                this.Adapter.InsertCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[194].Value = ((string)(AnteriorView_KneeAlignment));
            }
            if ((AnteriorView_MalleoliLevel == null)) {
                this.Adapter.InsertCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[195].Value = ((string)(AnteriorView_MalleoliLevel));
            }
            if ((AnteriorView_ArchesOfFeet == null)) {
                this.Adapter.InsertCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[196].Value = ((string)(AnteriorView_ArchesOfFeet));
            }
            this.Adapter.InsertCommand.Parameters[197].Value = ((bool)(AnteriorView_FeetAngle));
            if ((AnteriorView_FeetAngleFindings == null)) {
                this.Adapter.InsertCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[198].Value = ((string)(AnteriorView_FeetAngleFindings));
            }
            this.Adapter.InsertCommand.Parameters[199].Value = ((bool)(PosteriorView_HeadInMidline));
            if ((PosteriorView_HeadInMidlineFindings == null)) {
                this.Adapter.InsertCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[200].Value = ((string)(PosteriorView_HeadInMidlineFindings));
            }
            this.Adapter.InsertCommand.Parameters[201].Value = ((bool)(PosteriorView_ShouldersInLevel));
            if ((PosteriorView_ShouldersInLevelFindings == null)) {
                this.Adapter.InsertCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[202].Value = ((string)(PosteriorView_ShouldersInLevelFindings));
            }
            this.Adapter.InsertCommand.Parameters[203].Value = ((bool)(PosteriorView_SpineScapularLevel));
            if ((PosteriorView_SpineScapularLevelFindings == null)) {
                this.Adapter.InsertCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[204].Value = ((string)(PosteriorView_SpineScapularLevelFindings));
            }
            this.Adapter.InsertCommand.Parameters[205].Value = ((bool)(PosteriorView_SpineInMidline));
            if ((PosteriorView_SpineInMidlineFindings == null)) {
                this.Adapter.InsertCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[206].Value = ((string)(PosteriorView_SpineInMidlineFindings));
            }
            this.Adapter.InsertCommand.Parameters[207].Value = ((decimal)(PosteriorView_WaistLevelAngle));
            if ((PosteriorView_ArmPosition == null)) {
                this.Adapter.InsertCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[208].Value = ((string)(PosteriorView_ArmPosition));
            }
            if ((PosteriorView_IliacCrestlevel == null)) {
                this.Adapter.InsertCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[209].Value = ((string)(PosteriorView_IliacCrestlevel));
            }
            if ((PosteriorView_PSISLevel == null)) {
                this.Adapter.InsertCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[210].Value = ((string)(PosteriorView_PSISLevel));
            }
            if ((PosteriorView_GlutealFoldsLevel == null)) {
                this.Adapter.InsertCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[211].Value = ((string)(PosteriorView_GlutealFoldsLevel));
            }
            if ((PosteriorView_PoplitealFoassalevel == null)) {
                this.Adapter.InsertCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[212].Value = ((string)(PosteriorView_PoplitealFoassalevel));
            }
            if ((PosteriorView_HeelsPosition == null)) {
                this.Adapter.InsertCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[213].Value = ((string)(PosteriorView_HeelsPosition));
            }
            this.Adapter.InsertCommand.Parameters[214].Value = ((bool)(LateralView_EarlobeShoulderAlignment));
            if ((LateralView_EarlobeShoulderAlignmentFindings == null)) {
                this.Adapter.InsertCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[215].Value = ((string)(LateralView_EarlobeShoulderAlignmentFindings));
            }
            this.Adapter.InsertCommand.Parameters[216].Value = ((bool)(LateralView_AcromioIliacAlignment));
            if ((LateralView_AcromioIliacAlignmentFindings == null)) {
                this.Adapter.InsertCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[217].Value = ((string)(LateralView_AcromioIliacAlignmentFindings));
            }
            if ((LateralView_SpinalSegments == null)) {
                this.Adapter.InsertCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[218].Value = ((string)(LateralView_SpinalSegments));
            }
            if ((LateralView_ShoulderAlignment == null)) {
                this.Adapter.InsertCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[219].Value = ((string)(LateralView_ShoulderAlignment));
            }
            this.Adapter.InsertCommand.Parameters[220].Value = ((decimal)(LateralView_PelvicAngle));
            if ((LateralView_KneeAlignment == null)) {
                this.Adapter.InsertCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[221].Value = ((string)(LateralView_KneeAlignment));
            }
            this.Adapter.InsertCommand.Parameters[222].Value = ((bool)(LateralView_PlumblineAlignment));
            if ((LateralView_PlumblineAlignmentFindings == null)) {
                this.Adapter.InsertCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[223].Value = ((string)(LateralView_PlumblineAlignmentFindings));
            }
            if ((LateralView_ArchesOfFeet == null)) {
                this.Adapter.InsertCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[224].Value = ((string)(LateralView_ArchesOfFeet));
            }
            if ((GaitAssessment_Asssessment == null)) {
                this.Adapter.InsertCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[225].Value = ((string)(GaitAssessment_Asssessment));
            }
            this.Adapter.InsertCommand.Parameters[226].Value = ((bool)(GaitAssessment_RInitialLoading));
            this.Adapter.InsertCommand.Parameters[227].Value = ((bool)(GaitAssessment_LInitialLoading));
            this.Adapter.InsertCommand.Parameters[228].Value = ((bool)(GaitAssessment_RLoadingResponse));
            this.Adapter.InsertCommand.Parameters[229].Value = ((bool)(GaitAssessment_LLoadingResponse));
            this.Adapter.InsertCommand.Parameters[230].Value = ((bool)(GaitAssessment_RMidStance));
            this.Adapter.InsertCommand.Parameters[231].Value = ((bool)(GaitAssessment_LMidStance));
            this.Adapter.InsertCommand.Parameters[232].Value = ((bool)(GaitAssessment_RTerminalStance));
            this.Adapter.InsertCommand.Parameters[233].Value = ((bool)(GaitAssessment_LTerminalStance));
            this.Adapter.InsertCommand.Parameters[234].Value = ((bool)(GaitAssessment_RPreSwing));
            this.Adapter.InsertCommand.Parameters[235].Value = ((bool)(GaitAssessment_LPreSwing));
            this.Adapter.InsertCommand.Parameters[236].Value = ((bool)(GaitAssessment_RInitialSwing));
            this.Adapter.InsertCommand.Parameters[237].Value = ((bool)(GaitAssessment_LInitialPreSwing));
            this.Adapter.InsertCommand.Parameters[238].Value = ((bool)(GaitAssessment_RMidSwing));
            this.Adapter.InsertCommand.Parameters[239].Value = ((bool)(GaitAssessment_LMidPreSwing));
            this.Adapter.InsertCommand.Parameters[240].Value = ((bool)(GaitAssessment_RTerminalSwing));
            this.Adapter.InsertCommand.Parameters[241].Value = ((bool)(GaitAssessment_LTerminalSwing));
            if ((GaitAssessment_Findings == null)) {
                this.Adapter.InsertCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[242].Value = ((string)(GaitAssessment_Findings));
            }
            if ((GaitAssessment_Significance == null)) {
                this.Adapter.InsertCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[243].Value = ((string)(GaitAssessment_Significance));
            }
            this.Adapter.InsertCommand.Parameters[244].Value = ((bool)(FunctionalAnalysis_AdlsAxWriting));
            this.Adapter.InsertCommand.Parameters[245].Value = ((bool)(FunctionalAnalysis_AdlsAxCleaningHouse));
            this.Adapter.InsertCommand.Parameters[246].Value = ((bool)(FunctionalAnalysis_AdlsAxCooking));
            this.Adapter.InsertCommand.Parameters[247].Value = ((bool)(FunctionalAnalysis_AdlsAxEating));
            this.Adapter.InsertCommand.Parameters[248].Value = ((bool)(FunctionalAnalysis_AdlsAxTurningDoorKnob));
            this.Adapter.InsertCommand.Parameters[249].Value = ((bool)(FunctionalAnalysis_AdlsAxUsingKeys));
            this.Adapter.InsertCommand.Parameters[250].Value = ((bool)(FunctionalAnalysis_AdlsAxOpeningBottle));
            this.Adapter.InsertCommand.Parameters[251].Value = ((bool)(FunctionalAnalysis_AdlsAxBrushingTeeth));
            this.Adapter.InsertCommand.Parameters[252].Value = ((bool)(FunctionalAnalysis_AdlsAxTyingShoeLace));
            this.Adapter.InsertCommand.Parameters[253].Value = ((bool)(FunctionalAnalysis_AdlsAxWashingDishes));
            this.Adapter.InsertCommand.Parameters[254].Value = ((bool)(FunctionalAnalysis_AdlsAxSweepingFloor));
            this.Adapter.InsertCommand.Parameters[255].Value = ((bool)(FunctionalAnalysis_AdlsAxOthers));
            if ((Assessment_Diagnosis == null)) {
                this.Adapter.InsertCommand.Parameters[256].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[256].Value = ((string)(Assessment_Diagnosis));
            }
            if ((Assessment_PTImpression == null)) {
                this.Adapter.InsertCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[257].Value = ((string)(Assessment_PTImpression));
            }
            if ((Assessment_ProblemList == null)) {
                this.Adapter.InsertCommand.Parameters[258].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[258].Value = ((string)(Assessment_ProblemList));
            }
            if ((Assessment_LongTermGoals == null)) {
                this.Adapter.InsertCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[259].Value = ((string)(Assessment_LongTermGoals));
            }
            if ((Assessment_ShortTermGoals == null)) {
                this.Adapter.InsertCommand.Parameters[260].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[260].Value = ((string)(Assessment_ShortTermGoals));
            }
            if ((Plan_PTManagement == null)) {
                this.Adapter.InsertCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[261].Value = ((string)(Plan_PTManagement));
            }
            if ((Plan_HomeInstruction == null)) {
                this.Adapter.InsertCommand.Parameters[262].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[262].Value = ((string)(Plan_HomeInstruction));
            }
            if ((FunctionalAnalysis_AdlsAxOthersText == null)) {
                this.Adapter.InsertCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[263].Value = ((string)(FunctionalAnalysis_AdlsAxOthersText));
            }
            if ((CardioPulmonaryAssmt_BodyType == null)) {
                this.Adapter.InsertCommand.Parameters[264].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[264].Value = ((string)(CardioPulmonaryAssmt_BodyType));
            }
            if ((CardioPulmonaryAssmt_ChestShape == null)) {
                this.Adapter.InsertCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[265].Value = ((string)(CardioPulmonaryAssmt_ChestShape));
            }
            if ((CardioPulmonaryAssmt_ChestShapeOthers == null)) {
                this.Adapter.InsertCommand.Parameters[266].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[266].Value = ((string)(CardioPulmonaryAssmt_ChestShapeOthers));
            }
            this.Adapter.InsertCommand.Parameters[267].Value = ((bool)(PulmonaryAssmt_SpmMucoid));
            this.Adapter.InsertCommand.Parameters[268].Value = ((bool)(PulmonaryAssmt_SpmFrothy));
            this.Adapter.InsertCommand.Parameters[269].Value = ((bool)(PulmonaryAssmt_SpmMucopurulent));
            this.Adapter.InsertCommand.Parameters[270].Value = ((bool)(PulmonaryAssmt_SpmHemoptysis));
            this.Adapter.InsertCommand.Parameters[271].Value = ((bool)(PulmonaryAssmt_SpmPurulent));
            this.Adapter.InsertCommand.Parameters[272].Value = ((bool)(PulmonaryAssmt_SpmOthers));
            if ((PulmonaryAssmt_SpmOthersText == null)) {
                this.Adapter.InsertCommand.Parameters[273].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[273].Value = ((string)(PulmonaryAssmt_SpmOthersText));
            }
            if ((PulmonaryAssmt_MdShift == null)) {
                this.Adapter.InsertCommand.Parameters[274].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[274].Value = ((string)(PulmonaryAssmt_MdShift));
            }
            if ((PulmonaryAssmt_MdShiftFindings == null)) {
                this.Adapter.InsertCommand.Parameters[275].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[275].Value = ((string)(PulmonaryAssmt_MdShiftFindings));
            }
            if ((PulmonaryAssmt_MdShiftSignificance == null)) {
                this.Adapter.InsertCommand.Parameters[276].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[276].Value = ((string)(PulmonaryAssmt_MdShiftSignificance));
            }
            if ((PulmonaryAssmt_Fremitus == null)) {
                this.Adapter.InsertCommand.Parameters[277].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[277].Value = ((string)(PulmonaryAssmt_Fremitus));
            }
            if ((PulmonaryAssmt_FremitusFindings == null)) {
                this.Adapter.InsertCommand.Parameters[278].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[278].Value = ((string)(PulmonaryAssmt_FremitusFindings));
            }
            if ((PulmonaryAssmt_FremitusSignificance == null)) {
                this.Adapter.InsertCommand.Parameters[279].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[279].Value = ((string)(PulmonaryAssmt_FremitusSignificance));
            }
            if ((PulmonaryAssmt_ChstExpULE == null)) {
                this.Adapter.InsertCommand.Parameters[280].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[280].Value = ((string)(PulmonaryAssmt_ChstExpULE));
            }
            if ((PulmonaryAssmt_ChstExpMLE == null)) {
                this.Adapter.InsertCommand.Parameters[281].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[281].Value = ((string)(PulmonaryAssmt_ChstExpMLE));
            }
            if ((PulmonaryAssmt_ChstExpLLE == null)) {
                this.Adapter.InsertCommand.Parameters[282].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[282].Value = ((string)(PulmonaryAssmt_ChstExpLLE));
            }
            if ((PulmonaryAssmt_ChstExpSig == null)) {
                this.Adapter.InsertCommand.Parameters[283].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[283].Value = ((string)(PulmonaryAssmt_ChstExpSig));
            }
            if ((PulmonaryAssmt_Percussion == null)) {
                this.Adapter.InsertCommand.Parameters[284].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[284].Value = ((string)(PulmonaryAssmt_Percussion));
            }
            if ((PulmonaryAssmt_PercussionOthers == null)) {
                this.Adapter.InsertCommand.Parameters[285].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[285].Value = ((string)(PulmonaryAssmt_PercussionOthers));
            }
            this.Adapter.InsertCommand.Parameters[286].Value = ((bool)(PulmonaryAssmt_SixMinWalk));
            if ((PulmonaryAssmt_SixMinWalkFindings == null)) {
                this.Adapter.InsertCommand.Parameters[287].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[287].Value = ((string)(PulmonaryAssmt_SixMinWalkFindings));
            }
            this.Adapter.InsertCommand.Parameters[288].Value = ((bool)(PulmonaryAssmt_StairClimbing));
            if ((PulmonaryAssmt_StairClimbingFindings == null)) {
                this.Adapter.InsertCommand.Parameters[289].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[289].Value = ((string)(PulmonaryAssmt_StairClimbingFindings));
            }
            this.Adapter.InsertCommand.Parameters[290].Value = ((bool)(PulmonaryAssmt_ShuttleTest));
            if ((PulmonaryAssmt_ShuttleTestFindings == null)) {
                this.Adapter.InsertCommand.Parameters[291].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[291].Value = ((string)(PulmonaryAssmt_ShuttleTestFindings));
            }
            this.Adapter.InsertCommand.Parameters[292].Value = ((bool)(PulmonaryAssmt_OtherTest));
            if ((PulmonaryAssmt_OtherTestFindings == null)) {
                this.Adapter.InsertCommand.Parameters[293].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[293].Value = ((string)(PulmonaryAssmt_OtherTestFindings));
            }
            this.Adapter.InsertCommand.Parameters[294].Value = ((decimal)(CMAxilla_MaxInsT1));
            this.Adapter.InsertCommand.Parameters[295].Value = ((decimal)(CMAxilla_MaxInsT2));
            this.Adapter.InsertCommand.Parameters[296].Value = ((decimal)(CMAxilla_MaxInsT3));
            this.Adapter.InsertCommand.Parameters[297].Value = ((decimal)(CMAxilla_MaxInsAve));
            this.Adapter.InsertCommand.Parameters[298].Value = ((decimal)(CMAxilla_MaxExpT1));
            this.Adapter.InsertCommand.Parameters[299].Value = ((decimal)(CMAxilla_MaxExpT2));
            this.Adapter.InsertCommand.Parameters[300].Value = ((decimal)(CMAxilla_MaxExpT3));
            this.Adapter.InsertCommand.Parameters[301].Value = ((decimal)(CMAxilla_MaxExpAve));
            this.Adapter.InsertCommand.Parameters[302].Value = ((decimal)(CMAxilla_DiffT1));
            this.Adapter.InsertCommand.Parameters[303].Value = ((decimal)(CMAxilla_DiffT2));
            this.Adapter.InsertCommand.Parameters[304].Value = ((decimal)(CMAxilla_DiffT3));
            this.Adapter.InsertCommand.Parameters[305].Value = ((decimal)(CMAxilla_DiffAve));
            this.Adapter.InsertCommand.Parameters[306].Value = ((decimal)(CMXiphoid_MaxInsT1));
            this.Adapter.InsertCommand.Parameters[307].Value = ((decimal)(CMXiphoid_MaxInsT2));
            this.Adapter.InsertCommand.Parameters[308].Value = ((decimal)(CMXiphoid_MaxInsT3));
            this.Adapter.InsertCommand.Parameters[309].Value = ((decimal)(CMXiphoid_MaxInsAve));
            this.Adapter.InsertCommand.Parameters[310].Value = ((decimal)(CMXiphoid_MaxExpT1));
            this.Adapter.InsertCommand.Parameters[311].Value = ((decimal)(CMXiphoid_MaxExpT2));
            this.Adapter.InsertCommand.Parameters[312].Value = ((decimal)(CMXiphoid_MaxExpT3));
            this.Adapter.InsertCommand.Parameters[313].Value = ((decimal)(CMXiphoid_MaxExpAve));
            this.Adapter.InsertCommand.Parameters[314].Value = ((decimal)(CMXiphoid_DiffT1));
            this.Adapter.InsertCommand.Parameters[315].Value = ((decimal)(CMXiphoid_DiffT2));
            this.Adapter.InsertCommand.Parameters[316].Value = ((decimal)(CMXiphoid_DiffT3));
            this.Adapter.InsertCommand.Parameters[317].Value = ((decimal)(CMXiphoid_DiffAve));
            this.Adapter.InsertCommand.Parameters[318].Value = ((decimal)(CMLowerCostal_MaxInsT1));
            this.Adapter.InsertCommand.Parameters[319].Value = ((decimal)(CMLowerCostal_MaxInsT2));
            this.Adapter.InsertCommand.Parameters[320].Value = ((decimal)(CMLowerCostal_MaxInsT3));
            this.Adapter.InsertCommand.Parameters[321].Value = ((decimal)(CMLowerCostal_MaxInsAve));
            this.Adapter.InsertCommand.Parameters[322].Value = ((decimal)(CMLowerCostal_MaxExpT1));
            this.Adapter.InsertCommand.Parameters[323].Value = ((decimal)(CMLowerCostal_MaxExpT2));
            this.Adapter.InsertCommand.Parameters[324].Value = ((decimal)(CMLowerCostal_MaxExpT3));
            this.Adapter.InsertCommand.Parameters[325].Value = ((decimal)(CMLowerCostal_MaxExpAve));
            this.Adapter.InsertCommand.Parameters[326].Value = ((decimal)(CMLowerCostal_DiffT1));
            this.Adapter.InsertCommand.Parameters[327].Value = ((decimal)(CMLowerCostal_DiffT2));
            this.Adapter.InsertCommand.Parameters[328].Value = ((decimal)(CMLowerCostal_DiffT3));
            this.Adapter.InsertCommand.Parameters[329].Value = ((decimal)(CMLowerCostal_DiffAve));
            this.Adapter.InsertCommand.Parameters[330].Value = ((bool)(Auscultation_Trachael));
            this.Adapter.InsertCommand.Parameters[331].Value = ((bool)(Auscultation_Bronchial));
            this.Adapter.InsertCommand.Parameters[332].Value = ((bool)(Auscultation_Bronchiovesicular));
            this.Adapter.InsertCommand.Parameters[333].Value = ((bool)(Auscultation_Vesicular));
            this.Adapter.InsertCommand.Parameters[334].Value = ((bool)(Auscultation_Crackles));
            this.Adapter.InsertCommand.Parameters[335].Value = ((bool)(Auscultation_DiminishedBreathSounds));
            this.Adapter.InsertCommand.Parameters[336].Value = ((bool)(Auscultation_HighPitchedBronchialBreathing));
            this.Adapter.InsertCommand.Parameters[337].Value = ((bool)(Auscultation_LowPitchedBronchialBreathing));
            this.Adapter.InsertCommand.Parameters[338].Value = ((bool)(Auscultation_PleuralRub));
            this.Adapter.InsertCommand.Parameters[339].Value = ((bool)(Auscultation_Rhonchi));
            this.Adapter.InsertCommand.Parameters[340].Value = ((bool)(Auscultation_Stridor));
            this.Adapter.InsertCommand.Parameters[341].Value = ((bool)(Auscultation_Wheeze));
            this.Adapter.InsertCommand.Parameters[342].Value = ((bool)(Auscultation_Others));
            if ((Auscultation_OthersText == null)) {
                this.Adapter.InsertCommand.Parameters[343].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[343].Value = ((string)(Auscultation_OthersText));
            }
            this.Adapter.InsertCommand.Parameters[344].Value = ((decimal)(FigureOfEight_Right));
            this.Adapter.InsertCommand.Parameters[345].Value = ((decimal)(FigureOfEight_Left));
            this.Adapter.InsertCommand.Parameters[346].Value = ((decimal)(FigureOfEight_Difference));
            if ((FigureOfEight_Findings == null)) {
                this.Adapter.InsertCommand.Parameters[347].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[347].Value = ((string)(FigureOfEight_Findings));
            }
            if ((FigureOfEight_Significance == null)) {
                this.Adapter.InsertCommand.Parameters[348].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[348].Value = ((string)(FigureOfEight_Significance));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FirstName, 
                    string LastName, 
                    int Age, 
                    string CivilStatus, 
                    string HandedNess, 
                    string Occupation, 
                    string Address, 
                    string Religion, 
                    global::System.Nullable<global::System.DateTime> DateOfConsultation, 
                    string PatientType, 
                    string GeneralPhysician, 
                    global::System.Nullable<global::System.DateTime> DateOfReferral, 
                    string Neurologist, 
                    string HPI, 
                    int PatientId, 
                    string Sex, 
                    string CityTown, 
                    string Province, 
                    global::System.Nullable<global::System.DateTime> DateOfAdmission, 
                    string Surgeon, 
                    global::System.Nullable<global::System.DateTime> DateOfSurgery, 
                    string Orthopedic, 
                    string Cardiologist, 
                    string Opthalmologoist, 
                    string Pulmonologist, 
                    string OtherDoctor, 
                    string ReferringDoctor, 
                    global::System.Nullable<global::System.DateTime> DateOfInitialEvaluation, 
                    string Diagnosis, 
                    bool PMHx_Trauma, 
                    bool PMHx_Arthritis, 
                    bool PMHx_HPN, 
                    bool PMHx_DM, 
                    bool PMHx_Allergies, 
                    bool PMHx_Surgery, 
                    global::System.Nullable<global::System.DateTime> PMHx_SurgeryDate, 
                    bool PMHx_CardiovascularDisease, 
                    bool PMHx_PulmonaryCondition, 
                    bool PMHx_NeurologyCondition, 
                    bool PMHx_Cancer, 
                    string PMHx_Others, 
                    bool FMHx_HypertensionF, 
                    bool FMHx_HypertensionM, 
                    bool FMHx_ArthritisF, 
                    bool FMHx_ArthritisM, 
                    bool FMHx_DiabetesMellitusF, 
                    bool FMHx_DiabetesMellitusM, 
                    bool FMHx_CancerF, 
                    bool FMHx_CancerM, 
                    bool FMHx_AsthmaF, 
                    bool FMHx_AsthmaM, 
                    bool FMHx_AllergiesF, 
                    bool FMHx_AllergiesM, 
                    bool FMHx_NeurologicConditionF, 
                    bool FMHx_NeurologicConditionM, 
                    string FMHx_Others, 
                    bool FMHx_OthersF, 
                    bool FMHx_OthersM, 
                    string PSEHx_FinancialStatus, 
                    string PSEHx_PersonalityType, 
                    string PSEHx_LifeStyle, 
                    string PSEHx_EducationalAttainment, 
                    string PSEHx_LivesWith, 
                    int PSEHx_NumberOfOffspring, 
                    string PSEHx_Relatives, 
                    string PSEHx_OtherLivesWith, 
                    string PSEHx_Hobbies, 
                    string PSEHx_Sports, 
                    string PSEHx_OtherHobbies, 
                    bool PSEHx_CigaretteSmoker, 
                    bool PSEHx_AlcoholDrinker, 
                    string PSEHx_TypeOfHouse, 
                    string PSEHx_OtherTypeOfHouse, 
                    string PMHx_TraumaText, 
                    string PMHx_DMText, 
                    string PMHx_SurgeryText, 
                    bool PMHx_Hospitalization, 
                    string PMHx_HospitalizationText, 
                    global::System.Nullable<global::System.DateTime> PMHx_HospitalizationDate, 
                    string PMHx_CardiovascularDiseaseText, 
                    string PMHx_PulmonaryConditionText, 
                    string PMHx_NeurologyConditionText, 
                    string PMHx_ArthritisText, 
                    global::System.Nullable<global::System.DateTime> PMHx_AsthmaDate, 
                    global::System.Nullable<bool> PMHx_Asthma, 
                    string RomFindings, 
                    string RomSignificance, 
                    string MmtFindings, 
                    string MmtSignificance, 
                    string SensoryFindings, 
                    string SensorySignificance, 
                    string CranialNerveAssmtFindings, 
                    string CranialNerveAssmtSignificance, 
                    string CoordinationAssmtFindings, 
                    string CoordinationAssmtSignificance, 
                    string MbmFindings, 
                    string MbmSignificance, 
                    string SubjectiveObjective_ChiefComplaint, 
                    string SubjectiveObjective_PtTranslation, 
                    string SubjectiveObjective_BPBefore, 
                    string SubjectiveObjective_BPAfter, 
                    string SubjectiveObjective_RRBefore, 
                    string SubjectiveObjective_RRAfter, 
                    string SubjectiveObjective_PRBefore, 
                    string SubjectiveObjective_PRAfter, 
                    string SubjectiveObjective_TBefore, 
                    string SubjectiveObjective_TAfter, 
                    string SubjectiveObjective_Findings, 
                    string SubjectiveObjective_Significance, 
                    bool OcularInspection_Ambulation, 
                    bool OcularInspection_TADWheelChair, 
                    string OcularInspection_TADCruches, 
                    string OcularInspection_TADCane, 
                    string OcularInspection_TADWalker, 
                    bool OcularInspection_Alert, 
                    bool OcularInspection_Coherent, 
                    bool OcularInspection_Cooperative, 
                    string OcularInspection_BodyType, 
                    string OcularInspection_Atrophy, 
                    string OcularInspection_Swelling, 
                    string OcularInspection_Redness, 
                    string OcularInspection_Ecchymosis, 
                    string OcularInspection_Deformity, 
                    string OcularInspection_Wounds, 
                    string OcularInspection_Scar, 
                    string OcularInspection_PressureSore, 
                    bool OcularInspection_GaitDeviation, 
                    string OcularInspection_Incision, 
                    bool OcularInspection_ShortnessOfBreathing, 
                    string OcularInspection_Others, 
                    string Palpation_BodyTemperature, 
                    string Palpation_MuscleTone, 
                    string Palpation_Edema, 
                    string Palpation_Tenderness, 
                    string Palpation_Location, 
                    string Palpation_Deformity, 
                    bool Palpation_MuscleGuarding, 
                    bool Palpation_MuscleSpasm, 
                    bool Palpation_Subluxation, 
                    bool Palpation_Dislocation, 
                    string CognitiveAssmt_STQuestion, 
                    string CognitiveAssmt_STResponse, 
                    string CognitiveAssmt_LTQuestion, 
                    string CognitiveAssmt_LTResponse, 
                    string CognitiveAssmt_Findings, 
                    string CognitiveAssmt_Significance, 
                    string BalanceTolerance_SittingBalance, 
                    string BalanceTolerance_SittingTolerance, 
                    string BalanceTolerance_StandingBalance, 
                    string BalanceTolerance_StandingTolerance, 
                    string BalanceTolerance_Findings, 
                    string BalanceTolerance_Significance, 
                    string DeepTendonReflex_LeftHand, 
                    string DeepTendonReflex_RightHand, 
                    string DeepTendonReflex_LeftElbow, 
                    string DeepTendonReflex_RightElbow, 
                    string DeepTendonReflex_LeftKnee, 
                    string DeepTendonReflex_RightKnee, 
                    string DeepTendonReflex_LeftFoot, 
                    string DeepTendonReflex_RightFoot, 
                    string DeepTendonReflex_Findings, 
                    string DeepTendonReflex_Significance, 
                    string PosturalAssmtFindings, 
                    string PosturalAssmtSignificance, 
                    decimal HandGripStrength_T1RightHand, 
                    decimal HandGripStrength_T1LeftHand, 
                    decimal HandGripStrength_T2RightHand, 
                    decimal HandGripStrength_T2LeftHand, 
                    decimal HandGripStrength_T3RightHand, 
                    decimal HandGripStrength_T3LeftHand, 
                    decimal HandGripStrength_AveRightHand, 
                    decimal HandGripStrength_AveLeftHand, 
                    string HandGripStrength_Findings, 
                    string HandGripStrength_Significance, 
                    decimal VolumetricMeasurement_Right, 
                    decimal VolumetricMeasurement_Left, 
                    decimal VolumetricMeasurement_Difference, 
                    string VolumetricMeasurement_Findings, 
                    string VolumetricMeasurement_Significance, 
                    bool AnteriorView_HeadInMidline, 
                    string AnteriorView_HeadInMidlineFindings, 
                    bool AnteriorView_ShouldersInLevel, 
                    string AnteriorView_ShouldersInLevelFindings, 
                    bool AnteriorView_Protrusion, 
                    string AnteriorView_ProtrusionFindings, 
                    bool AnteriorView_Lateralization, 
                    string AnteriorView_LateralizationFindings, 
                    bool AnteriorView_Depression, 
                    string AnteriorView_DepressionFindings, 
                    decimal AnteriorView_WaistAngle, 
                    string AnteriorView_ArmPosition, 
                    decimal AnteriorView_CarryingAngle, 
                    string AnteriorView_ASISLevel, 
                    string AnteriorView_PatellaeAlignment, 
                    string AnteriorView_KneeAlignment, 
                    string AnteriorView_MalleoliLevel, 
                    string AnteriorView_ArchesOfFeet, 
                    bool AnteriorView_FeetAngle, 
                    string AnteriorView_FeetAngleFindings, 
                    bool PosteriorView_HeadInMidline, 
                    string PosteriorView_HeadInMidlineFindings, 
                    bool PosteriorView_ShouldersInLevel, 
                    string PosteriorView_ShouldersInLevelFindings, 
                    bool PosteriorView_SpineScapularLevel, 
                    string PosteriorView_SpineScapularLevelFindings, 
                    bool PosteriorView_SpineInMidline, 
                    string PosteriorView_SpineInMidlineFindings, 
                    decimal PosteriorView_WaistLevelAngle, 
                    string PosteriorView_ArmPosition, 
                    string PosteriorView_IliacCrestlevel, 
                    string PosteriorView_PSISLevel, 
                    string PosteriorView_GlutealFoldsLevel, 
                    string PosteriorView_PoplitealFoassalevel, 
                    string PosteriorView_HeelsPosition, 
                    bool LateralView_EarlobeShoulderAlignment, 
                    string LateralView_EarlobeShoulderAlignmentFindings, 
                    bool LateralView_AcromioIliacAlignment, 
                    string LateralView_AcromioIliacAlignmentFindings, 
                    string LateralView_SpinalSegments, 
                    string LateralView_ShoulderAlignment, 
                    decimal LateralView_PelvicAngle, 
                    string LateralView_KneeAlignment, 
                    bool LateralView_PlumblineAlignment, 
                    string LateralView_PlumblineAlignmentFindings, 
                    string LateralView_ArchesOfFeet, 
                    string GaitAssessment_Asssessment, 
                    bool GaitAssessment_RInitialLoading, 
                    bool GaitAssessment_LInitialLoading, 
                    bool GaitAssessment_RLoadingResponse, 
                    bool GaitAssessment_LLoadingResponse, 
                    bool GaitAssessment_RMidStance, 
                    bool GaitAssessment_LMidStance, 
                    bool GaitAssessment_RTerminalStance, 
                    bool GaitAssessment_LTerminalStance, 
                    bool GaitAssessment_RPreSwing, 
                    bool GaitAssessment_LPreSwing, 
                    bool GaitAssessment_RInitialSwing, 
                    bool GaitAssessment_LInitialPreSwing, 
                    bool GaitAssessment_RMidSwing, 
                    bool GaitAssessment_LMidPreSwing, 
                    bool GaitAssessment_RTerminalSwing, 
                    bool GaitAssessment_LTerminalSwing, 
                    string GaitAssessment_Findings, 
                    string GaitAssessment_Significance, 
                    bool FunctionalAnalysis_AdlsAxWriting, 
                    bool FunctionalAnalysis_AdlsAxCleaningHouse, 
                    bool FunctionalAnalysis_AdlsAxCooking, 
                    bool FunctionalAnalysis_AdlsAxEating, 
                    bool FunctionalAnalysis_AdlsAxTurningDoorKnob, 
                    bool FunctionalAnalysis_AdlsAxUsingKeys, 
                    bool FunctionalAnalysis_AdlsAxOpeningBottle, 
                    bool FunctionalAnalysis_AdlsAxBrushingTeeth, 
                    bool FunctionalAnalysis_AdlsAxTyingShoeLace, 
                    bool FunctionalAnalysis_AdlsAxWashingDishes, 
                    bool FunctionalAnalysis_AdlsAxSweepingFloor, 
                    bool FunctionalAnalysis_AdlsAxOthers, 
                    string Assessment_Diagnosis, 
                    string Assessment_PTImpression, 
                    string Assessment_ProblemList, 
                    string Assessment_LongTermGoals, 
                    string Assessment_ShortTermGoals, 
                    string Plan_PTManagement, 
                    string Plan_HomeInstruction, 
                    string FunctionalAnalysis_AdlsAxOthersText, 
                    string CardioPulmonaryAssmt_BodyType, 
                    string CardioPulmonaryAssmt_ChestShape, 
                    string CardioPulmonaryAssmt_ChestShapeOthers, 
                    bool PulmonaryAssmt_SpmMucoid, 
                    bool PulmonaryAssmt_SpmFrothy, 
                    bool PulmonaryAssmt_SpmMucopurulent, 
                    bool PulmonaryAssmt_SpmHemoptysis, 
                    bool PulmonaryAssmt_SpmPurulent, 
                    bool PulmonaryAssmt_SpmOthers, 
                    string PulmonaryAssmt_SpmOthersText, 
                    string PulmonaryAssmt_MdShift, 
                    string PulmonaryAssmt_MdShiftFindings, 
                    string PulmonaryAssmt_MdShiftSignificance, 
                    string PulmonaryAssmt_Fremitus, 
                    string PulmonaryAssmt_FremitusFindings, 
                    string PulmonaryAssmt_FremitusSignificance, 
                    string PulmonaryAssmt_ChstExpULE, 
                    string PulmonaryAssmt_ChstExpMLE, 
                    string PulmonaryAssmt_ChstExpLLE, 
                    string PulmonaryAssmt_ChstExpSig, 
                    string PulmonaryAssmt_Percussion, 
                    string PulmonaryAssmt_PercussionOthers, 
                    bool PulmonaryAssmt_SixMinWalk, 
                    string PulmonaryAssmt_SixMinWalkFindings, 
                    bool PulmonaryAssmt_StairClimbing, 
                    string PulmonaryAssmt_StairClimbingFindings, 
                    bool PulmonaryAssmt_ShuttleTest, 
                    string PulmonaryAssmt_ShuttleTestFindings, 
                    bool PulmonaryAssmt_OtherTest, 
                    string PulmonaryAssmt_OtherTestFindings, 
                    decimal CMAxilla_MaxInsT1, 
                    decimal CMAxilla_MaxInsT2, 
                    decimal CMAxilla_MaxInsT3, 
                    decimal CMAxilla_MaxInsAve, 
                    decimal CMAxilla_MaxExpT1, 
                    decimal CMAxilla_MaxExpT2, 
                    decimal CMAxilla_MaxExpT3, 
                    decimal CMAxilla_MaxExpAve, 
                    decimal CMAxilla_DiffT1, 
                    decimal CMAxilla_DiffT2, 
                    decimal CMAxilla_DiffT3, 
                    decimal CMAxilla_DiffAve, 
                    decimal CMXiphoid_MaxInsT1, 
                    decimal CMXiphoid_MaxInsT2, 
                    decimal CMXiphoid_MaxInsT3, 
                    decimal CMXiphoid_MaxInsAve, 
                    decimal CMXiphoid_MaxExpT1, 
                    decimal CMXiphoid_MaxExpT2, 
                    decimal CMXiphoid_MaxExpT3, 
                    decimal CMXiphoid_MaxExpAve, 
                    decimal CMXiphoid_DiffT1, 
                    decimal CMXiphoid_DiffT2, 
                    decimal CMXiphoid_DiffT3, 
                    decimal CMXiphoid_DiffAve, 
                    decimal CMLowerCostal_MaxInsT1, 
                    decimal CMLowerCostal_MaxInsT2, 
                    decimal CMLowerCostal_MaxInsT3, 
                    decimal CMLowerCostal_MaxInsAve, 
                    decimal CMLowerCostal_MaxExpT1, 
                    decimal CMLowerCostal_MaxExpT2, 
                    decimal CMLowerCostal_MaxExpT3, 
                    decimal CMLowerCostal_MaxExpAve, 
                    decimal CMLowerCostal_DiffT1, 
                    decimal CMLowerCostal_DiffT2, 
                    decimal CMLowerCostal_DiffT3, 
                    decimal CMLowerCostal_DiffAve, 
                    bool Auscultation_Trachael, 
                    bool Auscultation_Bronchial, 
                    bool Auscultation_Bronchiovesicular, 
                    bool Auscultation_Vesicular, 
                    bool Auscultation_Crackles, 
                    bool Auscultation_DiminishedBreathSounds, 
                    bool Auscultation_HighPitchedBronchialBreathing, 
                    bool Auscultation_LowPitchedBronchialBreathing, 
                    bool Auscultation_PleuralRub, 
                    bool Auscultation_Rhonchi, 
                    bool Auscultation_Stridor, 
                    bool Auscultation_Wheeze, 
                    bool Auscultation_Others, 
                    string Auscultation_OthersText, 
                    decimal FigureOfEight_Right, 
                    decimal FigureOfEight_Left, 
                    decimal FigureOfEight_Difference, 
                    string FigureOfEight_Findings, 
                    string FigureOfEight_Significance, 
                    int Original_PatientVisitId) {
            if ((FirstName == null)) {
                throw new global::System.ArgumentNullException("FirstName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                throw new global::System.ArgumentNullException("LastName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LastName));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Age));
            if ((CivilStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CivilStatus));
            }
            if ((HandedNess == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(HandedNess));
            }
            if ((Occupation == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Occupation));
            }
            if ((Address == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Address));
            }
            if ((Religion == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Religion));
            }
            if ((DateOfConsultation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(DateOfConsultation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PatientType == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(PatientType));
            }
            if ((GeneralPhysician == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(GeneralPhysician));
            }
            if ((DateOfReferral.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(DateOfReferral.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Neurologist == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Neurologist));
            }
            if ((HPI == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(HPI));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(PatientId));
            if ((Sex == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Sex));
            }
            if ((CityTown == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(CityTown));
            }
            if ((Province == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Province));
            }
            if ((DateOfAdmission.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(DateOfAdmission.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Surgeon == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Surgeon));
            }
            if ((DateOfSurgery.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(DateOfSurgery.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Orthopedic == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Orthopedic));
            }
            if ((Cardiologist == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Cardiologist));
            }
            if ((Opthalmologoist == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Opthalmologoist));
            }
            if ((Pulmonologist == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Pulmonologist));
            }
            if ((OtherDoctor == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(OtherDoctor));
            }
            if ((ReferringDoctor == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(ReferringDoctor));
            }
            if ((DateOfInitialEvaluation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(DateOfInitialEvaluation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Diagnosis == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Diagnosis));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(PMHx_Trauma));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(PMHx_Arthritis));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(PMHx_HPN));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(PMHx_DM));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(PMHx_Allergies));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(PMHx_Surgery));
            if ((PMHx_SurgeryDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(PMHx_SurgeryDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(PMHx_CardiovascularDisease));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(PMHx_PulmonaryCondition));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(PMHx_NeurologyCondition));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(PMHx_Cancer));
            if ((PMHx_Others == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(PMHx_Others));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(FMHx_HypertensionF));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(FMHx_HypertensionM));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(FMHx_ArthritisF));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(FMHx_ArthritisM));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(FMHx_DiabetesMellitusF));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(FMHx_DiabetesMellitusM));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(FMHx_CancerF));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(FMHx_CancerM));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(FMHx_AsthmaF));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(FMHx_AsthmaM));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(FMHx_AllergiesF));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(FMHx_AllergiesM));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(FMHx_NeurologicConditionF));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(FMHx_NeurologicConditionM));
            if ((FMHx_Others == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(FMHx_Others));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(FMHx_OthersF));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(FMHx_OthersM));
            if ((PSEHx_FinancialStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(PSEHx_FinancialStatus));
            }
            if ((PSEHx_PersonalityType == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(PSEHx_PersonalityType));
            }
            if ((PSEHx_LifeStyle == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(PSEHx_LifeStyle));
            }
            if ((PSEHx_EducationalAttainment == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(PSEHx_EducationalAttainment));
            }
            if ((PSEHx_LivesWith == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(PSEHx_LivesWith));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(PSEHx_NumberOfOffspring));
            if ((PSEHx_Relatives == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(PSEHx_Relatives));
            }
            if ((PSEHx_OtherLivesWith == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(PSEHx_OtherLivesWith));
            }
            if ((PSEHx_Hobbies == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(PSEHx_Hobbies));
            }
            if ((PSEHx_Sports == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(PSEHx_Sports));
            }
            if ((PSEHx_OtherHobbies == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(PSEHx_OtherHobbies));
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(PSEHx_CigaretteSmoker));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(PSEHx_AlcoholDrinker));
            if ((PSEHx_TypeOfHouse == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(PSEHx_TypeOfHouse));
            }
            if ((PSEHx_OtherTypeOfHouse == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(PSEHx_OtherTypeOfHouse));
            }
            if ((PMHx_TraumaText == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(PMHx_TraumaText));
            }
            if ((PMHx_DMText == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(PMHx_DMText));
            }
            if ((PMHx_SurgeryText == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(PMHx_SurgeryText));
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((bool)(PMHx_Hospitalization));
            if ((PMHx_HospitalizationText == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(PMHx_HospitalizationText));
            }
            if ((PMHx_HospitalizationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((System.DateTime)(PMHx_HospitalizationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((PMHx_CardiovascularDiseaseText == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(PMHx_CardiovascularDiseaseText));
            }
            if ((PMHx_PulmonaryConditionText == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(PMHx_PulmonaryConditionText));
            }
            if ((PMHx_NeurologyConditionText == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(PMHx_NeurologyConditionText));
            }
            if ((PMHx_ArthritisText == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(PMHx_ArthritisText));
            }
            if ((PMHx_AsthmaDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(PMHx_AsthmaDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((PMHx_Asthma.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((bool)(PMHx_Asthma.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((RomFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(RomFindings));
            }
            if ((RomSignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(RomSignificance));
            }
            if ((MmtFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(MmtFindings));
            }
            if ((MmtSignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(MmtSignificance));
            }
            if ((SensoryFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(SensoryFindings));
            }
            if ((SensorySignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(SensorySignificance));
            }
            if ((CranialNerveAssmtFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(CranialNerveAssmtFindings));
            }
            if ((CranialNerveAssmtSignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(CranialNerveAssmtSignificance));
            }
            if ((CoordinationAssmtFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(CoordinationAssmtFindings));
            }
            if ((CoordinationAssmtSignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(CoordinationAssmtSignificance));
            }
            if ((MbmFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(MbmFindings));
            }
            if ((MbmSignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(MbmSignificance));
            }
            if ((SubjectiveObjective_ChiefComplaint == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(SubjectiveObjective_ChiefComplaint));
            }
            if ((SubjectiveObjective_PtTranslation == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(SubjectiveObjective_PtTranslation));
            }
            if ((SubjectiveObjective_BPBefore == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(SubjectiveObjective_BPBefore));
            }
            if ((SubjectiveObjective_BPAfter == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(SubjectiveObjective_BPAfter));
            }
            if ((SubjectiveObjective_RRBefore == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(SubjectiveObjective_RRBefore));
            }
            if ((SubjectiveObjective_RRAfter == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(SubjectiveObjective_RRAfter));
            }
            if ((SubjectiveObjective_PRBefore == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(SubjectiveObjective_PRBefore));
            }
            if ((SubjectiveObjective_PRAfter == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(SubjectiveObjective_PRAfter));
            }
            if ((SubjectiveObjective_TBefore == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(SubjectiveObjective_TBefore));
            }
            if ((SubjectiveObjective_TAfter == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(SubjectiveObjective_TAfter));
            }
            if ((SubjectiveObjective_Findings == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(SubjectiveObjective_Findings));
            }
            if ((SubjectiveObjective_Significance == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(SubjectiveObjective_Significance));
            }
            this.Adapter.UpdateCommand.Parameters[109].Value = ((bool)(OcularInspection_Ambulation));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((bool)(OcularInspection_TADWheelChair));
            if ((OcularInspection_TADCruches == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(OcularInspection_TADCruches));
            }
            if ((OcularInspection_TADCane == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(OcularInspection_TADCane));
            }
            if ((OcularInspection_TADWalker == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(OcularInspection_TADWalker));
            }
            this.Adapter.UpdateCommand.Parameters[114].Value = ((bool)(OcularInspection_Alert));
            this.Adapter.UpdateCommand.Parameters[115].Value = ((bool)(OcularInspection_Coherent));
            this.Adapter.UpdateCommand.Parameters[116].Value = ((bool)(OcularInspection_Cooperative));
            if ((OcularInspection_BodyType == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(OcularInspection_BodyType));
            }
            if ((OcularInspection_Atrophy == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(OcularInspection_Atrophy));
            }
            if ((OcularInspection_Swelling == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(OcularInspection_Swelling));
            }
            if ((OcularInspection_Redness == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(OcularInspection_Redness));
            }
            if ((OcularInspection_Ecchymosis == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(OcularInspection_Ecchymosis));
            }
            if ((OcularInspection_Deformity == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(OcularInspection_Deformity));
            }
            if ((OcularInspection_Wounds == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(OcularInspection_Wounds));
            }
            if ((OcularInspection_Scar == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(OcularInspection_Scar));
            }
            if ((OcularInspection_PressureSore == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(OcularInspection_PressureSore));
            }
            this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(OcularInspection_GaitDeviation));
            if ((OcularInspection_Incision == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(OcularInspection_Incision));
            }
            this.Adapter.UpdateCommand.Parameters[128].Value = ((bool)(OcularInspection_ShortnessOfBreathing));
            if ((OcularInspection_Others == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(OcularInspection_Others));
            }
            if ((Palpation_BodyTemperature == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Palpation_BodyTemperature));
            }
            if ((Palpation_MuscleTone == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Palpation_MuscleTone));
            }
            if ((Palpation_Edema == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Palpation_Edema));
            }
            if ((Palpation_Tenderness == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(Palpation_Tenderness));
            }
            if ((Palpation_Location == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Palpation_Location));
            }
            if ((Palpation_Deformity == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Palpation_Deformity));
            }
            this.Adapter.UpdateCommand.Parameters[136].Value = ((bool)(Palpation_MuscleGuarding));
            this.Adapter.UpdateCommand.Parameters[137].Value = ((bool)(Palpation_MuscleSpasm));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((bool)(Palpation_Subluxation));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((bool)(Palpation_Dislocation));
            if ((CognitiveAssmt_STQuestion == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(CognitiveAssmt_STQuestion));
            }
            if ((CognitiveAssmt_STResponse == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(CognitiveAssmt_STResponse));
            }
            if ((CognitiveAssmt_LTQuestion == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(CognitiveAssmt_LTQuestion));
            }
            if ((CognitiveAssmt_LTResponse == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(CognitiveAssmt_LTResponse));
            }
            if ((CognitiveAssmt_Findings == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(CognitiveAssmt_Findings));
            }
            if ((CognitiveAssmt_Significance == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(CognitiveAssmt_Significance));
            }
            if ((BalanceTolerance_SittingBalance == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(BalanceTolerance_SittingBalance));
            }
            if ((BalanceTolerance_SittingTolerance == null)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(BalanceTolerance_SittingTolerance));
            }
            if ((BalanceTolerance_StandingBalance == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(BalanceTolerance_StandingBalance));
            }
            if ((BalanceTolerance_StandingTolerance == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(BalanceTolerance_StandingTolerance));
            }
            if ((BalanceTolerance_Findings == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(BalanceTolerance_Findings));
            }
            if ((BalanceTolerance_Significance == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(BalanceTolerance_Significance));
            }
            if ((DeepTendonReflex_LeftHand == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(DeepTendonReflex_LeftHand));
            }
            if ((DeepTendonReflex_RightHand == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(DeepTendonReflex_RightHand));
            }
            if ((DeepTendonReflex_LeftElbow == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(DeepTendonReflex_LeftElbow));
            }
            if ((DeepTendonReflex_RightElbow == null)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(DeepTendonReflex_RightElbow));
            }
            if ((DeepTendonReflex_LeftKnee == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(DeepTendonReflex_LeftKnee));
            }
            if ((DeepTendonReflex_RightKnee == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(DeepTendonReflex_RightKnee));
            }
            if ((DeepTendonReflex_LeftFoot == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(DeepTendonReflex_LeftFoot));
            }
            if ((DeepTendonReflex_RightFoot == null)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(DeepTendonReflex_RightFoot));
            }
            if ((DeepTendonReflex_Findings == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((string)(DeepTendonReflex_Findings));
            }
            if ((DeepTendonReflex_Significance == null)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(DeepTendonReflex_Significance));
            }
            if ((PosturalAssmtFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((string)(PosturalAssmtFindings));
            }
            if ((PosturalAssmtSignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(PosturalAssmtSignificance));
            }
            this.Adapter.UpdateCommand.Parameters[164].Value = ((decimal)(HandGripStrength_T1RightHand));
            this.Adapter.UpdateCommand.Parameters[165].Value = ((decimal)(HandGripStrength_T1LeftHand));
            this.Adapter.UpdateCommand.Parameters[166].Value = ((decimal)(HandGripStrength_T2RightHand));
            this.Adapter.UpdateCommand.Parameters[167].Value = ((decimal)(HandGripStrength_T2LeftHand));
            this.Adapter.UpdateCommand.Parameters[168].Value = ((decimal)(HandGripStrength_T3RightHand));
            this.Adapter.UpdateCommand.Parameters[169].Value = ((decimal)(HandGripStrength_T3LeftHand));
            this.Adapter.UpdateCommand.Parameters[170].Value = ((decimal)(HandGripStrength_AveRightHand));
            this.Adapter.UpdateCommand.Parameters[171].Value = ((decimal)(HandGripStrength_AveLeftHand));
            if ((HandGripStrength_Findings == null)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((string)(HandGripStrength_Findings));
            }
            if ((HandGripStrength_Significance == null)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((string)(HandGripStrength_Significance));
            }
            this.Adapter.UpdateCommand.Parameters[174].Value = ((decimal)(VolumetricMeasurement_Right));
            this.Adapter.UpdateCommand.Parameters[175].Value = ((decimal)(VolumetricMeasurement_Left));
            this.Adapter.UpdateCommand.Parameters[176].Value = ((decimal)(VolumetricMeasurement_Difference));
            if ((VolumetricMeasurement_Findings == null)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((string)(VolumetricMeasurement_Findings));
            }
            if ((VolumetricMeasurement_Significance == null)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((string)(VolumetricMeasurement_Significance));
            }
            this.Adapter.UpdateCommand.Parameters[179].Value = ((bool)(AnteriorView_HeadInMidline));
            if ((AnteriorView_HeadInMidlineFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((string)(AnteriorView_HeadInMidlineFindings));
            }
            this.Adapter.UpdateCommand.Parameters[181].Value = ((bool)(AnteriorView_ShouldersInLevel));
            if ((AnteriorView_ShouldersInLevelFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((string)(AnteriorView_ShouldersInLevelFindings));
            }
            this.Adapter.UpdateCommand.Parameters[183].Value = ((bool)(AnteriorView_Protrusion));
            if ((AnteriorView_ProtrusionFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((string)(AnteriorView_ProtrusionFindings));
            }
            this.Adapter.UpdateCommand.Parameters[185].Value = ((bool)(AnteriorView_Lateralization));
            if ((AnteriorView_LateralizationFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((string)(AnteriorView_LateralizationFindings));
            }
            this.Adapter.UpdateCommand.Parameters[187].Value = ((bool)(AnteriorView_Depression));
            if ((AnteriorView_DepressionFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((string)(AnteriorView_DepressionFindings));
            }
            this.Adapter.UpdateCommand.Parameters[189].Value = ((decimal)(AnteriorView_WaistAngle));
            if ((AnteriorView_ArmPosition == null)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((string)(AnteriorView_ArmPosition));
            }
            this.Adapter.UpdateCommand.Parameters[191].Value = ((decimal)(AnteriorView_CarryingAngle));
            if ((AnteriorView_ASISLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((string)(AnteriorView_ASISLevel));
            }
            if ((AnteriorView_PatellaeAlignment == null)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((string)(AnteriorView_PatellaeAlignment));
            }
            if ((AnteriorView_KneeAlignment == null)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((string)(AnteriorView_KneeAlignment));
            }
            if ((AnteriorView_MalleoliLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((string)(AnteriorView_MalleoliLevel));
            }
            if ((AnteriorView_ArchesOfFeet == null)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((string)(AnteriorView_ArchesOfFeet));
            }
            this.Adapter.UpdateCommand.Parameters[197].Value = ((bool)(AnteriorView_FeetAngle));
            if ((AnteriorView_FeetAngleFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((string)(AnteriorView_FeetAngleFindings));
            }
            this.Adapter.UpdateCommand.Parameters[199].Value = ((bool)(PosteriorView_HeadInMidline));
            if ((PosteriorView_HeadInMidlineFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((string)(PosteriorView_HeadInMidlineFindings));
            }
            this.Adapter.UpdateCommand.Parameters[201].Value = ((bool)(PosteriorView_ShouldersInLevel));
            if ((PosteriorView_ShouldersInLevelFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((string)(PosteriorView_ShouldersInLevelFindings));
            }
            this.Adapter.UpdateCommand.Parameters[203].Value = ((bool)(PosteriorView_SpineScapularLevel));
            if ((PosteriorView_SpineScapularLevelFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(PosteriorView_SpineScapularLevelFindings));
            }
            this.Adapter.UpdateCommand.Parameters[205].Value = ((bool)(PosteriorView_SpineInMidline));
            if ((PosteriorView_SpineInMidlineFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((string)(PosteriorView_SpineInMidlineFindings));
            }
            this.Adapter.UpdateCommand.Parameters[207].Value = ((decimal)(PosteriorView_WaistLevelAngle));
            if ((PosteriorView_ArmPosition == null)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((string)(PosteriorView_ArmPosition));
            }
            if ((PosteriorView_IliacCrestlevel == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((string)(PosteriorView_IliacCrestlevel));
            }
            if ((PosteriorView_PSISLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(PosteriorView_PSISLevel));
            }
            if ((PosteriorView_GlutealFoldsLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((string)(PosteriorView_GlutealFoldsLevel));
            }
            if ((PosteriorView_PoplitealFoassalevel == null)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(PosteriorView_PoplitealFoassalevel));
            }
            if ((PosteriorView_HeelsPosition == null)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((string)(PosteriorView_HeelsPosition));
            }
            this.Adapter.UpdateCommand.Parameters[214].Value = ((bool)(LateralView_EarlobeShoulderAlignment));
            if ((LateralView_EarlobeShoulderAlignmentFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((string)(LateralView_EarlobeShoulderAlignmentFindings));
            }
            this.Adapter.UpdateCommand.Parameters[216].Value = ((bool)(LateralView_AcromioIliacAlignment));
            if ((LateralView_AcromioIliacAlignmentFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((string)(LateralView_AcromioIliacAlignmentFindings));
            }
            if ((LateralView_SpinalSegments == null)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(LateralView_SpinalSegments));
            }
            if ((LateralView_ShoulderAlignment == null)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((string)(LateralView_ShoulderAlignment));
            }
            this.Adapter.UpdateCommand.Parameters[220].Value = ((decimal)(LateralView_PelvicAngle));
            if ((LateralView_KneeAlignment == null)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((string)(LateralView_KneeAlignment));
            }
            this.Adapter.UpdateCommand.Parameters[222].Value = ((bool)(LateralView_PlumblineAlignment));
            if ((LateralView_PlumblineAlignmentFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((string)(LateralView_PlumblineAlignmentFindings));
            }
            if ((LateralView_ArchesOfFeet == null)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(LateralView_ArchesOfFeet));
            }
            if ((GaitAssessment_Asssessment == null)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((string)(GaitAssessment_Asssessment));
            }
            this.Adapter.UpdateCommand.Parameters[226].Value = ((bool)(GaitAssessment_RInitialLoading));
            this.Adapter.UpdateCommand.Parameters[227].Value = ((bool)(GaitAssessment_LInitialLoading));
            this.Adapter.UpdateCommand.Parameters[228].Value = ((bool)(GaitAssessment_RLoadingResponse));
            this.Adapter.UpdateCommand.Parameters[229].Value = ((bool)(GaitAssessment_LLoadingResponse));
            this.Adapter.UpdateCommand.Parameters[230].Value = ((bool)(GaitAssessment_RMidStance));
            this.Adapter.UpdateCommand.Parameters[231].Value = ((bool)(GaitAssessment_LMidStance));
            this.Adapter.UpdateCommand.Parameters[232].Value = ((bool)(GaitAssessment_RTerminalStance));
            this.Adapter.UpdateCommand.Parameters[233].Value = ((bool)(GaitAssessment_LTerminalStance));
            this.Adapter.UpdateCommand.Parameters[234].Value = ((bool)(GaitAssessment_RPreSwing));
            this.Adapter.UpdateCommand.Parameters[235].Value = ((bool)(GaitAssessment_LPreSwing));
            this.Adapter.UpdateCommand.Parameters[236].Value = ((bool)(GaitAssessment_RInitialSwing));
            this.Adapter.UpdateCommand.Parameters[237].Value = ((bool)(GaitAssessment_LInitialPreSwing));
            this.Adapter.UpdateCommand.Parameters[238].Value = ((bool)(GaitAssessment_RMidSwing));
            this.Adapter.UpdateCommand.Parameters[239].Value = ((bool)(GaitAssessment_LMidPreSwing));
            this.Adapter.UpdateCommand.Parameters[240].Value = ((bool)(GaitAssessment_RTerminalSwing));
            this.Adapter.UpdateCommand.Parameters[241].Value = ((bool)(GaitAssessment_LTerminalSwing));
            if ((GaitAssessment_Findings == null)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((string)(GaitAssessment_Findings));
            }
            if ((GaitAssessment_Significance == null)) {
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((string)(GaitAssessment_Significance));
            }
            this.Adapter.UpdateCommand.Parameters[244].Value = ((bool)(FunctionalAnalysis_AdlsAxWriting));
            this.Adapter.UpdateCommand.Parameters[245].Value = ((bool)(FunctionalAnalysis_AdlsAxCleaningHouse));
            this.Adapter.UpdateCommand.Parameters[246].Value = ((bool)(FunctionalAnalysis_AdlsAxCooking));
            this.Adapter.UpdateCommand.Parameters[247].Value = ((bool)(FunctionalAnalysis_AdlsAxEating));
            this.Adapter.UpdateCommand.Parameters[248].Value = ((bool)(FunctionalAnalysis_AdlsAxTurningDoorKnob));
            this.Adapter.UpdateCommand.Parameters[249].Value = ((bool)(FunctionalAnalysis_AdlsAxUsingKeys));
            this.Adapter.UpdateCommand.Parameters[250].Value = ((bool)(FunctionalAnalysis_AdlsAxOpeningBottle));
            this.Adapter.UpdateCommand.Parameters[251].Value = ((bool)(FunctionalAnalysis_AdlsAxBrushingTeeth));
            this.Adapter.UpdateCommand.Parameters[252].Value = ((bool)(FunctionalAnalysis_AdlsAxTyingShoeLace));
            this.Adapter.UpdateCommand.Parameters[253].Value = ((bool)(FunctionalAnalysis_AdlsAxWashingDishes));
            this.Adapter.UpdateCommand.Parameters[254].Value = ((bool)(FunctionalAnalysis_AdlsAxSweepingFloor));
            this.Adapter.UpdateCommand.Parameters[255].Value = ((bool)(FunctionalAnalysis_AdlsAxOthers));
            if ((Assessment_Diagnosis == null)) {
                this.Adapter.UpdateCommand.Parameters[256].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((string)(Assessment_Diagnosis));
            }
            if ((Assessment_PTImpression == null)) {
                this.Adapter.UpdateCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[257].Value = ((string)(Assessment_PTImpression));
            }
            if ((Assessment_ProblemList == null)) {
                this.Adapter.UpdateCommand.Parameters[258].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((string)(Assessment_ProblemList));
            }
            if ((Assessment_LongTermGoals == null)) {
                this.Adapter.UpdateCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[259].Value = ((string)(Assessment_LongTermGoals));
            }
            if ((Assessment_ShortTermGoals == null)) {
                this.Adapter.UpdateCommand.Parameters[260].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((string)(Assessment_ShortTermGoals));
            }
            if ((Plan_PTManagement == null)) {
                this.Adapter.UpdateCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[261].Value = ((string)(Plan_PTManagement));
            }
            if ((Plan_HomeInstruction == null)) {
                this.Adapter.UpdateCommand.Parameters[262].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((string)(Plan_HomeInstruction));
            }
            if ((FunctionalAnalysis_AdlsAxOthersText == null)) {
                this.Adapter.UpdateCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[263].Value = ((string)(FunctionalAnalysis_AdlsAxOthersText));
            }
            if ((CardioPulmonaryAssmt_BodyType == null)) {
                this.Adapter.UpdateCommand.Parameters[264].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((string)(CardioPulmonaryAssmt_BodyType));
            }
            if ((CardioPulmonaryAssmt_ChestShape == null)) {
                this.Adapter.UpdateCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[265].Value = ((string)(CardioPulmonaryAssmt_ChestShape));
            }
            if ((CardioPulmonaryAssmt_ChestShapeOthers == null)) {
                this.Adapter.UpdateCommand.Parameters[266].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((string)(CardioPulmonaryAssmt_ChestShapeOthers));
            }
            this.Adapter.UpdateCommand.Parameters[267].Value = ((bool)(PulmonaryAssmt_SpmMucoid));
            this.Adapter.UpdateCommand.Parameters[268].Value = ((bool)(PulmonaryAssmt_SpmFrothy));
            this.Adapter.UpdateCommand.Parameters[269].Value = ((bool)(PulmonaryAssmt_SpmMucopurulent));
            this.Adapter.UpdateCommand.Parameters[270].Value = ((bool)(PulmonaryAssmt_SpmHemoptysis));
            this.Adapter.UpdateCommand.Parameters[271].Value = ((bool)(PulmonaryAssmt_SpmPurulent));
            this.Adapter.UpdateCommand.Parameters[272].Value = ((bool)(PulmonaryAssmt_SpmOthers));
            if ((PulmonaryAssmt_SpmOthersText == null)) {
                this.Adapter.UpdateCommand.Parameters[273].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[273].Value = ((string)(PulmonaryAssmt_SpmOthersText));
            }
            if ((PulmonaryAssmt_MdShift == null)) {
                this.Adapter.UpdateCommand.Parameters[274].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((string)(PulmonaryAssmt_MdShift));
            }
            if ((PulmonaryAssmt_MdShiftFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[275].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[275].Value = ((string)(PulmonaryAssmt_MdShiftFindings));
            }
            if ((PulmonaryAssmt_MdShiftSignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[276].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((string)(PulmonaryAssmt_MdShiftSignificance));
            }
            if ((PulmonaryAssmt_Fremitus == null)) {
                this.Adapter.UpdateCommand.Parameters[277].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[277].Value = ((string)(PulmonaryAssmt_Fremitus));
            }
            if ((PulmonaryAssmt_FremitusFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[278].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((string)(PulmonaryAssmt_FremitusFindings));
            }
            if ((PulmonaryAssmt_FremitusSignificance == null)) {
                this.Adapter.UpdateCommand.Parameters[279].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[279].Value = ((string)(PulmonaryAssmt_FremitusSignificance));
            }
            if ((PulmonaryAssmt_ChstExpULE == null)) {
                this.Adapter.UpdateCommand.Parameters[280].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((string)(PulmonaryAssmt_ChstExpULE));
            }
            if ((PulmonaryAssmt_ChstExpMLE == null)) {
                this.Adapter.UpdateCommand.Parameters[281].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[281].Value = ((string)(PulmonaryAssmt_ChstExpMLE));
            }
            if ((PulmonaryAssmt_ChstExpLLE == null)) {
                this.Adapter.UpdateCommand.Parameters[282].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((string)(PulmonaryAssmt_ChstExpLLE));
            }
            if ((PulmonaryAssmt_ChstExpSig == null)) {
                this.Adapter.UpdateCommand.Parameters[283].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[283].Value = ((string)(PulmonaryAssmt_ChstExpSig));
            }
            if ((PulmonaryAssmt_Percussion == null)) {
                this.Adapter.UpdateCommand.Parameters[284].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((string)(PulmonaryAssmt_Percussion));
            }
            if ((PulmonaryAssmt_PercussionOthers == null)) {
                this.Adapter.UpdateCommand.Parameters[285].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[285].Value = ((string)(PulmonaryAssmt_PercussionOthers));
            }
            this.Adapter.UpdateCommand.Parameters[286].Value = ((bool)(PulmonaryAssmt_SixMinWalk));
            if ((PulmonaryAssmt_SixMinWalkFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[287].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[287].Value = ((string)(PulmonaryAssmt_SixMinWalkFindings));
            }
            this.Adapter.UpdateCommand.Parameters[288].Value = ((bool)(PulmonaryAssmt_StairClimbing));
            if ((PulmonaryAssmt_StairClimbingFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[289].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[289].Value = ((string)(PulmonaryAssmt_StairClimbingFindings));
            }
            this.Adapter.UpdateCommand.Parameters[290].Value = ((bool)(PulmonaryAssmt_ShuttleTest));
            if ((PulmonaryAssmt_ShuttleTestFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[291].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[291].Value = ((string)(PulmonaryAssmt_ShuttleTestFindings));
            }
            this.Adapter.UpdateCommand.Parameters[292].Value = ((bool)(PulmonaryAssmt_OtherTest));
            if ((PulmonaryAssmt_OtherTestFindings == null)) {
                this.Adapter.UpdateCommand.Parameters[293].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[293].Value = ((string)(PulmonaryAssmt_OtherTestFindings));
            }
            this.Adapter.UpdateCommand.Parameters[294].Value = ((decimal)(CMAxilla_MaxInsT1));
            this.Adapter.UpdateCommand.Parameters[295].Value = ((decimal)(CMAxilla_MaxInsT2));
            this.Adapter.UpdateCommand.Parameters[296].Value = ((decimal)(CMAxilla_MaxInsT3));
            this.Adapter.UpdateCommand.Parameters[297].Value = ((decimal)(CMAxilla_MaxInsAve));
            this.Adapter.UpdateCommand.Parameters[298].Value = ((decimal)(CMAxilla_MaxExpT1));
            this.Adapter.UpdateCommand.Parameters[299].Value = ((decimal)(CMAxilla_MaxExpT2));
            this.Adapter.UpdateCommand.Parameters[300].Value = ((decimal)(CMAxilla_MaxExpT3));
            this.Adapter.UpdateCommand.Parameters[301].Value = ((decimal)(CMAxilla_MaxExpAve));
            this.Adapter.UpdateCommand.Parameters[302].Value = ((decimal)(CMAxilla_DiffT1));
            this.Adapter.UpdateCommand.Parameters[303].Value = ((decimal)(CMAxilla_DiffT2));
            this.Adapter.UpdateCommand.Parameters[304].Value = ((decimal)(CMAxilla_DiffT3));
            this.Adapter.UpdateCommand.Parameters[305].Value = ((decimal)(CMAxilla_DiffAve));
            this.Adapter.UpdateCommand.Parameters[306].Value = ((decimal)(CMXiphoid_MaxInsT1));
            this.Adapter.UpdateCommand.Parameters[307].Value = ((decimal)(CMXiphoid_MaxInsT2));
            this.Adapter.UpdateCommand.Parameters[308].Value = ((decimal)(CMXiphoid_MaxInsT3));
            this.Adapter.UpdateCommand.Parameters[309].Value = ((decimal)(CMXiphoid_MaxInsAve));
            this.Adapter.UpdateCommand.Parameters[310].Value = ((decimal)(CMXiphoid_MaxExpT1));
            this.Adapter.UpdateCommand.Parameters[311].Value = ((decimal)(CMXiphoid_MaxExpT2));
            this.Adapter.UpdateCommand.Parameters[312].Value = ((decimal)(CMXiphoid_MaxExpT3));
            this.Adapter.UpdateCommand.Parameters[313].Value = ((decimal)(CMXiphoid_MaxExpAve));
            this.Adapter.UpdateCommand.Parameters[314].Value = ((decimal)(CMXiphoid_DiffT1));
            this.Adapter.UpdateCommand.Parameters[315].Value = ((decimal)(CMXiphoid_DiffT2));
            this.Adapter.UpdateCommand.Parameters[316].Value = ((decimal)(CMXiphoid_DiffT3));
            this.Adapter.UpdateCommand.Parameters[317].Value = ((decimal)(CMXiphoid_DiffAve));
            this.Adapter.UpdateCommand.Parameters[318].Value = ((decimal)(CMLowerCostal_MaxInsT1));
            this.Adapter.UpdateCommand.Parameters[319].Value = ((decimal)(CMLowerCostal_MaxInsT2));
            this.Adapter.UpdateCommand.Parameters[320].Value = ((decimal)(CMLowerCostal_MaxInsT3));
            this.Adapter.UpdateCommand.Parameters[321].Value = ((decimal)(CMLowerCostal_MaxInsAve));
            this.Adapter.UpdateCommand.Parameters[322].Value = ((decimal)(CMLowerCostal_MaxExpT1));
            this.Adapter.UpdateCommand.Parameters[323].Value = ((decimal)(CMLowerCostal_MaxExpT2));
            this.Adapter.UpdateCommand.Parameters[324].Value = ((decimal)(CMLowerCostal_MaxExpT3));
            this.Adapter.UpdateCommand.Parameters[325].Value = ((decimal)(CMLowerCostal_MaxExpAve));
            this.Adapter.UpdateCommand.Parameters[326].Value = ((decimal)(CMLowerCostal_DiffT1));
            this.Adapter.UpdateCommand.Parameters[327].Value = ((decimal)(CMLowerCostal_DiffT2));
            this.Adapter.UpdateCommand.Parameters[328].Value = ((decimal)(CMLowerCostal_DiffT3));
            this.Adapter.UpdateCommand.Parameters[329].Value = ((decimal)(CMLowerCostal_DiffAve));
            this.Adapter.UpdateCommand.Parameters[330].Value = ((bool)(Auscultation_Trachael));
            this.Adapter.UpdateCommand.Parameters[331].Value = ((bool)(Auscultation_Bronchial));
            this.Adapter.UpdateCommand.Parameters[332].Value = ((bool)(Auscultation_Bronchiovesicular));
            this.Adapter.UpdateCommand.Parameters[333].Value = ((bool)(Auscultation_Vesicular));
            this.Adapter.UpdateCommand.Parameters[334].Value = ((bool)(Auscultation_Crackles));
            this.Adapter.UpdateCommand.Parameters[335].Value = ((bool)(Auscultation_DiminishedBreathSounds));
            this.Adapter.UpdateCommand.Parameters[336].Value = ((bool)(Auscultation_HighPitchedBronchialBreathing));
            this.Adapter.UpdateCommand.Parameters[337].Value = ((bool)(Auscultation_LowPitchedBronchialBreathing));
            this.Adapter.UpdateCommand.Parameters[338].Value = ((bool)(Auscultation_PleuralRub));
            this.Adapter.UpdateCommand.Parameters[339].Value = ((bool)(Auscultation_Rhonchi));
            this.Adapter.UpdateCommand.Parameters[340].Value = ((bool)(Auscultation_Stridor));
            this.Adapter.UpdateCommand.Parameters[341].Value = ((bool)(Auscultation_Wheeze));
            this.Adapter.UpdateCommand.Parameters[342].Value = ((bool)(Auscultation_Others));
            if ((Auscultation_OthersText == null)) {
                this.Adapter.UpdateCommand.Parameters[343].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[343].Value = ((string)(Auscultation_OthersText));
            }
            this.Adapter.UpdateCommand.Parameters[344].Value = ((decimal)(FigureOfEight_Right));
            this.Adapter.UpdateCommand.Parameters[345].Value = ((decimal)(FigureOfEight_Left));
            this.Adapter.UpdateCommand.Parameters[346].Value = ((decimal)(FigureOfEight_Difference));
            if ((FigureOfEight_Findings == null)) {
                this.Adapter.UpdateCommand.Parameters[347].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[347].Value = ((string)(FigureOfEight_Findings));
            }
            if ((FigureOfEight_Significance == null)) {
                this.Adapter.UpdateCommand.Parameters[348].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[348].Value = ((string)(FigureOfEight_Significance));
            }
            this.Adapter.UpdateCommand.Parameters[349].Value = ((int)(Original_PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AncillaryProceduresTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AncillaryProceduresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AncillaryProcedures";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("ProcedureName", "ProcedureName");
            tableMapping.ColumnMappings.Add("ProcedureDate", "ProcedureDate");
            tableMapping.ColumnMappings.Add("Result", "Result");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [AncillaryProcedures] WHERE (([RowId] = @Original_RowId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [AncillaryProcedures] ([ProcedureName], [ProcedureDate], [Result], [P" +
                "atientVisitId]) VALUES (@ProcedureName, @ProcedureDate, @Result, @PatientVisitId" +
                ")";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [AncillaryProcedures] SET [ProcedureName] = @ProcedureName, [ProcedureDate" +
                "] = @ProcedureDate, [Result] = @Result, [PatientVisitId] = @PatientVisitId WHERE" +
                " (([RowId] = @Original_RowId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcedureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcedureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        RowId, ProcedureName, ProcedureDate, Result, PatientVisitId\r\nFROM  " +
                "          AncillaryProcedures\r\nWHERE        (PatientVisitId = @id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.AncillaryProceduresDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.AncillaryProceduresDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.AncillaryProceduresDataTable dataTable = new SoapDataSet.AncillaryProceduresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.AncillaryProceduresDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "AncillaryProcedures");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ProcedureName, System.DateTime ProcedureDate, string Result, int PatientVisitId) {
            if ((ProcedureName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ProcedureName));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ProcedureDate));
            if ((Result == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Result));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ProcedureName, System.DateTime ProcedureDate, string Result, int PatientVisitId, int Original_RowId) {
            if ((ProcedureName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ProcedureName));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ProcedureDate));
            if ((Result == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Result));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PatientVisitId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DrugHistoriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DrugHistoriesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DrugHistories";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("DrugName", "DrugName");
            tableMapping.ColumnMappings.Add("DrugDate", "DrugDate");
            tableMapping.ColumnMappings.Add("Result", "Result");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [DrugHistories] WHERE (([RowId] = @Original_RowId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [DrugHistories] ([DrugName], [DrugDate], [Result], [PatientVisitId]) " +
                "VALUES (@DrugName, @DrugDate, @Result, @PatientVisitId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrugName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrugName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrugDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrugDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [DrugHistories] SET [DrugName] = @DrugName, [DrugDate] = @DrugDate, [Resul" +
                "t] = @Result, [PatientVisitId] = @PatientVisitId WHERE (([RowId] = @Original_Row" +
                "Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrugName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrugName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrugDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrugDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        RowId, DrugName, DrugDate, Result, PatientVisitId\r\nFROM            " +
                "DrugHistories\r\nWHERE        (PatientVisitId = @id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.DrugHistoriesDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.DrugHistoriesDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.DrugHistoriesDataTable dataTable = new SoapDataSet.DrugHistoriesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.DrugHistoriesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DrugHistories");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DrugName, System.DateTime DrugDate, string Result, int PatientVisitId) {
            if ((DrugName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DrugName));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DrugDate));
            if ((Result == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Result));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DrugName, System.DateTime DrugDate, string Result, int PatientVisitId, int Original_RowId) {
            if ((DrugName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DrugName));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DrugDate));
            if ((Result == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Result));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PatientVisitId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ROMsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ROMsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ROMs";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("Motion", "Motion");
            tableMapping.ColumnMappings.Add("Arom", "Arom");
            tableMapping.ColumnMappings.Add("Prom", "Prom");
            tableMapping.ColumnMappings.Add("NormalValue", "NormalValue");
            tableMapping.ColumnMappings.Add("Difference", "Difference");
            tableMapping.ColumnMappings.Add("EndFeel", "EndFeel");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ROMs] WHERE (([RowId] = @Original_RowId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ROMs] ([Motion], [Arom], [Prom], [NormalValue], [Difference], [EndFe" +
                "el], [PatientVisitId]) VALUES (@Motion, @Arom, @Prom, @NormalValue, @Difference," +
                " @EndFeel, @PatientVisitId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arom", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Arom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Prom", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Prom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NormalValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NormalValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Difference", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndFeel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndFeel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ROMs] SET [Motion] = @Motion, [Arom] = @Arom, [Prom] = @Prom, [NormalValu" +
                "e] = @NormalValue, [Difference] = @Difference, [EndFeel] = @EndFeel, [PatientVis" +
                "itId] = @PatientVisitId WHERE (([RowId] = @Original_RowId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arom", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Arom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Prom", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Prom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NormalValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NormalValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Difference", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndFeel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndFeel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ROMs.*\r\nFROM            ROMs\r\nWHERE PatientVisitId = @id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.ROMsDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.ROMsDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.ROMsDataTable dataTable = new SoapDataSet.ROMsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.ROMsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ROMs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Motion, decimal Arom, decimal Prom, decimal NormalValue, decimal Difference, string EndFeel, int PatientVisitId) {
            if ((Motion == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Motion));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Arom));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Prom));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(NormalValue));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Difference));
            if ((EndFeel == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(EndFeel));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Motion, decimal Arom, decimal Prom, decimal NormalValue, decimal Difference, string EndFeel, int PatientVisitId, int Original_RowId) {
            if ((Motion == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Motion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Arom));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Prom));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(NormalValue));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Difference));
            if ((EndFeel == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(EndFeel));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PatientVisitId));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ROM2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ROM2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ROM2";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("Motion", "Motion");
            tableMapping.ColumnMappings.Add("AromR", "AromR");
            tableMapping.ColumnMappings.Add("AromL", "AromL");
            tableMapping.ColumnMappings.Add("PromR", "PromR");
            tableMapping.ColumnMappings.Add("PromL", "PromL");
            tableMapping.ColumnMappings.Add("NormalValue", "NormalValue");
            tableMapping.ColumnMappings.Add("DifferenceR", "DifferenceR");
            tableMapping.ColumnMappings.Add("DifferenceL", "DifferenceL");
            tableMapping.ColumnMappings.Add("EndFeel", "EndFeel");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ROM2] WHERE (([RowId] = @Original_RowId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ROM2] ([Motion], [AromR], [AromL], [PromR], [PromL], [NormalValue], [DifferenceR], [DifferenceL], [EndFeel], [PatientVisitId]) VALUES (@Motion, @AromR, @AromL, @PromR, @PromL, @NormalValue, @DifferenceR, @DifferenceL, @EndFeel, @PatientVisitId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AromR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AromR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AromL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AromL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PromR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PromR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PromL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PromL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NormalValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NormalValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DifferenceR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DifferenceR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DifferenceL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DifferenceL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndFeel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndFeel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ROM2] SET [Motion] = @Motion, [AromR] = @AromR, [AromL] = @AromL, [PromR] = @PromR, [PromL] = @PromL, [NormalValue] = @NormalValue, [DifferenceR] = @DifferenceR, [DifferenceL] = @DifferenceL, [EndFeel] = @EndFeel, [PatientVisitId] = @PatientVisitId WHERE (([RowId] = @Original_RowId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AromR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AromR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AromL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AromL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PromR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PromR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PromL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PromL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NormalValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NormalValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DifferenceR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DifferenceR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DifferenceL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DifferenceL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndFeel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndFeel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        RowId, Motion, AromR, AromL, PromR, PromL, NormalValue, DifferenceR" +
                ", DifferenceL, EndFeel, PatientVisitId\r\nFROM            ROM2\r\nWHERE        (Pati" +
                "entVisitId = @id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.ROM2DataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.ROM2DataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.ROM2DataTable dataTable = new SoapDataSet.ROM2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.ROM2DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ROM2");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Motion, decimal AromR, decimal AromL, decimal PromR, decimal PromL, decimal NormalValue, decimal DifferenceR, decimal DifferenceL, string EndFeel, int PatientVisitId) {
            if ((Motion == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Motion));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(AromR));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(AromL));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PromR));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PromL));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(NormalValue));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(DifferenceR));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(DifferenceL));
            if ((EndFeel == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(EndFeel));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Motion, decimal AromR, decimal AromL, decimal PromR, decimal PromL, decimal NormalValue, decimal DifferenceR, decimal DifferenceL, string EndFeel, int PatientVisitId, int Original_RowId) {
            if ((Motion == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Motion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(AromR));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(AromL));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PromR));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PromL));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(NormalValue));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(DifferenceR));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(DifferenceL));
            if ((EndFeel == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(EndFeel));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(PatientVisitId));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MMTsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MMTsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MMTs";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("Motion", "Motion");
            tableMapping.ColumnMappings.Add("GradeR", "GradeR");
            tableMapping.ColumnMappings.Add("GraderL", "GraderL");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        RowId, Motion, GradeR, GraderL, PatientVisitId\r\nFROM            MMT" +
                "s\r\nWHERE        (PatientVisitId = @id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.MMTsDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.MMTsDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.MMTsDataTable dataTable = new SoapDataSet.MMTsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SensoryAxesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SensoryAxesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SensoryAxes";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("MaterialUsed", "MaterialUsed");
            tableMapping.ColumnMappings.Add("Landmarks", "Landmarks");
            tableMapping.ColumnMappings.Add("Result", "Result");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [SensoryAxes] WHERE (([RowId] = @Original_RowId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [SensoryAxes] ([MaterialUsed], [Landmarks], [Result], [PatientVisitId" +
                "]) VALUES (@MaterialUsed, @Landmarks, @Result, @PatientVisitId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialUsed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialUsed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Landmarks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Landmarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [SensoryAxes] SET [MaterialUsed] = @MaterialUsed, [Landmarks] = @Landmarks" +
                ", [Result] = @Result, [PatientVisitId] = @PatientVisitId WHERE (([RowId] = @Orig" +
                "inal_RowId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaterialUsed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaterialUsed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Landmarks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Landmarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        RowId, MaterialUsed, Landmarks, Result, PatientVisitId\r\nFROM       " +
                "     SensoryAxes\r\nWHERE        (PatientVisitId = @id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.SensoryAxesDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.SensoryAxesDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.SensoryAxesDataTable dataTable = new SoapDataSet.SensoryAxesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.SensoryAxesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SensoryAxes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaterialUsed, string Landmarks, string Result, int PatientVisitId) {
            if ((MaterialUsed == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaterialUsed));
            }
            if ((Landmarks == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Landmarks));
            }
            if ((Result == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Result));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaterialUsed, string Landmarks, string Result, int PatientVisitId, int Original_RowId) {
            if ((MaterialUsed == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaterialUsed));
            }
            if ((Landmarks == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Landmarks));
            }
            if ((Result == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Result));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PatientVisitId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CranialNerveAssmtsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CranialNerveAssmtsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CranialNerveAssmts";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("Right", "Right");
            tableMapping.ColumnMappings.Add("Left", "Left");
            tableMapping.ColumnMappings.Add("Result", "Result");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            tableMapping.ColumnMappings.Add("CranialNerve", "CranialNerve");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [CranialNerveAssmts] WHERE (([RowId] = @Original_RowId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [CranialNerveAssmts] ([Right], [Left], [Result], [PatientVisitId], [C" +
                "ranialNerve]) VALUES (@Right, @Left, @Result, @PatientVisitId, @CranialNerve)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Right", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Left", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CranialNerve", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CranialNerve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [CranialNerveAssmts] SET [Right] = @Right, [Left] = @Left, [Result] = @Res" +
                "ult, [PatientVisitId] = @PatientVisitId, [CranialNerve] = @CranialNerve WHERE ((" +
                "[RowId] = @Original_RowId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Right", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Left", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CranialNerve", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CranialNerve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        RowId, [Right], [Left], Result, PatientVisitId, CranialNerve\r\nFROM " +
                "           CranialNerveAssmts\r\nWHERE        (PatientVisitId = @id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.CranialNerveAssmtsDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.CranialNerveAssmtsDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.CranialNerveAssmtsDataTable dataTable = new SoapDataSet.CranialNerveAssmtsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.CranialNerveAssmtsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CranialNerveAssmts");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Right, string Left, string Result, int PatientVisitId, string CranialNerve) {
            if ((Right == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Right));
            }
            if ((Left == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Left));
            }
            if ((Result == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Result));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PatientVisitId));
            if ((CranialNerve == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CranialNerve));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Right, string Left, string Result, int PatientVisitId, string CranialNerve, int Original_RowId) {
            if ((Right == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Right));
            }
            if ((Left == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Left));
            }
            if ((Result == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Result));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PatientVisitId));
            if ((CranialNerve == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CranialNerve));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CoordinationAssmtsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CoordinationAssmtsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CoordinationAssmts";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("CoordinationTest", "CoordinationTest");
            tableMapping.ColumnMappings.Add("Right", "Right");
            tableMapping.ColumnMappings.Add("Left", "Left");
            tableMapping.ColumnMappings.Add("Result", "Result");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [CoordinationAssmts] WHERE (([RowId] = @Original_RowId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [CoordinationAssmts] ([CoordinationTest], [Right], [Left], [Result], " +
                "[PatientVisitId]) VALUES (@CoordinationTest, @Right, @Left, @Result, @PatientVis" +
                "itId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoordinationTest", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoordinationTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Right", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Left", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [CoordinationAssmts] SET [CoordinationTest] = @CoordinationTest, [Right] =" +
                " @Right, [Left] = @Left, [Result] = @Result, [PatientVisitId] = @PatientVisitId " +
                "WHERE (([RowId] = @Original_RowId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoordinationTest", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoordinationTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Right", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Left", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        RowId, CoordinationTest, [Right], [Left], Result, PatientVisitId\r\nF" +
                "ROM            CoordinationAssmts\r\nWHERE        (PatientVisitId = @id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.CoordinationAssmtsDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.CoordinationAssmtsDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.CoordinationAssmtsDataTable dataTable = new SoapDataSet.CoordinationAssmtsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.CoordinationAssmtsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CoordinationAssmts");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CoordinationTest, string Right, string Left, string Result, int PatientVisitId) {
            if ((CoordinationTest == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CoordinationTest));
            }
            if ((Right == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Right));
            }
            if ((Left == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Left));
            }
            if ((Result == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Result));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CoordinationTest, string Right, string Left, string Result, int PatientVisitId, int Original_RowId) {
            if ((CoordinationTest == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CoordinationTest));
            }
            if ((Right == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Right));
            }
            if ((Left == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Left));
            }
            if ((Result == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Result));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(PatientVisitId));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MBMsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MBMsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MBMs";
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("Location", "Location");
            tableMapping.ColumnMappings.Add("Markings", "Markings");
            tableMapping.ColumnMappings.Add("Right", "Right");
            tableMapping.ColumnMappings.Add("Left", "Left");
            tableMapping.ColumnMappings.Add("Difference", "Difference");
            tableMapping.ColumnMappings.Add("PatientVisitId", "PatientVisitId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MBMs] WHERE (([RowId] = @Original_RowId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MBMs] ([Location], [Markings], [Right], [Left], [Difference], [Patie" +
                "ntVisitId]) VALUES (@Location, @Markings, @Right, @Left, @Difference, @PatientVi" +
                "sitId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Location", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Location", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Markings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Markings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Right", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Left", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Difference", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [MBMs] SET [Location] = @Location, [Markings] = @Markings, [Right] = @Righ" +
                "t, [Left] = @Left, [Difference] = @Difference, [PatientVisitId] = @PatientVisitI" +
                "d WHERE (([RowId] = @Original_RowId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Location", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Location", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Markings", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Markings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Right", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Right", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Left", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Left", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Difference", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientVisitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        RowId, Location, Markings, [Right], [Left], Difference, PatientVisi" +
                "tId\r\nFROM            MBMs\r\nWHERE        (PatientVisitId = @id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PatientVisitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SoapDataSet.MBMsDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SoapDataSet.MBMsDataTable GetData(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SoapDataSet.MBMsDataTable dataTable = new SoapDataSet.MBMsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet.MBMsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SoapDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MBMs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Location, string Markings, decimal Right, decimal Left, decimal Difference, int PatientVisitId) {
            if ((Location == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Location));
            }
            if ((Markings == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Markings));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Right));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Left));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Difference));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(PatientVisitId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Location, string Markings, decimal Right, decimal Left, decimal Difference, int PatientVisitId, int Original_RowId) {
            if ((Location == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Location));
            }
            if ((Markings == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Markings));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Right));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Left));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Difference));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(PatientVisitId));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_RowId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PatientVisitsTableAdapter _patientVisitsTableAdapter;
        
        private AncillaryProceduresTableAdapter _ancillaryProceduresTableAdapter;
        
        private DrugHistoriesTableAdapter _drugHistoriesTableAdapter;
        
        private ROMsTableAdapter _rOMsTableAdapter;
        
        private ROM2TableAdapter _rOM2TableAdapter;
        
        private SensoryAxesTableAdapter _sensoryAxesTableAdapter;
        
        private CranialNerveAssmtsTableAdapter _cranialNerveAssmtsTableAdapter;
        
        private CoordinationAssmtsTableAdapter _coordinationAssmtsTableAdapter;
        
        private MBMsTableAdapter _mBMsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PatientVisitsTableAdapter PatientVisitsTableAdapter {
            get {
                return this._patientVisitsTableAdapter;
            }
            set {
                this._patientVisitsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AncillaryProceduresTableAdapter AncillaryProceduresTableAdapter {
            get {
                return this._ancillaryProceduresTableAdapter;
            }
            set {
                this._ancillaryProceduresTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DrugHistoriesTableAdapter DrugHistoriesTableAdapter {
            get {
                return this._drugHistoriesTableAdapter;
            }
            set {
                this._drugHistoriesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ROMsTableAdapter ROMsTableAdapter {
            get {
                return this._rOMsTableAdapter;
            }
            set {
                this._rOMsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ROM2TableAdapter ROM2TableAdapter {
            get {
                return this._rOM2TableAdapter;
            }
            set {
                this._rOM2TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SensoryAxesTableAdapter SensoryAxesTableAdapter {
            get {
                return this._sensoryAxesTableAdapter;
            }
            set {
                this._sensoryAxesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CranialNerveAssmtsTableAdapter CranialNerveAssmtsTableAdapter {
            get {
                return this._cranialNerveAssmtsTableAdapter;
            }
            set {
                this._cranialNerveAssmtsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CoordinationAssmtsTableAdapter CoordinationAssmtsTableAdapter {
            get {
                return this._coordinationAssmtsTableAdapter;
            }
            set {
                this._coordinationAssmtsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MBMsTableAdapter MBMsTableAdapter {
            get {
                return this._mBMsTableAdapter;
            }
            set {
                this._mBMsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._patientVisitsTableAdapter != null) 
                            && (this._patientVisitsTableAdapter.Connection != null))) {
                    return this._patientVisitsTableAdapter.Connection;
                }
                if (((this._ancillaryProceduresTableAdapter != null) 
                            && (this._ancillaryProceduresTableAdapter.Connection != null))) {
                    return this._ancillaryProceduresTableAdapter.Connection;
                }
                if (((this._drugHistoriesTableAdapter != null) 
                            && (this._drugHistoriesTableAdapter.Connection != null))) {
                    return this._drugHistoriesTableAdapter.Connection;
                }
                if (((this._rOMsTableAdapter != null) 
                            && (this._rOMsTableAdapter.Connection != null))) {
                    return this._rOMsTableAdapter.Connection;
                }
                if (((this._rOM2TableAdapter != null) 
                            && (this._rOM2TableAdapter.Connection != null))) {
                    return this._rOM2TableAdapter.Connection;
                }
                if (((this._sensoryAxesTableAdapter != null) 
                            && (this._sensoryAxesTableAdapter.Connection != null))) {
                    return this._sensoryAxesTableAdapter.Connection;
                }
                if (((this._cranialNerveAssmtsTableAdapter != null) 
                            && (this._cranialNerveAssmtsTableAdapter.Connection != null))) {
                    return this._cranialNerveAssmtsTableAdapter.Connection;
                }
                if (((this._coordinationAssmtsTableAdapter != null) 
                            && (this._coordinationAssmtsTableAdapter.Connection != null))) {
                    return this._coordinationAssmtsTableAdapter.Connection;
                }
                if (((this._mBMsTableAdapter != null) 
                            && (this._mBMsTableAdapter.Connection != null))) {
                    return this._mBMsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._patientVisitsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ancillaryProceduresTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._drugHistoriesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rOMsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rOM2TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sensoryAxesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cranialNerveAssmtsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._coordinationAssmtsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mBMsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SoapDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._patientVisitsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PatientVisits.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._patientVisitsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ancillaryProceduresTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AncillaryProcedures.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ancillaryProceduresTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._drugHistoriesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DrugHistories.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._drugHistoriesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rOMsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ROMs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rOMsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rOM2TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ROM2.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rOM2TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sensoryAxesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SensoryAxes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sensoryAxesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cranialNerveAssmtsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CranialNerveAssmts.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cranialNerveAssmtsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._coordinationAssmtsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CoordinationAssmts.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._coordinationAssmtsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mBMsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MBMs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mBMsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SoapDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._patientVisitsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PatientVisits.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._patientVisitsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ancillaryProceduresTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AncillaryProcedures.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ancillaryProceduresTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._drugHistoriesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DrugHistories.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._drugHistoriesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rOMsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ROMs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rOMsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rOM2TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ROM2.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rOM2TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sensoryAxesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SensoryAxes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sensoryAxesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cranialNerveAssmtsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CranialNerveAssmts.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cranialNerveAssmtsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._coordinationAssmtsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CoordinationAssmts.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._coordinationAssmtsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mBMsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MBMs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mBMsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SoapDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mBMsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MBMs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mBMsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._coordinationAssmtsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CoordinationAssmts.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._coordinationAssmtsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cranialNerveAssmtsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CranialNerveAssmts.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cranialNerveAssmtsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sensoryAxesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SensoryAxes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sensoryAxesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rOM2TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ROM2.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rOM2TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rOMsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ROMs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rOMsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._drugHistoriesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DrugHistories.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._drugHistoriesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ancillaryProceduresTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AncillaryProcedures.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ancillaryProceduresTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._patientVisitsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PatientVisits.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._patientVisitsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SoapDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._patientVisitsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._patientVisitsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._ancillaryProceduresTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ancillaryProceduresTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._drugHistoriesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._drugHistoriesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rOMsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rOMsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rOM2TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rOM2TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sensoryAxesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sensoryAxesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cranialNerveAssmtsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cranialNerveAssmtsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._coordinationAssmtsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._coordinationAssmtsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mBMsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mBMsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._patientVisitsTableAdapter != null)) {
                    revertConnections.Add(this._patientVisitsTableAdapter, this._patientVisitsTableAdapter.Connection);
                    this._patientVisitsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._patientVisitsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._patientVisitsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._patientVisitsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._patientVisitsTableAdapter.Adapter);
                    }
                }
                if ((this._ancillaryProceduresTableAdapter != null)) {
                    revertConnections.Add(this._ancillaryProceduresTableAdapter, this._ancillaryProceduresTableAdapter.Connection);
                    this._ancillaryProceduresTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ancillaryProceduresTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ancillaryProceduresTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ancillaryProceduresTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ancillaryProceduresTableAdapter.Adapter);
                    }
                }
                if ((this._drugHistoriesTableAdapter != null)) {
                    revertConnections.Add(this._drugHistoriesTableAdapter, this._drugHistoriesTableAdapter.Connection);
                    this._drugHistoriesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._drugHistoriesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._drugHistoriesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._drugHistoriesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._drugHistoriesTableAdapter.Adapter);
                    }
                }
                if ((this._rOMsTableAdapter != null)) {
                    revertConnections.Add(this._rOMsTableAdapter, this._rOMsTableAdapter.Connection);
                    this._rOMsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rOMsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rOMsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rOMsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rOMsTableAdapter.Adapter);
                    }
                }
                if ((this._rOM2TableAdapter != null)) {
                    revertConnections.Add(this._rOM2TableAdapter, this._rOM2TableAdapter.Connection);
                    this._rOM2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rOM2TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rOM2TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rOM2TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rOM2TableAdapter.Adapter);
                    }
                }
                if ((this._sensoryAxesTableAdapter != null)) {
                    revertConnections.Add(this._sensoryAxesTableAdapter, this._sensoryAxesTableAdapter.Connection);
                    this._sensoryAxesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sensoryAxesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sensoryAxesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sensoryAxesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sensoryAxesTableAdapter.Adapter);
                    }
                }
                if ((this._cranialNerveAssmtsTableAdapter != null)) {
                    revertConnections.Add(this._cranialNerveAssmtsTableAdapter, this._cranialNerveAssmtsTableAdapter.Connection);
                    this._cranialNerveAssmtsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cranialNerveAssmtsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cranialNerveAssmtsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cranialNerveAssmtsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cranialNerveAssmtsTableAdapter.Adapter);
                    }
                }
                if ((this._coordinationAssmtsTableAdapter != null)) {
                    revertConnections.Add(this._coordinationAssmtsTableAdapter, this._coordinationAssmtsTableAdapter.Connection);
                    this._coordinationAssmtsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._coordinationAssmtsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._coordinationAssmtsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._coordinationAssmtsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._coordinationAssmtsTableAdapter.Adapter);
                    }
                }
                if ((this._mBMsTableAdapter != null)) {
                    revertConnections.Add(this._mBMsTableAdapter, this._mBMsTableAdapter.Connection);
                    this._mBMsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mBMsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mBMsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mBMsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mBMsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._patientVisitsTableAdapter != null)) {
                    this._patientVisitsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._patientVisitsTableAdapter]));
                    this._patientVisitsTableAdapter.Transaction = null;
                }
                if ((this._ancillaryProceduresTableAdapter != null)) {
                    this._ancillaryProceduresTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ancillaryProceduresTableAdapter]));
                    this._ancillaryProceduresTableAdapter.Transaction = null;
                }
                if ((this._drugHistoriesTableAdapter != null)) {
                    this._drugHistoriesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._drugHistoriesTableAdapter]));
                    this._drugHistoriesTableAdapter.Transaction = null;
                }
                if ((this._rOMsTableAdapter != null)) {
                    this._rOMsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rOMsTableAdapter]));
                    this._rOMsTableAdapter.Transaction = null;
                }
                if ((this._rOM2TableAdapter != null)) {
                    this._rOM2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rOM2TableAdapter]));
                    this._rOM2TableAdapter.Transaction = null;
                }
                if ((this._sensoryAxesTableAdapter != null)) {
                    this._sensoryAxesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sensoryAxesTableAdapter]));
                    this._sensoryAxesTableAdapter.Transaction = null;
                }
                if ((this._cranialNerveAssmtsTableAdapter != null)) {
                    this._cranialNerveAssmtsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cranialNerveAssmtsTableAdapter]));
                    this._cranialNerveAssmtsTableAdapter.Transaction = null;
                }
                if ((this._coordinationAssmtsTableAdapter != null)) {
                    this._coordinationAssmtsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._coordinationAssmtsTableAdapter]));
                    this._coordinationAssmtsTableAdapter.Transaction = null;
                }
                if ((this._mBMsTableAdapter != null)) {
                    this._mBMsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mBMsTableAdapter]));
                    this._mBMsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591